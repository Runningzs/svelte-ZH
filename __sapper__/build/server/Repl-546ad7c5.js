'use strict';

var index = require('./index-eb65fe33.js');
var index$2 = require('./index-9f24c7af.js');
var yootils = require('yootils');

/* node_modules\@sveltejs\svelte-repl\src\SplitPane.svelte generated by Svelte v3.12.0 */

const css = {
	code: ".container.svelte-u4dj25{position:relative;width:100%;height:100%}.pane.svelte-u4dj25{position:relative;float:left;width:100%;height:100%;overflow:auto}.mousecatcher.svelte-u4dj25{position:absolute;left:0;top:0;width:100%;height:100%;background:rgba(255,255,255,.01)}.divider.svelte-u4dj25{position:absolute;z-index:10;display:none}.divider.svelte-u4dj25::after{content:'';position:absolute;background-color:var(--second)}.horizontal.svelte-u4dj25{padding:0 8px;width:0;height:100%;cursor:ew-resize}.horizontal.svelte-u4dj25::after{left:8px;top:0;width:1px;height:100%}.vertical.svelte-u4dj25{padding:8px 0;width:100%;height:0;cursor:ns-resize}.vertical.svelte-u4dj25::after{top:8px;left:0;width:100%;height:1px}.left.svelte-u4dj25,.right.svelte-u4dj25,.divider.svelte-u4dj25{display:block}.left.svelte-u4dj25,.right.svelte-u4dj25{height:100%;float:left}.top.svelte-u4dj25,.bottom.svelte-u4dj25{position:absolute;width:100%}.top.svelte-u4dj25{top:0}.bottom.svelte-u4dj25{bottom:0}",
	map: "{\"version\":3,\"file\":\"SplitPane.svelte\",\"sources\":[\"SplitPane.svelte\"],\"sourcesContent\":[\"<script>\\r\\n\\timport * as yootils from 'yootils';\\r\\n\\timport { createEventDispatcher } from 'svelte';\\r\\n\\r\\n\\tconst dispatch = createEventDispatcher();\\r\\n\\r\\n\\texport let type;\\r\\n\\texport let pos = 50;\\r\\n\\texport let fixed = false;\\r\\n\\texport let buffer = 40;\\r\\n\\texport let min;\\r\\n\\texport let max;\\r\\n\\r\\n\\tlet w;\\r\\n\\tlet h;\\r\\n\\t$: size = type === 'vertical' ? h : w;\\r\\n\\r\\n\\t$: min = 100 * (buffer / size);\\r\\n\\t$: max = 100 - min;\\r\\n\\t$: pos = yootils.clamp(pos, min, max);\\r\\n\\r\\n\\tconst refs = {};\\r\\n\\r\\n\\tlet dragging = false;\\r\\n\\r\\n\\tfunction setPos(event) {\\r\\n\\t\\tconst { top, left } = refs.container.getBoundingClientRect();\\r\\n\\r\\n\\t\\tconst px = type === 'vertical'\\r\\n\\t\\t\\t? (event.clientY - top)\\r\\n\\t\\t\\t: (event.clientX - left);\\r\\n\\r\\n\\t\\tpos = 100 * px / size;\\r\\n\\t\\tdispatch('change');\\r\\n\\t}\\r\\n\\r\\n\\tfunction drag(node, callback) {\\r\\n\\t\\tconst mousedown = event => {\\r\\n\\t\\t\\tif (event.which !== 1) return;\\r\\n\\r\\n\\t\\t\\tevent.preventDefault();\\r\\n\\r\\n\\t\\t\\tdragging = true;\\r\\n\\r\\n\\t\\t\\tconst onmouseup = () => {\\r\\n\\t\\t\\t\\tdragging = false;\\r\\n\\r\\n\\t\\t\\t\\twindow.removeEventListener('mousemove', callback, false);\\r\\n\\t\\t\\t\\twindow.removeEventListener('mouseup', onmouseup, false);\\r\\n\\t\\t\\t};\\r\\n\\r\\n\\t\\t\\twindow.addEventListener('mousemove', callback, false);\\r\\n\\t\\t\\twindow.addEventListener('mouseup', onmouseup, false);\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tnode.addEventListener('mousedown', mousedown, false);\\r\\n\\r\\n\\t\\treturn {\\r\\n\\t\\t\\tdestroy() {\\r\\n\\t\\t\\t\\tnode.removeEventListener('mousedown', onmousedown, false);\\r\\n\\t\\t\\t}\\r\\n\\t\\t};\\r\\n\\t}\\r\\n\\r\\n\\t$: side = type === 'horizontal' ? 'left' : 'top';\\r\\n\\t$: dimension = type === 'horizontal' ? 'width' : 'height';\\r\\n</script>\\r\\n\\r\\n<style>\\r\\n\\t.container {\\r\\n\\t\\tposition: relative;\\r\\n\\t\\twidth: 100%;\\r\\n\\t\\theight: 100%;\\r\\n\\t}\\r\\n\\r\\n\\t.pane {\\r\\n\\t\\tposition: relative;\\r\\n\\t\\tfloat: left;\\r\\n\\t\\twidth: 100%;\\r\\n\\t\\theight: 100%;\\r\\n\\t\\toverflow: auto;\\r\\n\\t}\\r\\n\\r\\n\\t.mousecatcher {\\r\\n\\t\\tposition: absolute;\\r\\n\\t\\tleft: 0;\\r\\n\\t\\ttop: 0;\\r\\n\\t\\twidth: 100%;\\r\\n\\t\\theight: 100%;\\r\\n\\t\\tbackground: rgba(255,255,255,.01);\\r\\n\\t}\\r\\n\\r\\n\\t.divider {\\r\\n\\t\\tposition: absolute;\\r\\n\\t\\tz-index: 10;\\r\\n\\t\\tdisplay: none;\\r\\n\\t}\\r\\n\\r\\n\\t.divider::after {\\r\\n\\t\\tcontent: '';\\r\\n\\t\\tposition: absolute;\\r\\n\\t\\t/* background-color: #eee; */\\r\\n\\t\\tbackground-color: var(--second);\\r\\n\\t}\\r\\n\\r\\n\\t.horizontal {\\r\\n\\t\\tpadding: 0 8px;\\r\\n\\t\\twidth: 0;\\r\\n\\t\\theight: 100%;\\r\\n\\t\\tcursor: ew-resize;\\r\\n\\t}\\r\\n\\r\\n\\t.horizontal::after {\\r\\n\\t\\tleft: 8px;\\r\\n\\t\\ttop: 0;\\r\\n\\t\\twidth: 1px;\\r\\n\\t\\theight: 100%;\\r\\n\\t}\\r\\n\\r\\n\\t.vertical {\\r\\n\\t\\tpadding: 8px 0;\\r\\n\\t\\twidth: 100%;\\r\\n\\t\\theight: 0;\\r\\n\\t\\tcursor: ns-resize;\\r\\n\\t}\\r\\n\\r\\n\\t.vertical::after {\\r\\n\\t\\ttop: 8px;\\r\\n\\t\\tleft: 0;\\r\\n\\t\\twidth: 100%;\\r\\n\\t\\theight: 1px;\\r\\n\\t}\\r\\n\\r\\n\\t.left, .right, .divider {\\r\\n\\t\\tdisplay: block;\\r\\n\\t}\\r\\n\\r\\n\\t.left, .right {\\r\\n\\t\\theight: 100%;\\r\\n\\t\\tfloat: left;\\r\\n\\t}\\r\\n\\r\\n\\t.top, .bottom {\\r\\n\\t\\tposition: absolute;\\r\\n\\t\\twidth: 100%;\\r\\n\\t}\\r\\n\\r\\n\\t.top { top: 0; }\\r\\n\\t.bottom { bottom: 0; }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"container\\\" bind:this={refs.container} bind:clientWidth={w} bind:clientHeight={h}>\\r\\n\\t<div class=\\\"pane\\\" style=\\\"{dimension}: {pos}%;\\\">\\r\\n\\t\\t<slot name=\\\"a\\\"></slot>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div class=\\\"pane\\\" style=\\\"{dimension}: {100 - (pos)}%;\\\">\\r\\n\\t\\t<slot name=\\\"b\\\"></slot>\\r\\n\\t</div>\\r\\n\\r\\n\\t{#if !fixed}\\r\\n\\t\\t<div class=\\\"{type} divider\\\" style=\\\"{side}: calc({pos}% - 8px)\\\" use:drag={setPos}></div>\\r\\n\\t{/if}\\r\\n</div>\\r\\n\\r\\n{#if dragging}\\r\\n\\t<div class=\\\"mousecatcher\\\"></div>\\r\\n{/if}\"],\"names\":[],\"mappings\":\"AAqEC,UAAU,cAAC,CAAC,AACX,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,AACb,CAAC,AAED,KAAK,cAAC,CAAC,AACN,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,IAAI,CACX,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,QAAQ,CAAE,IAAI,AACf,CAAC,AAED,aAAa,cAAC,CAAC,AACd,QAAQ,CAAE,QAAQ,CAClB,IAAI,CAAE,CAAC,CACP,GAAG,CAAE,CAAC,CACN,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,AAClC,CAAC,AAED,QAAQ,cAAC,CAAC,AACT,QAAQ,CAAE,QAAQ,CAClB,OAAO,CAAE,EAAE,CACX,OAAO,CAAE,IAAI,AACd,CAAC,AAED,sBAAQ,OAAO,AAAC,CAAC,AAChB,OAAO,CAAE,EAAE,CACX,QAAQ,CAAE,QAAQ,CAElB,gBAAgB,CAAE,IAAI,QAAQ,CAAC,AAChC,CAAC,AAED,WAAW,cAAC,CAAC,AACZ,OAAO,CAAE,CAAC,CAAC,GAAG,CACd,KAAK,CAAE,CAAC,CACR,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,SAAS,AAClB,CAAC,AAED,yBAAW,OAAO,AAAC,CAAC,AACnB,IAAI,CAAE,GAAG,CACT,GAAG,CAAE,CAAC,CACN,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,IAAI,AACb,CAAC,AAED,SAAS,cAAC,CAAC,AACV,OAAO,CAAE,GAAG,CAAC,CAAC,CACd,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,CAAC,CACT,MAAM,CAAE,SAAS,AAClB,CAAC,AAED,uBAAS,OAAO,AAAC,CAAC,AACjB,GAAG,CAAE,GAAG,CACR,IAAI,CAAE,CAAC,CACP,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,GAAG,AACZ,CAAC,AAED,mBAAK,CAAE,oBAAM,CAAE,QAAQ,cAAC,CAAC,AACxB,OAAO,CAAE,KAAK,AACf,CAAC,AAED,mBAAK,CAAE,MAAM,cAAC,CAAC,AACd,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,AACZ,CAAC,AAED,kBAAI,CAAE,OAAO,cAAC,CAAC,AACd,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,IAAI,AACZ,CAAC,AAED,IAAI,cAAC,CAAC,AAAC,GAAG,CAAE,CAAC,AAAE,CAAC,AAChB,OAAO,cAAC,CAAC,AAAC,MAAM,CAAE,CAAC,AAAE,CAAC\"}"
};

const SplitPane = index.create_ssr_component(($$result, $$props, $$bindings, $$slots) => {

	let { type, pos = 50, fixed = false, buffer = 40, min, max } = $$props;

	let w;
	let h;

	const refs = {};

	let dragging = false;

	if ($$props.type === void 0 && $$bindings.type && type !== void 0) $$bindings.type(type);
	if ($$props.pos === void 0 && $$bindings.pos && pos !== void 0) $$bindings.pos(pos);
	if ($$props.fixed === void 0 && $$bindings.fixed && fixed !== void 0) $$bindings.fixed(fixed);
	if ($$props.buffer === void 0 && $$bindings.buffer && buffer !== void 0) $$bindings.buffer(buffer);
	if ($$props.min === void 0 && $$bindings.min && min !== void 0) $$bindings.min(min);
	if ($$props.max === void 0 && $$bindings.max && max !== void 0) $$bindings.max(max);

	$$result.css.add(css);

	let size = type === 'vertical' ? h : w;
	min = 100 * (buffer / size);
	max = 100 - min;
	pos = yootils.clamp(pos, min, max);
	let side = type === 'horizontal' ? 'left' : 'top';
	let dimension = type === 'horizontal' ? 'width' : 'height';

	return `<div class="container svelte-u4dj25"${index.add_attribute("this", refs.container, 1)}>
		<div class="pane svelte-u4dj25" style="${index.escape(dimension)}: ${index.escape(pos)}%;">
			${$$slots.a ? $$slots.a({}) : ``}
		</div>

		<div class="pane svelte-u4dj25" style="${index.escape(dimension)}: ${index.escape(100 - (pos))}%;">
			${$$slots.b ? $$slots.b({}) : ``}
		</div>

		${ !fixed ? `<div class="${index.escape(type)} divider svelte-u4dj25" style="${index.escape(side)}: calc(${index.escape(pos)}% - 8px)"></div>` : `` }
	</div>

	${ dragging ? `<div class="mousecatcher svelte-u4dj25"></div>` : `` }`;
});

/* node_modules\@sveltejs\svelte-repl\src\Input\ComponentSelector.svelte generated by Svelte v3.12.0 */

const css$1 = {
	code: ".component-selector.svelte-1d08i7a{position:relative;border-bottom:1px solid #eee;overflow:hidden}.file-tabs.svelte-1d08i7a{border:none;margin:0;white-space:nowrap;overflow-x:auto;overflow-y:hidden;height:10em}.file-tabs.svelte-1d08i7a .button.svelte-1d08i7a,.file-tabs.svelte-1d08i7a button.svelte-1d08i7a{position:relative;display:inline-block;font:400 12px/1.5 var(--font);background:white;border:none;border-bottom:3px solid transparent;padding:12px 14px 8px 8px;margin:0;color:#999;border-radius:0}.file-tabs.svelte-1d08i7a .button.svelte-1d08i7a:first-child{padding-left:12px}.file-tabs.svelte-1d08i7a .button.active.svelte-1d08i7a{color:#333;border-bottom:3px solid var(--prime)}.editable.svelte-1d08i7a,.uneditable.svelte-1d08i7a,.input-sizer.svelte-1d08i7a,input.svelte-1d08i7a{display:inline-block;position:relative;line-height:1}.input-sizer.svelte-1d08i7a{color:#ccc}input.svelte-1d08i7a{position:absolute;width:100%;left:8px;top:12px;font:400 12px/1.5 var(--font);border:none;color:var(--flash);outline:none;background-color:transparent}.duplicate.svelte-1d08i7a{color:var(--prime)}.remove.svelte-1d08i7a{position:absolute;display:none;right:1px;top:4px;width:16px;text-align:right;padding:12px 0 12px 5px;font-size:8px;cursor:pointer}.remove.svelte-1d08i7a:hover{color:var(--flash)}.file-tabs.svelte-1d08i7a .button.active .editable.svelte-1d08i7a{cursor:text}.file-tabs.svelte-1d08i7a .button.active .remove.svelte-1d08i7a{display:block}.add-new.svelte-1d08i7a{position:absolute;left:0;top:0;padding:12px 10px 8px 0 !important;height:40px;text-align:center;background-color:white}.add-new.svelte-1d08i7a:hover{color:var(--flash) !important}svg.svelte-1d08i7a{position:relative;overflow:hidden;vertical-align:middle;-o-object-fit:contain;object-fit:contain;-webkit-transform-origin:center center;transform-origin:center center;stroke:currentColor;stroke-width:2;stroke-linecap:round;stroke-linejoin:round;fill:none}",
	map: "{\"version\":3,\"file\":\"ComponentSelector.svelte\",\"sources\":[\"ComponentSelector.svelte\"],\"sourcesContent\":[\"<script>\\r\\n\\timport { getContext } from 'svelte';\\r\\n\\r\\n\\texport let handle_select;\\r\\n\\r\\n\\tconst { components, selected, request_focus, rebundle } = getContext('REPL');\\r\\n\\r\\n\\tlet editing = null;\\r\\n\\r\\n\\tfunction selectComponent(component) {\\r\\n\\t\\tif ($selected !== component) {\\r\\n\\t\\t\\tediting = null;\\r\\n\\t\\t\\thandle_select(component);\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tfunction editTab(component) {\\r\\n\\t\\tif ($selected === component) {\\r\\n\\t\\t\\tediting = $selected;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tfunction closeEdit() {\\r\\n\\t\\tconst match = /(.+)\\\\.(svelte|js)$/.exec($selected.name);\\r\\n\\t\\t$selected.name = match ? match[1] : $selected.name;\\r\\n\\t\\tif (isComponentNameUsed($selected)) {\\r\\n\\t\\t\\t$selected.name = $selected.name + '_1';\\r\\n\\t\\t}\\r\\n\\t\\tif (match && match[2]) $selected.type = match[2];\\r\\n\\r\\n\\r\\n\\t\\tediting = null;\\r\\n\\r\\n\\t\\t// re-select, in case the type changed\\r\\n\\t\\thandle_select($selected);\\r\\n\\r\\n\\t\\tcomponents = components; // TODO necessary?\\r\\n\\r\\n\\t\\t// focus the editor, but wait a beat (so key events aren't misdirected)\\r\\n\\t\\tsetTimeout(request_focus);\\r\\n\\r\\n\\t\\trebundle();\\r\\n\\t}\\r\\n\\r\\n\\tfunction remove(component) {\\r\\n\\t\\tlet result = confirm(`Are you sure you want to delete ${component.name}.${component.type}?`);\\r\\n\\r\\n\\t\\tif (result) {\\r\\n\\t\\t\\tconst index = $components.indexOf(component);\\r\\n\\r\\n\\t\\t\\tif (~index) {\\r\\n\\t\\t\\t\\tcomponents.set($components.slice(0, index).concat($components.slice(index + 1)));\\r\\n\\t\\t\\t} else {\\r\\n\\t\\t\\t\\tconsole.error(`Could not find component! That's... odd`);\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\thandle_select($components[index] || $components[$components.length - 1]);\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tfunction selectInput(event) {\\r\\n\\t\\tsetTimeout(() => {\\r\\n\\t\\t\\tevent.target.select();\\r\\n\\t\\t});\\r\\n\\t}\\r\\n\\r\\n\\tlet uid = 1;\\r\\n\\r\\n\\tfunction addNew() {\\r\\n\\t\\tconst component = {\\r\\n\\t\\t\\tname: uid++ ? `Component${uid}` : 'Component1',\\r\\n\\t\\t\\ttype: 'svelte',\\r\\n\\t\\t\\tsource: ''\\r\\n\\t\\t};\\r\\n\\r\\n\\t\\tediting = component;\\r\\n\\r\\n\\t\\tsetTimeout(() => {\\r\\n\\t\\t\\t// TODO we can do this without IDs\\r\\n\\t\\t\\tdocument.getElementById(component.name).scrollIntoView(false);\\r\\n\\t\\t});\\r\\n\\r\\n\\t\\tcomponents.update(components => components.concat(component));\\r\\n\\t\\thandle_select(component);\\r\\n\\t}\\r\\n\\r\\n\\tfunction isComponentNameUsed(editing) {\\r\\n\\t\\treturn $components.find(component => component !== editing && component.name === editing.name);\\r\\n\\t}\\r\\n</script>\\r\\n\\r\\n<style>\\r\\n\\t.component-selector {\\r\\n\\t\\tposition: relative;\\r\\n\\t\\tborder-bottom: 1px solid #eee;\\r\\n\\t\\toverflow: hidden;\\r\\n\\t}\\r\\n\\r\\n\\t.file-tabs {\\r\\n\\t\\tborder: none;\\r\\n\\t\\tmargin: 0;\\r\\n\\t\\twhite-space: nowrap;\\r\\n\\t\\toverflow-x: auto;\\r\\n\\t\\toverflow-y: hidden;\\r\\n\\t\\theight: 10em;\\r\\n\\t}\\r\\n\\r\\n\\t.file-tabs .button, .file-tabs button {\\r\\n\\t\\tposition: relative;\\r\\n\\t\\tdisplay: inline-block;\\r\\n\\t\\tfont: 400 12px/1.5 var(--font);\\r\\n\\t\\tbackground: white;\\r\\n\\t\\tborder: none;\\r\\n\\t\\tborder-bottom: 3px solid transparent;\\r\\n\\t\\tpadding: 12px 14px 8px 8px;\\r\\n\\t\\tmargin: 0;\\r\\n\\t\\tcolor: #999;\\r\\n\\t\\tborder-radius: 0;\\r\\n\\t}\\r\\n\\r\\n\\t.file-tabs .button:first-child {\\r\\n\\t\\tpadding-left: 12px;\\r\\n\\t}\\r\\n\\r\\n\\t.file-tabs .button.active {\\r\\n\\t\\t/* color: var(--second); */\\r\\n\\t\\tcolor: #333;\\r\\n\\t\\tborder-bottom: 3px solid var(--prime);\\r\\n\\t}\\r\\n\\r\\n\\t.editable, .uneditable, .input-sizer, input {\\r\\n\\t\\tdisplay: inline-block;\\r\\n\\t\\tposition: relative;\\r\\n\\t\\tline-height: 1;\\r\\n\\t}\\r\\n\\r\\n\\t.input-sizer {\\r\\n\\t\\tcolor: #ccc;\\r\\n\\t}\\r\\n\\r\\n\\tinput {\\r\\n\\t\\tposition: absolute;\\r\\n\\t\\twidth: 100%;\\r\\n\\t\\tleft: 8px;\\r\\n\\t\\ttop: 12px;\\r\\n\\t\\tfont: 400 12px/1.5 var(--font);\\r\\n\\t\\tborder: none;\\r\\n\\t\\tcolor: var(--flash);\\r\\n\\t\\toutline: none;\\r\\n\\t\\tbackground-color: transparent;\\r\\n\\t}\\r\\n\\r\\n\\t.duplicate {\\r\\n\\t\\tcolor: var(--prime);\\r\\n\\t}\\r\\n\\r\\n\\t.remove {\\r\\n\\t\\tposition: absolute;\\r\\n\\t\\tdisplay: none;\\r\\n\\t\\tright: 1px;\\r\\n\\t\\ttop: 4px;\\r\\n\\t\\twidth: 16px;\\r\\n\\t\\ttext-align: right;\\r\\n\\t\\tpadding: 12px 0 12px 5px;\\r\\n\\t\\tfont-size: 8px;\\r\\n\\t\\tcursor: pointer;\\r\\n\\t}\\r\\n\\r\\n\\t.remove:hover {\\r\\n\\t\\tcolor: var(--flash);\\r\\n\\t}\\r\\n\\r\\n\\t.file-tabs .button.active .editable {\\r\\n\\t\\tcursor: text;\\r\\n\\t}\\r\\n\\r\\n\\t.file-tabs .button.active .remove {\\r\\n\\t\\tdisplay: block;\\r\\n\\t}\\r\\n\\r\\n\\t.add-new {\\r\\n\\t\\tposition: absolute;\\r\\n\\t\\tleft: 0;\\r\\n\\t\\ttop: 0;\\r\\n\\t\\tpadding: 12px 10px 8px 0 !important;\\r\\n\\t\\theight: 40px;\\r\\n\\t\\ttext-align: center;\\r\\n\\t\\tbackground-color: white;\\r\\n\\t}\\r\\n\\r\\n\\t.add-new:hover {\\r\\n\\t\\tcolor: var(--flash) !important;\\r\\n\\t}\\r\\n\\r\\n\\tsvg {\\r\\n\\t\\tposition: relative;\\r\\n\\t\\toverflow: hidden;\\r\\n\\t\\tvertical-align: middle;\\r\\n\\t\\t-o-object-fit: contain;\\r\\n\\t\\tobject-fit: contain;\\r\\n\\t\\t-webkit-transform-origin: center center;\\r\\n\\t\\ttransform-origin: center center;\\r\\n\\r\\n\\t\\tstroke: currentColor;\\r\\n\\t\\tstroke-width: 2;\\r\\n\\t\\tstroke-linecap: round;\\r\\n\\t\\tstroke-linejoin: round;\\r\\n\\t\\tfill: none;\\r\\n\\t}\\r\\n</style>\\r\\n\\r\\n<div class=\\\"component-selector\\\">\\r\\n\\t{#if $components.length}\\r\\n\\t\\t<div class=\\\"file-tabs\\\" on:dblclick=\\\"{addNew}\\\">\\r\\n\\t\\t\\t{#each $components as component, index}\\r\\n\\t\\t\\t\\t<div\\r\\n\\t\\t\\t\\t\\tid={component.name}\\r\\n\\t\\t\\t\\t\\tclass=\\\"button\\\"\\r\\n\\t\\t\\t\\t\\trole=\\\"button\\\"\\r\\n\\t\\t\\t\\t\\tclass:active=\\\"{component === $selected}\\\"\\r\\n\\t\\t\\t\\t\\ton:click=\\\"{() => selectComponent(component)}\\\"\\r\\n\\t\\t\\t\\t\\ton:dblclick=\\\"{e => e.stopPropagation()}\\\"\\r\\n\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t{#if component.name == 'App' && index === 0}\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"uneditable\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tApp.svelte\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t{:else}\\r\\n\\t\\t\\t\\t\\t\\t{#if component === editing}\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"input-sizer\\\">{editing.name + (/\\\\./.test(editing.name) ? '' : `.${editing.type}`)}</span>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<!-- svelte-ignore a11y-autofocus -->\\r\\n\\t\\t\\t\\t\\t\\t\\t<input\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tautofocus\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tspellcheck={false}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tbind:value={editing.name}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\ton:focus={selectInput}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\ton:blur={closeEdit}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\ton:keydown={e => e.which === 13 && !isComponentNameUsed(editing) && e.target.blur()}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tclass:duplicate={isComponentNameUsed(editing)}\\r\\n\\t\\t\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t\\t{:else}\\r\\n\\t\\t\\t\\t\\t\\t\\t<div\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"editable\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\ttitle=\\\"edit component name\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\ton:click=\\\"{() => editTab(component)}\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{component.name}.{component.type}\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"remove\\\" on:click=\\\"{() => remove(component)}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<svg width=\\\"12\\\" height=\\\"12\\\" viewBox=\\\"0 0 24 24\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<line stroke=\\\"#999\\\" x1='18' y1='6' x2='6' y2='18' />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<line stroke=\\\"#999\\\" x1='6' y1='6' x2='18' y2='18' />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</svg>\\r\\n\\t\\t\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t\\t\\t{/if}\\r\\n\\t\\t\\t\\t\\t{/if}\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t{/each}\\r\\n\\r\\n\\t\\t\\t<button class=\\\"add-new\\\" on:click={addNew} title=\\\"add new component\\\">\\r\\n\\t\\t\\t\\t<svg width=\\\"12\\\" height=\\\"12\\\" viewBox=\\\"0 0 24 24\\\">\\r\\n\\t\\t\\t\\t\\t<line stroke=\\\"#999\\\" x1='12' y1='5' x2='12' y2='19' />\\r\\n\\t\\t\\t\\t\\t<line stroke=\\\"#999\\\" x1='5' y1='12' x2='19' y2='12' />\\r\\n\\t\\t\\t\\t</svg>\\r\\n\\t\\t\\t</button>\\r\\n\\t\\t</div>\\r\\n\\t{/if}\\r\\n</div>\\r\\n\"],\"names\":[],\"mappings\":\"AA4FC,mBAAmB,eAAC,CAAC,AACpB,QAAQ,CAAE,QAAQ,CAClB,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CAC7B,QAAQ,CAAE,MAAM,AACjB,CAAC,AAED,UAAU,eAAC,CAAC,AACX,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,CAAC,CACT,WAAW,CAAE,MAAM,CACnB,UAAU,CAAE,IAAI,CAChB,UAAU,CAAE,MAAM,CAClB,MAAM,CAAE,IAAI,AACb,CAAC,AAED,yBAAU,CAAC,sBAAO,CAAE,yBAAU,CAAC,MAAM,eAAC,CAAC,AACtC,QAAQ,CAAE,QAAQ,CAClB,OAAO,CAAE,YAAY,CACrB,IAAI,CAAE,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,CAC9B,UAAU,CAAE,KAAK,CACjB,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,WAAW,CACpC,OAAO,CAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAC1B,MAAM,CAAE,CAAC,CACT,KAAK,CAAE,IAAI,CACX,aAAa,CAAE,CAAC,AACjB,CAAC,AAED,yBAAU,CAAC,sBAAO,YAAY,AAAC,CAAC,AAC/B,YAAY,CAAE,IAAI,AACnB,CAAC,AAED,yBAAU,CAAC,OAAO,OAAO,eAAC,CAAC,AAE1B,KAAK,CAAE,IAAI,CACX,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,AACtC,CAAC,AAED,wBAAS,CAAE,0BAAW,CAAE,2BAAY,CAAE,KAAK,eAAC,CAAC,AAC5C,OAAO,CAAE,YAAY,CACrB,QAAQ,CAAE,QAAQ,CAClB,WAAW,CAAE,CAAC,AACf,CAAC,AAED,YAAY,eAAC,CAAC,AACb,KAAK,CAAE,IAAI,AACZ,CAAC,AAED,KAAK,eAAC,CAAC,AACN,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,IAAI,CACX,IAAI,CAAE,GAAG,CACT,GAAG,CAAE,IAAI,CACT,IAAI,CAAE,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,CAC9B,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,OAAO,CAAC,CACnB,OAAO,CAAE,IAAI,CACb,gBAAgB,CAAE,WAAW,AAC9B,CAAC,AAED,UAAU,eAAC,CAAC,AACX,KAAK,CAAE,IAAI,OAAO,CAAC,AACpB,CAAC,AAED,OAAO,eAAC,CAAC,AACR,QAAQ,CAAE,QAAQ,CAClB,OAAO,CAAE,IAAI,CACb,KAAK,CAAE,GAAG,CACV,GAAG,CAAE,GAAG,CACR,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,KAAK,CACjB,OAAO,CAAE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CACxB,SAAS,CAAE,GAAG,CACd,MAAM,CAAE,OAAO,AAChB,CAAC,AAED,sBAAO,MAAM,AAAC,CAAC,AACd,KAAK,CAAE,IAAI,OAAO,CAAC,AACpB,CAAC,AAED,yBAAU,CAAC,OAAO,OAAO,CAAC,SAAS,eAAC,CAAC,AACpC,MAAM,CAAE,IAAI,AACb,CAAC,AAED,yBAAU,CAAC,OAAO,OAAO,CAAC,OAAO,eAAC,CAAC,AAClC,OAAO,CAAE,KAAK,AACf,CAAC,AAED,QAAQ,eAAC,CAAC,AACT,QAAQ,CAAE,QAAQ,CAClB,IAAI,CAAE,CAAC,CACP,GAAG,CAAE,CAAC,CACN,OAAO,CAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,UAAU,CACnC,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,MAAM,CAClB,gBAAgB,CAAE,KAAK,AACxB,CAAC,AAED,uBAAQ,MAAM,AAAC,CAAC,AACf,KAAK,CAAE,IAAI,OAAO,CAAC,CAAC,UAAU,AAC/B,CAAC,AAED,GAAG,eAAC,CAAC,AACJ,QAAQ,CAAE,QAAQ,CAClB,QAAQ,CAAE,MAAM,CAChB,cAAc,CAAE,MAAM,CACtB,aAAa,CAAE,OAAO,CACtB,UAAU,CAAE,OAAO,CACnB,wBAAwB,CAAE,MAAM,CAAC,MAAM,CACvC,gBAAgB,CAAE,MAAM,CAAC,MAAM,CAE/B,MAAM,CAAE,YAAY,CACpB,YAAY,CAAE,CAAC,CACf,cAAc,CAAE,KAAK,CACrB,eAAe,CAAE,KAAK,CACtB,IAAI,CAAE,IAAI,AACX,CAAC\"}"
};

const ComponentSelector = index.create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let $selected, $components;

	let { handle_select } = $$props;

	const { components, selected, request_focus, rebundle } = index.getContext('REPL'); $components = index.get_store_value(components); $selected = index.get_store_value(selected);

	let editing = null;

	function isComponentNameUsed(editing) {
		return $components.find(component => component !== editing && component.name === editing.name);
	}

	if ($$props.handle_select === void 0 && $$bindings.handle_select && handle_select !== void 0) $$bindings.handle_select(handle_select);

	$$result.css.add(css$1);

	$selected = index.get_store_value(selected);
	$components = index.get_store_value(components);

	return `<div class="component-selector svelte-1d08i7a">
		${ $components.length ? `<div class="file-tabs svelte-1d08i7a">
				${index.each($components, (component, index$1) => `<div${index.add_attribute("id", component.name, 0)} class="${[`button svelte-1d08i7a`, component === $selected ? "active" : ""].join(' ').trim() }" role="button">
						${ component.name == 'App' && index$1 === 0 ? `<div class="uneditable svelte-1d08i7a">
								App.svelte
							</div>` : `${ component === editing ? `<span class="input-sizer svelte-1d08i7a">${index.escape(editing.name + (/\./.test(editing.name) ? '' : `.${editing.type}`))}</span>


								<input autofocus${ "" } class="${[`svelte-1d08i7a`, isComponentNameUsed(editing) ? "duplicate" : ""].join(' ').trim() }"${index.add_attribute("value", editing.name, 1)}>` : `<div class="editable svelte-1d08i7a" title="edit component name">
									${index.escape(component.name)}.${index.escape(component.type)}
								</div>

								<span class="remove svelte-1d08i7a">
									<svg width="12" height="12" viewBox="0 0 24 24" class="svelte-1d08i7a">
										<line stroke="#999" x1="18" y1="6" x2="6" y2="18"></line>
										<line stroke="#999" x1="6" y1="6" x2="18" y2="18"></line>
									</svg>
								</span>` }` }
					</div>`)}

				<button class="add-new svelte-1d08i7a" title="add new component">
					<svg width="12" height="12" viewBox="0 0 24 24" class="svelte-1d08i7a">
						<line stroke="#999" x1="12" y1="5" x2="12" y2="19"></line>
						<line stroke="#999" x1="5" y1="12" x2="19" y2="12"></line>
					</svg>
				</button>
			</div>` : `` }
	</div>`;
});

const is_browser = typeof window !== 'undefined';

/* node_modules\@sveltejs\svelte-repl\src\Message.svelte generated by Svelte v3.12.0 */

const css$2 = {
	code: ".message.svelte-epahwt{position:relative;color:white;padding:12px 16px 12px 44px;font:400 12px/1.7 var(--font);margin:0;border-top:1px solid white}.navigable.svelte-epahwt{cursor:pointer}.message.svelte-epahwt::before{content:'!';position:absolute;left:12px;top:10px;text-align:center;line-height:1;padding:4px;border-radius:50%;color:white;border:2px solid white;box-sizing:content-box;width:10px;height:10px;font-size:11px;font-weight:700}.truncate.svelte-epahwt{white-space:pre;overflow-x:hidden;text-overflow:ellipsis}p.svelte-epahwt{margin:0}.error.svelte-epahwt{background-color:#da106e}.warning.svelte-epahwt{background-color:#e47e0a}.info.svelte-epahwt{background-color:var(--second)}",
	map: "{\"version\":3,\"file\":\"Message.svelte\",\"sources\":[\"Message.svelte\"],\"sourcesContent\":[\"<script>\\r\\n\\timport { getContext } from 'svelte';\\r\\n\\timport { slide } from 'svelte/transition';\\r\\n\\r\\n\\tconst { navigate } = getContext('REPL');\\r\\n\\r\\n\\texport let kind;\\r\\n\\texport let details = null;\\r\\n\\texport let filename = null;\\r\\n\\texport let truncate;\\r\\n\\r\\n\\tfunction message(details) {\\r\\n\\t\\tlet str = details.message || '[missing message]';\\r\\n\\r\\n\\t\\tlet loc = [];\\r\\n\\r\\n\\t\\tif (details.filename && details.filename !== filename) {\\r\\n\\t\\t\\tloc.push(details.filename);\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif (details.start) loc.push(details.start.line, details.start.column);\\r\\n\\r\\n\\t\\treturn str + (loc.length ? ` (${loc.join(':')})` : ``);\\r\\n\\t};\\r\\n</script>\\r\\n\\r\\n<style>\\r\\n\\t.message {\\r\\n\\t\\tposition: relative;\\r\\n\\t\\tcolor: white;\\r\\n\\t\\tpadding: 12px 16px 12px 44px;\\r\\n\\t\\tfont: 400 12px/1.7 var(--font);\\r\\n\\t\\tmargin: 0;\\r\\n\\t\\tborder-top: 1px solid white;\\r\\n\\t}\\r\\n\\r\\n\\t.navigable {\\r\\n\\t\\tcursor: pointer;\\r\\n\\t}\\r\\n\\r\\n\\t.message::before {\\r\\n\\t\\tcontent: '!';\\r\\n\\t\\tposition: absolute;\\r\\n\\t\\tleft: 12px;\\r\\n\\t\\ttop: 10px;\\r\\n\\t\\ttext-align: center;\\r\\n\\t\\tline-height: 1;\\r\\n\\t\\tpadding: 4px;\\r\\n\\t\\tborder-radius: 50%;\\r\\n\\t\\tcolor: white;\\r\\n\\t\\tborder: 2px solid white;\\r\\n\\t\\tbox-sizing: content-box;\\r\\n\\t\\twidth: 10px;\\r\\n\\t\\theight: 10px;\\r\\n\\t\\tfont-size: 11px;\\r\\n\\t\\tfont-weight: 700;\\r\\n\\t}\\r\\n\\r\\n\\t.truncate {\\r\\n\\t\\twhite-space: pre;\\r\\n\\t\\toverflow-x: hidden;\\r\\n\\t\\ttext-overflow: ellipsis;\\r\\n\\t}\\r\\n\\r\\n\\tp {\\r\\n\\t\\tmargin: 0;\\r\\n\\t}\\r\\n\\r\\n\\t.error {\\r\\n\\t\\tbackground-color: #da106e;\\r\\n\\t}\\r\\n\\r\\n\\t.warning {\\r\\n\\t\\tbackground-color: #e47e0a;\\r\\n\\t}\\r\\n\\r\\n\\t.info {\\r\\n\\t\\tbackground-color: var(--second);\\r\\n\\t}\\r\\n</style>\\r\\n\\r\\n<div in:slide={{delay: 150, duration: 100}} out:slide={{duration: 100}} class=\\\"message {kind}\\\" class:truncate>\\r\\n\\t{#if details}\\r\\n\\t\\t<p\\r\\n\\t\\t\\tclass:navigable={details.filename}\\r\\n\\t\\t\\ton:click=\\\"{() => navigate(details)}\\\"\\r\\n\\t\\t>{message(details)}</p>\\r\\n\\t{:else}\\r\\n\\t\\t<slot></slot>\\r\\n\\t{/if}\\r\\n</div>\"],\"names\":[],\"mappings\":\"AA2BC,QAAQ,cAAC,CAAC,AACT,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,KAAK,CACZ,OAAO,CAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAC5B,IAAI,CAAE,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,CAC9B,MAAM,CAAE,CAAC,CACT,UAAU,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,AAC5B,CAAC,AAED,UAAU,cAAC,CAAC,AACX,MAAM,CAAE,OAAO,AAChB,CAAC,AAED,sBAAQ,QAAQ,AAAC,CAAC,AACjB,OAAO,CAAE,GAAG,CACZ,QAAQ,CAAE,QAAQ,CAClB,IAAI,CAAE,IAAI,CACV,GAAG,CAAE,IAAI,CACT,UAAU,CAAE,MAAM,CAClB,WAAW,CAAE,CAAC,CACd,OAAO,CAAE,GAAG,CACZ,aAAa,CAAE,GAAG,CAClB,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,CACvB,UAAU,CAAE,WAAW,CACvB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,GAAG,AACjB,CAAC,AAED,SAAS,cAAC,CAAC,AACV,WAAW,CAAE,GAAG,CAChB,UAAU,CAAE,MAAM,CAClB,aAAa,CAAE,QAAQ,AACxB,CAAC,AAED,CAAC,cAAC,CAAC,AACF,MAAM,CAAE,CAAC,AACV,CAAC,AAED,MAAM,cAAC,CAAC,AACP,gBAAgB,CAAE,OAAO,AAC1B,CAAC,AAED,QAAQ,cAAC,CAAC,AACT,gBAAgB,CAAE,OAAO,AAC1B,CAAC,AAED,KAAK,cAAC,CAAC,AACN,gBAAgB,CAAE,IAAI,QAAQ,CAAC,AAChC,CAAC\"}"
};

const Message = index.create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	

	const { navigate } = index.getContext('REPL');

	let { kind, details = null, filename = null, truncate } = $$props;

	function message(details) {
		let str = details.message || '[missing message]';

		let loc = [];

		if (details.filename && details.filename !== filename) {
			loc.push(details.filename);
		}

		if (details.start) loc.push(details.start.line, details.start.column);

		return str + (loc.length ? ` (${loc.join(':')})` : ``);
	}
	if ($$props.kind === void 0 && $$bindings.kind && kind !== void 0) $$bindings.kind(kind);
	if ($$props.details === void 0 && $$bindings.details && details !== void 0) $$bindings.details(details);
	if ($$props.filename === void 0 && $$bindings.filename && filename !== void 0) $$bindings.filename(filename);
	if ($$props.truncate === void 0 && $$bindings.truncate && truncate !== void 0) $$bindings.truncate(truncate);

	$$result.css.add(css$2);

	return `<div class="${[`message ${index.escape(kind)} svelte-epahwt`, truncate ? "truncate" : ""].join(' ').trim() }">
		${ details ? `<p class="${[`svelte-epahwt`, details.filename ? "navigable" : ""].join(' ').trim() }">${index.escape(message(details))}</p>` : `${$$slots.default ? $$slots.default({}) : ``}` }
	</div>`;
});

/* node_modules\@sveltejs\svelte-repl\src\CodeMirror.svelte generated by Svelte v3.12.0 */

const css$3 = {
	code: ".codemirror-container.svelte-1vi99jo{position:relative;width:100%;height:100%;border:none;line-height:1.5;overflow:hidden}.codemirror-container.svelte-1vi99jo .CodeMirror{height:100%;background:transparent;font:400 14px/1.7 var(--font-mono);color:var(--base)}.codemirror-container.flex.svelte-1vi99jo .CodeMirror{height:auto}.codemirror-container.flex.svelte-1vi99jo .CodeMirror-lines{padding:0}.codemirror-container.svelte-1vi99jo .CodeMirror-gutters{padding:0 16px 0 8px;border:none}.codemirror-container.svelte-1vi99jo .error-loc{position:relative;border-bottom:2px solid #da106e}.codemirror-container.svelte-1vi99jo .error-line{background-color:rgba(200, 0, 0, .05)}textarea.svelte-1vi99jo{visibility:hidden}pre.svelte-1vi99jo{position:absolute;width:100%;height:100%;top:0;left:0;border:none;padding:4px 4px 4px 60px;resize:none;font-family:var(--font-mono);font-size:13px;line-height:1.7;user-select:none;pointer-events:none;color:#ccc;tab-size:2;-moz-tab-size:2}.flex.svelte-1vi99jo pre.svelte-1vi99jo{padding:0 0 0 4px;height:auto}",
	map: "{\"version\":3,\"file\":\"CodeMirror.svelte\",\"sources\":[\"CodeMirror.svelte\"],\"sourcesContent\":[\"<script context=\\\"module\\\">\\r\\n\\timport { is_browser } from './env.js';\\r\\n\\r\\n\\tlet codemirror_promise;\\r\\n\\tlet _CodeMirror;\\r\\n\\r\\n\\tif (is_browser) {\\r\\n\\t\\tcodemirror_promise = import('./codemirror.js');\\r\\n\\r\\n\\t\\tcodemirror_promise.then(mod => {\\r\\n\\t\\t\\t_CodeMirror = mod.default;\\r\\n\\t\\t});\\r\\n\\t}\\r\\n</script>\\r\\n\\r\\n<script>\\r\\n\\timport { onMount, createEventDispatcher } from 'svelte';\\r\\n\\timport Message from './Message.svelte';\\r\\n\\r\\n\\tconst dispatch = createEventDispatcher();\\r\\n\\r\\n\\texport let readonly = false;\\r\\n\\texport let errorLoc = null;\\r\\n\\texport let flex = false;\\r\\n\\texport let lineNumbers = true;\\r\\n\\texport let tab = true;\\r\\n\\r\\n\\tlet w;\\r\\n\\tlet h;\\r\\n\\tlet code = '';\\r\\n\\tlet mode;\\r\\n\\r\\n\\t// We have to expose set and update methods, rather\\r\\n\\t// than making this state-driven through props,\\r\\n\\t// because it's difficult to update an editor\\r\\n\\t// without resetting scroll otherwise\\r\\n\\texport async function set(new_code, new_mode) {\\r\\n\\t\\tif (new_mode !== mode) {\\r\\n\\t\\t\\tawait createEditor(mode = new_mode);\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tcode = new_code;\\r\\n\\t\\tupdating_externally = true;\\r\\n\\t\\tif (editor) editor.setValue(code);\\r\\n\\t\\tupdating_externally = false;\\r\\n\\t}\\r\\n\\r\\n\\texport function update(new_code) {\\r\\n\\t\\tcode = new_code;\\r\\n\\r\\n\\t\\tif (editor) {\\r\\n\\t\\t\\tconst { left, top } = editor.getScrollInfo();\\r\\n\\t\\t\\teditor.setValue(code = new_code);\\r\\n\\t\\t\\teditor.scrollTo(left, top);\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\texport function resize() {\\r\\n\\t\\teditor.refresh();\\r\\n\\t}\\r\\n\\r\\n\\texport function focus() {\\r\\n\\t\\teditor.focus();\\r\\n\\t}\\r\\n\\r\\n\\tconst modes = {\\r\\n\\t\\tjs: {\\r\\n\\t\\t\\tname: 'javascript',\\r\\n\\t\\t\\tjson: false\\r\\n\\t\\t},\\r\\n\\t\\tjson: {\\r\\n\\t\\t\\tname: 'javascript',\\r\\n\\t\\t\\tjson: true\\r\\n\\t\\t},\\r\\n\\t\\tsvelte: {\\r\\n\\t\\t\\tname: 'handlebars',\\r\\n\\t\\t\\tbase: 'text/html'\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\r\\n\\tconst refs = {};\\r\\n\\tlet editor;\\r\\n\\tlet updating_externally = false;\\r\\n\\tlet marker;\\r\\n\\tlet error_line;\\r\\n\\tlet destroyed = false;\\r\\n\\tlet CodeMirror;\\r\\n\\r\\n\\t$: if (editor && w && h) {\\r\\n\\t\\teditor.refresh();\\r\\n\\t}\\r\\n\\r\\n\\t$: {\\r\\n\\t\\tif (marker) marker.clear();\\r\\n\\r\\n\\t\\tif (errorLoc) {\\r\\n\\t\\t\\tconst line = errorLoc.line - 1;\\r\\n\\t\\t\\tconst ch = errorLoc.column;\\r\\n\\r\\n\\t\\t\\tmarker = editor.markText({ line, ch }, { line, ch: ch + 1 }, {\\r\\n\\t\\t\\t\\tclassName: 'error-loc'\\r\\n\\t\\t\\t});\\r\\n\\r\\n\\t\\t\\terror_line = line;\\r\\n\\t\\t} else {\\r\\n\\t\\t\\terror_line = null;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tlet previous_error_line;\\r\\n\\t$: if (editor) {\\r\\n\\t\\tif (previous_error_line != null) {\\r\\n\\t\\t\\teditor.removeLineClass(previous_error_line, 'wrap', 'error-line')\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif (error_line && (error_line !== previous_error_line)) {\\r\\n\\t\\t\\teditor.addLineClass(error_line, 'wrap', 'error-line');\\r\\n\\t\\t\\tprevious_error_line = error_line;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tonMount(() => {\\r\\n\\t\\tif (_CodeMirror) {\\r\\n\\t\\t\\tCodeMirror = _CodeMirror;\\r\\n\\t\\t\\tcreateEditor(mode || 'svelte').then(() => {\\r\\n\\t\\t\\t\\tif (editor) editor.setValue(code || '');\\r\\n\\t\\t\\t});\\r\\n\\t\\t} else {\\r\\n\\t\\t\\tcodemirror_promise.then(async mod => {\\r\\n\\t\\t\\t\\tCodeMirror = mod.default;\\r\\n\\t\\t\\t\\tawait createEditor(mode || 'svelte');\\r\\n\\t\\t\\t\\tif (editor) editor.setValue(code || '');\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn () => {\\r\\n\\t\\t\\tdestroyed = true;\\r\\n\\t\\t\\tif (editor) editor.toTextArea();\\r\\n\\t\\t}\\r\\n\\t});\\r\\n\\r\\n\\tlet first = true;\\r\\n\\r\\n\\tasync function createEditor(mode) {\\r\\n\\t\\tif (destroyed || !CodeMirror) return;\\r\\n\\r\\n\\t\\tif (editor) editor.toTextArea();\\r\\n\\r\\n\\t\\tconst opts = {\\r\\n\\t\\t\\tlineNumbers,\\r\\n\\t\\t\\tlineWrapping: true,\\r\\n\\t\\t\\tindentWithTabs: true,\\r\\n\\t\\t\\tindentUnit: 2,\\r\\n\\t\\t\\ttabSize: 2,\\r\\n\\t\\t\\tvalue: '',\\r\\n\\t\\t\\tmode: modes[mode] || {\\r\\n\\t\\t\\t\\tname: mode\\r\\n\\t\\t\\t},\\r\\n\\t\\t\\treadOnly: readonly,\\r\\n\\t\\t\\tautoCloseBrackets: true,\\r\\n\\t\\t\\tautoCloseTags: true\\r\\n\\t\\t};\\r\\n\\r\\n\\t\\tif (!tab) opts.extraKeys = {\\r\\n\\t\\t\\tTab: tab,\\r\\n\\t\\t\\t'Shift-Tab': tab\\r\\n\\t\\t};\\r\\n\\r\\n\\t\\t// Creating a text editor is a lot of work, so we yield\\r\\n\\t\\t// the main thread for a moment. This helps reduce jank\\r\\n\\t\\tif (first) await sleep(50);\\r\\n\\r\\n\\t\\tif (destroyed) return;\\r\\n\\r\\n\\t\\teditor = CodeMirror.fromTextArea(refs.editor, opts);\\r\\n\\r\\n\\t\\teditor.on('change', instance => {\\r\\n\\t\\t\\tif (!updating_externally) {\\r\\n\\t\\t\\t\\tconst value = instance.getValue();\\r\\n\\t\\t\\t\\tdispatch('change', { value });\\r\\n\\t\\t\\t}\\r\\n\\t\\t});\\r\\n\\r\\n\\t\\tif (first) await sleep(50);\\r\\n\\t\\teditor.refresh();\\r\\n\\r\\n\\t\\tfirst = false;\\r\\n\\t}\\r\\n\\r\\n\\tfunction sleep(ms) {\\r\\n\\t\\treturn new Promise(fulfil => setTimeout(fulfil, ms));\\r\\n\\t}\\r\\n</script>\\r\\n\\r\\n<style>\\r\\n\\t.codemirror-container {\\r\\n\\t\\tposition: relative;\\r\\n\\t\\twidth: 100%;\\r\\n\\t\\theight: 100%;\\r\\n\\t\\tborder: none;\\r\\n\\t\\tline-height: 1.5;\\r\\n\\t\\toverflow: hidden;\\r\\n\\t}\\r\\n\\r\\n\\t.codemirror-container :global(.CodeMirror) {\\r\\n\\t\\theight: 100%;\\r\\n\\t\\tbackground: transparent;\\r\\n\\t\\tfont: 400 14px/1.7 var(--font-mono);\\r\\n\\t\\tcolor: var(--base);\\r\\n\\t}\\r\\n\\r\\n\\t.codemirror-container.flex :global(.CodeMirror) {\\r\\n\\t\\theight: auto;\\r\\n\\t}\\r\\n\\r\\n\\t.codemirror-container.flex :global(.CodeMirror-lines) {\\r\\n\\t\\tpadding: 0;\\r\\n\\t}\\r\\n\\r\\n\\t.codemirror-container :global(.CodeMirror-gutters) {\\r\\n\\t\\tpadding: 0 16px 0 8px;\\r\\n\\t\\tborder: none;\\r\\n\\t}\\r\\n\\r\\n\\t.codemirror-container :global(.error-loc) {\\r\\n\\t\\tposition: relative;\\r\\n\\t\\tborder-bottom: 2px solid #da106e;\\r\\n\\t}\\r\\n\\r\\n\\t.codemirror-container :global(.error-line) {\\r\\n\\t\\tbackground-color: rgba(200, 0, 0, .05);\\r\\n\\t}\\r\\n\\r\\n\\ttextarea {\\r\\n\\t\\tvisibility: hidden;\\r\\n\\t}\\r\\n\\r\\n\\tpre {\\r\\n\\t\\tposition: absolute;\\r\\n\\t\\twidth: 100%;\\r\\n\\t\\theight: 100%;\\r\\n\\t\\ttop: 0;\\r\\n\\t\\tleft: 0;\\r\\n\\t\\tborder: none;\\r\\n\\t\\tpadding: 4px 4px 4px 60px;\\r\\n\\t\\tresize: none;\\r\\n\\t\\tfont-family: var(--font-mono);\\r\\n\\t\\tfont-size: 13px;\\r\\n\\t\\tline-height: 1.7;\\r\\n\\t\\tuser-select: none;\\r\\n\\t\\tpointer-events: none;\\r\\n\\t\\tcolor: #ccc;\\r\\n\\t\\ttab-size: 2;\\r\\n\\t\\t-moz-tab-size: 2;\\r\\n\\t}\\r\\n\\r\\n\\t.flex pre {\\r\\n\\t\\tpadding: 0 0 0 4px;\\r\\n\\t\\theight: auto;\\r\\n\\t}\\r\\n</style>\\r\\n\\r\\n<div class='codemirror-container' class:flex bind:offsetWidth={w} bind:offsetHeight={h}>\\r\\n\\t<!-- svelte-ignore a11y-positive-tabindex -->\\r\\n\\t<textarea\\r\\n\\t\\ttabindex='2'\\r\\n\\t\\tbind:this={refs.editor}\\r\\n\\t\\treadonly\\r\\n\\t\\tvalue={code}\\r\\n\\t></textarea>\\r\\n\\r\\n\\t{#if !CodeMirror}\\r\\n\\t\\t<pre style=\\\"position: absolute; left: 0; top: 0\\\"\\r\\n\\t\\t>{code}</pre>\\r\\n\\r\\n\\t\\t<div style=\\\"position: absolute; width: 100%; bottom: 0\\\">\\r\\n\\t\\t\\t<Message kind='info'>loading editor...</Message>\\r\\n\\t\\t</div>\\r\\n\\t{/if}\\r\\n</div>\"],\"names\":[],\"mappings\":\"AAmMC,qBAAqB,eAAC,CAAC,AACtB,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,IAAI,CACZ,WAAW,CAAE,GAAG,CAChB,QAAQ,CAAE,MAAM,AACjB,CAAC,AAED,oCAAqB,CAAC,AAAQ,WAAW,AAAE,CAAC,AAC3C,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,WAAW,CACvB,IAAI,CAAE,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,WAAW,CAAC,CACnC,KAAK,CAAE,IAAI,MAAM,CAAC,AACnB,CAAC,AAED,qBAAqB,oBAAK,CAAC,AAAQ,WAAW,AAAE,CAAC,AAChD,MAAM,CAAE,IAAI,AACb,CAAC,AAED,qBAAqB,oBAAK,CAAC,AAAQ,iBAAiB,AAAE,CAAC,AACtD,OAAO,CAAE,CAAC,AACX,CAAC,AAED,oCAAqB,CAAC,AAAQ,mBAAmB,AAAE,CAAC,AACnD,OAAO,CAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CACrB,MAAM,CAAE,IAAI,AACb,CAAC,AAED,oCAAqB,CAAC,AAAQ,UAAU,AAAE,CAAC,AAC1C,QAAQ,CAAE,QAAQ,CAClB,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,AACjC,CAAC,AAED,oCAAqB,CAAC,AAAQ,WAAW,AAAE,CAAC,AAC3C,gBAAgB,CAAE,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,AACvC,CAAC,AAED,QAAQ,eAAC,CAAC,AACT,UAAU,CAAE,MAAM,AACnB,CAAC,AAED,GAAG,eAAC,CAAC,AACJ,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,CAAC,CACP,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CACzB,MAAM,CAAE,IAAI,CACZ,WAAW,CAAE,IAAI,WAAW,CAAC,CAC7B,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,GAAG,CAChB,WAAW,CAAE,IAAI,CACjB,cAAc,CAAE,IAAI,CACpB,KAAK,CAAE,IAAI,CACX,QAAQ,CAAE,CAAC,CACX,aAAa,CAAE,CAAC,AACjB,CAAC,AAED,oBAAK,CAAC,GAAG,eAAC,CAAC,AACV,OAAO,CAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAClB,MAAM,CAAE,IAAI,AACb,CAAC\"}"
};

let codemirror_promise;
let _CodeMirror;

if (is_browser) {
	codemirror_promise = new Promise(function (resolve) { resolve(require('./codemirror-7fdd8733.js')); });

	codemirror_promise.then(mod => {
		_CodeMirror = mod.default;
	});
}

function sleep(ms) {
	return new Promise(fulfil => setTimeout(fulfil, ms));
}

const CodeMirror_1 = index.create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	

	const dispatch = index.createEventDispatcher();

	let { readonly = false, errorLoc = null, flex = false, lineNumbers = true, tab = true } = $$props;

	let w;
	let h;
	let code = '';
	let mode;

	// We have to expose set and update methods, rather
	// than making this state-driven through props,
	// because it's difficult to update an editor
	// without resetting scroll otherwise
	async function set(new_code, new_mode) {
		if (new_mode !== mode) {
			await createEditor(mode = new_mode);
		}

		code = new_code;
		updating_externally = true;
		if (editor) editor.setValue(code);
		updating_externally = false;
	}

	function update(new_code) {
		code = new_code;

		if (editor) {
			const { left, top } = editor.getScrollInfo();
			editor.setValue(code = new_code);
			editor.scrollTo(left, top);
		}
	}

	function resize() {
		editor.refresh();
	}

	function focus() {
		editor.focus();
	}

	const modes = {
		js: {
			name: 'javascript',
			json: false
		},
		json: {
			name: 'javascript',
			json: true
		},
		svelte: {
			name: 'handlebars',
			base: 'text/html'
		}
	};

	const refs = {};
	let editor;
	let updating_externally = false;
	let marker;
	let error_line;
	let destroyed = false;
	let CodeMirror;

	let previous_error_line;

	index.onMount(() => {
		if (_CodeMirror) {
			CodeMirror = _CodeMirror;
			createEditor(mode || 'svelte').then(() => {
				if (editor) editor.setValue(code || '');
			});
		} else {
			codemirror_promise.then(async mod => {
				CodeMirror = mod.default;
				await createEditor(mode || 'svelte');
				if (editor) editor.setValue(code || '');
			});
		}

		return () => {
			destroyed = true;
			if (editor) editor.toTextArea();
		}
	});

	let first = true;

	async function createEditor(mode) {
		if (destroyed || !CodeMirror) return;

		if (editor) editor.toTextArea();

		const opts = {
			lineNumbers,
			lineWrapping: true,
			indentWithTabs: true,
			indentUnit: 2,
			tabSize: 2,
			value: '',
			mode: modes[mode] || {
				name: mode
			},
			readOnly: readonly,
			autoCloseBrackets: true,
			autoCloseTags: true
		};

		if (!tab) opts.extraKeys = {
			Tab: tab,
			'Shift-Tab': tab
		};

		// Creating a text editor is a lot of work, so we yield
		// the main thread for a moment. This helps reduce jank
		if (first) await sleep(50);

		if (destroyed) return;

		editor = CodeMirror.fromTextArea(refs.editor, opts);

		editor.on('change', instance => {
			if (!updating_externally) {
				const value = instance.getValue();
				dispatch('change', { value });
			}
		});

		if (first) await sleep(50);
		editor.refresh();

		first = false;
	}

	if ($$props.readonly === void 0 && $$bindings.readonly && readonly !== void 0) $$bindings.readonly(readonly);
	if ($$props.errorLoc === void 0 && $$bindings.errorLoc && errorLoc !== void 0) $$bindings.errorLoc(errorLoc);
	if ($$props.flex === void 0 && $$bindings.flex && flex !== void 0) $$bindings.flex(flex);
	if ($$props.lineNumbers === void 0 && $$bindings.lineNumbers && lineNumbers !== void 0) $$bindings.lineNumbers(lineNumbers);
	if ($$props.tab === void 0 && $$bindings.tab && tab !== void 0) $$bindings.tab(tab);
	if ($$props.set === void 0 && $$bindings.set && set !== void 0) $$bindings.set(set);
	if ($$props.update === void 0 && $$bindings.update && update !== void 0) $$bindings.update(update);
	if ($$props.resize === void 0 && $$bindings.resize && resize !== void 0) $$bindings.resize(resize);
	if ($$props.focus === void 0 && $$bindings.focus && focus !== void 0) $$bindings.focus(focus);

	$$result.css.add(css$3);

	if (editor && w && h) {
				editor.refresh();
			}
	{
				if (marker) marker.clear();
		
				if (errorLoc) {
					const line = errorLoc.line - 1;
					const ch = errorLoc.column;
		
					marker = editor.markText({ line, ch }, { line, ch: ch + 1 }, {
						className: 'error-loc'
					});
		
					error_line = line;
				} else {
					error_line = null;
				}
			}
	if (editor) {
				if (previous_error_line != null) {
					editor.removeLineClass(previous_error_line, 'wrap', 'error-line');
				}
		
				if (error_line && (error_line !== previous_error_line)) {
					editor.addLineClass(error_line, 'wrap', 'error-line');
					previous_error_line = error_line;
				}
			}

	return `<div class="${[`codemirror-container svelte-1vi99jo`, flex ? "flex" : ""].join(' ').trim() }">

		<textarea tabindex="2" readonly class="svelte-1vi99jo"${index.add_attribute("this", refs.editor, 1)}>${index.escape(code)}</textarea>

		${ !CodeMirror ? `<pre style="position: absolute; left: 0; top: 0" class="svelte-1vi99jo">${index.escape(code)}</pre>

			<div style="position: absolute; width: 100%; bottom: 0">
				${index.validate_component(Message, 'Message').$$render($$result, { kind: "info" }, {}, { default: () => `loading editor...` })}
			</div>` : `` }
	</div>`;
});

/* node_modules\@sveltejs\svelte-repl\src\Input\ModuleEditor.svelte generated by Svelte v3.12.0 */

const css$4 = {
	code: ".editor-wrapper.svelte-mc03q2{z-index:5;background:var(--back-light);display:flex;flex-direction:column}.editor.svelte-mc03q2{height:0;flex:1 1 auto}.info.svelte-mc03q2{background-color:var(--second);max-height:50%;overflow:auto}.columns .editor-wrapper.svelte-mc03q2{padding-right:8px;height:auto}",
	map: "{\"version\":3,\"file\":\"ModuleEditor.svelte\",\"sources\":[\"ModuleEditor.svelte\"],\"sourcesContent\":[\"<script>\\r\\n\\timport { getContext, onMount } from 'svelte';\\r\\n\\timport CodeMirror from '../CodeMirror.svelte';\\r\\n\\timport Message from '../Message.svelte';\\r\\n\\r\\n\\tconst { bundle, selected, handle_change, register_module_editor } = getContext('REPL');\\r\\n\\r\\n\\texport let errorLoc;\\r\\n\\r\\n\\tlet editor;\\r\\n\\tonMount(() => {\\r\\n\\t\\tregister_module_editor(editor);\\r\\n\\t});\\r\\n\\r\\n\\texport function focus() {\\r\\n\\t\\teditor.focus();\\r\\n\\t}\\r\\n</script>\\r\\n\\r\\n<style>\\r\\n\\t.editor-wrapper {\\r\\n\\t\\tz-index: 5;\\r\\n\\t\\tbackground: var(--back-light);\\r\\n\\t\\tdisplay: flex;\\r\\n\\t\\tflex-direction: column;\\r\\n\\t}\\r\\n\\r\\n\\t.editor {\\r\\n\\t\\theight: 0;\\r\\n\\t\\tflex: 1 1 auto;\\r\\n\\t}\\r\\n\\r\\n\\t.info {\\r\\n\\t\\tbackground-color: var(--second);\\r\\n\\t\\tmax-height: 50%;\\r\\n\\t\\toverflow: auto;\\r\\n\\t}\\r\\n\\r\\n\\t:global(.columns) .editor-wrapper {\\r\\n\\t\\t/* make it easier to interact with scrollbar */\\r\\n\\t\\tpadding-right: 8px;\\r\\n\\t\\theight: auto;\\r\\n\\t\\t/* height: 100%; */\\r\\n\\t}\\r\\n</style>\\r\\n\\r\\n<div class=\\\"editor-wrapper\\\">\\r\\n\\t<div class=\\\"editor\\\">\\r\\n\\t\\t<CodeMirror\\r\\n\\t\\t\\tbind:this={editor}\\r\\n\\t\\t\\t{errorLoc}\\r\\n\\t\\t\\ton:change={handle_change}\\r\\n\\t\\t/>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div class=\\\"info\\\">\\r\\n\\t\\t{#if $bundle}\\r\\n\\t\\t\\t{#if $bundle.error}\\r\\n\\t\\t\\t\\t<Message kind=\\\"error\\\" details={$bundle.error} filename=\\\"{$selected.name}.{$selected.type}\\\"/>\\r\\n\\t\\t\\t{:else if $bundle.warnings.length > 0}\\r\\n\\t\\t\\t\\t{#each $bundle.warnings as warning}\\r\\n\\t\\t\\t\\t\\t<Message kind=\\\"warning\\\" details={warning} filename=\\\"{$selected.name}.{$selected.type}\\\"/>\\r\\n\\t\\t\\t\\t{/each}\\r\\n\\t\\t\\t{/if}\\r\\n\\t\\t{/if}\\r\\n\\t</div>\\r\\n</div>\"],\"names\":[],\"mappings\":\"AAoBC,eAAe,cAAC,CAAC,AAChB,OAAO,CAAE,CAAC,CACV,UAAU,CAAE,IAAI,YAAY,CAAC,CAC7B,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,AACvB,CAAC,AAED,OAAO,cAAC,CAAC,AACR,MAAM,CAAE,CAAC,CACT,IAAI,CAAE,CAAC,CAAC,CAAC,CAAC,IAAI,AACf,CAAC,AAED,KAAK,cAAC,CAAC,AACN,gBAAgB,CAAE,IAAI,QAAQ,CAAC,CAC/B,UAAU,CAAE,GAAG,CACf,QAAQ,CAAE,IAAI,AACf,CAAC,AAEO,QAAQ,AAAC,CAAC,eAAe,cAAC,CAAC,AAElC,aAAa,CAAE,GAAG,CAClB,MAAM,CAAE,IAAI,AAEb,CAAC\"}"
};

const ModuleEditor = index.create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let $bundle, $selected;

	

	const { bundle, selected, handle_change, register_module_editor } = index.getContext('REPL'); $bundle = index.get_store_value(bundle); $selected = index.get_store_value(selected);

	let { errorLoc } = $$props;

	let editor;
	index.onMount(() => {
		register_module_editor(editor);
	});

	function focus() {
		editor.focus();
	}

	if ($$props.errorLoc === void 0 && $$bindings.errorLoc && errorLoc !== void 0) $$bindings.errorLoc(errorLoc);
	if ($$props.focus === void 0 && $$bindings.focus && focus !== void 0) $$bindings.focus(focus);

	$$result.css.add(css$4);

	let $$settled;
	let $$rendered;

	do {
		$$settled = true;

		$bundle = index.get_store_value(bundle);
		$selected = index.get_store_value(selected);

		$$rendered = `<div class="editor-wrapper svelte-mc03q2">
			<div class="editor svelte-mc03q2">
				${index.validate_component(CodeMirror_1, 'CodeMirror').$$render($$result, { errorLoc: errorLoc, this: editor }, {
			this: $$value => { editor = $$value; $$settled = false; }
		}, {})}
			</div>

			<div class="info svelte-mc03q2">
				${ $bundle ? `${ $bundle.error ? `${index.validate_component(Message, 'Message').$$render($$result, {
			kind: "error",
			details: $bundle.error,
			filename: `${index.escape($selected.name)}.${index.escape($selected.type)}`
		}, {}, {})}` : `${ $bundle.warnings.length > 0 ? `${index.each($bundle.warnings, (warning) => `${index.validate_component(Message, 'Message').$$render($$result, {
			kind: "warning",
			details: warning,
			filename: `${index.escape($selected.name)}.${index.escape($selected.type)}`
		}, {}, {})}`)}` : `` }` }` : `` }
			</div>
		</div>`;
	} while (!$$settled);

	return $$rendered;
});

var charToInteger = {};
var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';
for (var i = 0; i < chars.length; i++) {
    charToInteger[chars.charCodeAt(i)] = i;
}
function decode(mappings) {
    var generatedCodeColumn = 0; // first field
    var sourceFileIndex = 0; // second field
    var sourceCodeLine = 0; // third field
    var sourceCodeColumn = 0; // fourth field
    var nameIndex = 0; // fifth field
    var decoded = [];
    var line = [];
    var segment = [];
    for (var i = 0, j = 0, shift = 0, value = 0, len = mappings.length; i < len; i++) {
        var c = mappings.charCodeAt(i);
        if (c === 44) { // ","
            if (segment.length)
                line.push(segment);
            segment = [];
            j = 0;
        }
        else if (c === 59) { // ";"
            if (segment.length)
                line.push(segment);
            segment = [];
            j = 0;
            decoded.push(line);
            line = [];
            generatedCodeColumn = 0;
        }
        else {
            var integer = charToInteger[c];
            if (integer === undefined) {
                throw new Error('Invalid character (' + String.fromCharCode(c) + ')');
            }
            var hasContinuationBit = integer & 32;
            integer &= 31;
            value += integer << shift;
            if (hasContinuationBit) {
                shift += 5;
            }
            else {
                var shouldNegate = value & 1;
                value >>>= 1;
                if (shouldNegate) {
                    value = -value;
                    if (value === 0)
                        value = -0x80000000;
                }
                if (j == 0) {
                    generatedCodeColumn += value;
                    segment.push(generatedCodeColumn);
                }
                else if (j === 1) {
                    sourceFileIndex += value;
                    segment.push(sourceFileIndex);
                }
                else if (j === 2) {
                    sourceCodeLine += value;
                    segment.push(sourceCodeLine);
                }
                else if (j === 3) {
                    sourceCodeColumn += value;
                    segment.push(sourceCodeColumn);
                }
                else if (j === 4) {
                    nameIndex += value;
                    segment.push(nameIndex);
                }
                j++;
                value = shift = 0; // reset
            }
        }
    }
    if (segment.length)
        line.push(segment);
    decoded.push(line);
    return decoded;
}

function getLocationFromStack(stack, map) {
	if (!stack) return;
	const last = stack.split('\n')[1];
	const match = /<anonymous>:(\d+):(\d+)\)$/.exec(last);

	if (!match) return null;

	const line = +match[1];
	const column = +match[2];

	return trace({ line, column }, map);
}

function trace(loc, map) {
	const mappings = decode(map.mappings);
	const segments = mappings[loc.line - 1];

	for (let i = 0; i < segments.length; i += 1) {
		const segment = segments[i];
		if (segment[0] === loc.column) {
			const [, sourceIndex, line, column] = segment;
			const source = map.sources[sourceIndex].slice(2);

			return { source, line: line + 1, column };
		}
	}

	return null;
}

function is_date(obj) {
    return Object.prototype.toString.call(obj) === '[object Date]';
}

function tick_spring(ctx, last_value, current_value, target_value) {
    if (typeof current_value === 'number' || is_date(current_value)) {
        // @ts-ignore
        const delta = target_value - current_value;
        // @ts-ignore
        const velocity = (current_value - last_value) / (ctx.dt || 1 / 60); // guard div by 0
        const spring = ctx.opts.stiffness * delta;
        const damper = ctx.opts.damping * velocity;
        const acceleration = (spring - damper) * ctx.inv_mass;
        const d = (velocity + acceleration) * ctx.dt;
        if (Math.abs(d) < ctx.opts.precision && Math.abs(delta) < ctx.opts.precision) {
            return target_value; // settled
        }
        else {
            ctx.settled = false; // signal loop to keep ticking
            // @ts-ignore
            return is_date(current_value) ?
                new Date(current_value.getTime() + d) : current_value + d;
        }
    }
    else if (Array.isArray(current_value)) {
        // @ts-ignore
        return current_value.map((_, i) => tick_spring(ctx, last_value[i], current_value[i], target_value[i]));
    }
    else if (typeof current_value === 'object') {
        const next_value = {};
        for (const k in current_value)
            // @ts-ignore
            next_value[k] = tick_spring(ctx, last_value[k], current_value[k], target_value[k]);
        // @ts-ignore
        return next_value;
    }
    else {
        throw new Error(`Cannot spring ${typeof current_value} values`);
    }
}
function spring(value, opts = {}) {
    const store = index$2.writable(value);
    const { stiffness = 0.15, damping = 0.8, precision = 0.01 } = opts;
    let last_time;
    let task;
    let current_token;
    let last_value = value;
    let target_value = value;
    let inv_mass = 1;
    let inv_mass_recovery_rate = 0;
    let cancel_task = false;
    /* eslint-disable @typescript-eslint/no-use-before-define */
    function set(new_value, opts = {}) {
        target_value = new_value;
        const token = current_token = {};
        if (opts.hard || (spring.stiffness >= 1 && spring.damping >= 1)) {
            cancel_task = true; // cancel any running animation
            last_time = index.now();
            last_value = value;
            store.set(value = target_value);
            return new Promise(f => f()); // fulfil immediately
        }
        else if (opts.soft) {
            const rate = opts.soft === true ? .5 : +opts.soft;
            inv_mass_recovery_rate = 1 / (rate * 60);
            inv_mass = 0; // infinite mass, unaffected by spring forces
        }
        if (!task) {
            last_time = index.now();
            cancel_task = false;
            task = index.loop(now => {
                if (cancel_task) {
                    cancel_task = false;
                    task = null;
                    return false;
                }
                inv_mass = Math.min(inv_mass + inv_mass_recovery_rate, 1);
                const ctx = {
                    inv_mass,
                    opts: spring,
                    settled: true,
                    dt: (now - last_time) * 60 / 1000
                };
                const next_value = tick_spring(ctx, last_value, value, target_value);
                last_time = now;
                last_value = value;
                store.set(value = next_value);
                if (ctx.settled)
                    task = null;
                return !ctx.settled;
            });
        }
        return new Promise(fulfil => {
            task.promise.then(() => {
                if (token === current_token)
                    fulfil();
            });
        });
    }
    /* eslint-enable @typescript-eslint/no-use-before-define */
    const spring = {
        set,
        update: (fn, opts) => set(fn(target_value, value), opts),
        subscribe: store.subscribe,
        stiffness,
        damping,
        precision
    };
    return spring;
}

/* node_modules\@sveltejs\svelte-repl\src\Output\PaneWithPanel.svelte generated by Svelte v3.12.0 */

const css$5 = {
	code: ".panel-header.svelte-1bwl2ox{height:42px;display:flex;justify-content:space-between;align-items:center;padding:0 0.5em;cursor:pointer}.panel-body.svelte-1bwl2ox{max-height:calc(100% - 42px);overflow:auto}h3.svelte-1bwl2ox{font:700 12px/1.5 var(--font);color:#333}",
	map: "{\"version\":3,\"file\":\"PaneWithPanel.svelte\",\"sources\":[\"PaneWithPanel.svelte\"],\"sourcesContent\":[\"<script>\\r\\n\\timport { spring } from 'svelte/motion';\\r\\n\\timport SplitPane from '../SplitPane.svelte';\\r\\n\\r\\n\\texport let panel;\\r\\n\\texport let pos = 50;\\r\\n\\tlet previous_pos = Math.min(pos, 70);\\r\\n\\r\\n\\tlet max;\\r\\n\\r\\n\\t// we can't bind to the spring itself, but we\\r\\n\\t// can still use the spring to drive `pos`\\r\\n\\tconst driver = spring(pos);\\r\\n\\t$: pos = $driver;\\r\\n\\r\\n\\tconst toggle = () => {\\r\\n\\t\\tdriver.set(pos, { hard: true });\\r\\n\\r\\n\\t\\tif (pos > 80) {\\r\\n\\t\\t\\tdriver.set(previous_pos);\\r\\n\\t\\t} else {\\r\\n\\t\\t\\tprevious_pos = pos;\\r\\n\\t\\t\\tdriver.set(max);\\r\\n\\t\\t}\\r\\n\\t};\\r\\n</script>\\r\\n\\r\\n<SplitPane bind:max type=\\\"vertical\\\" bind:pos={pos}>\\r\\n\\t<section slot=\\\"a\\\">\\r\\n\\t\\t<slot name=\\\"main\\\"></slot>\\r\\n\\t</section>\\r\\n\\r\\n\\t<section slot=\\\"b\\\">\\r\\n\\t\\t<div class=\\\"panel-header\\\" on:click={toggle}>\\r\\n\\t\\t\\t<h3>{panel}</h3>\\r\\n\\t\\t\\t<slot name=\\\"panel-header\\\"></slot>\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t\\t<div class=\\\"panel-body\\\">\\r\\n\\t\\t\\t<slot name=\\\"panel-body\\\"></slot>\\r\\n\\t\\t</div>\\r\\n\\t</section>\\r\\n</SplitPane>\\r\\n\\r\\n<style>\\r\\n\\t.panel-header {\\r\\n\\t\\theight: 42px;\\r\\n\\t\\tdisplay: flex;\\r\\n\\t\\tjustify-content: space-between;\\r\\n\\t\\talign-items: center;\\r\\n\\t\\tpadding: 0 0.5em;\\r\\n\\t\\tcursor: pointer;\\r\\n\\t}\\r\\n\\r\\n\\t.panel-body {\\r\\n\\t\\tmax-height: calc(100% - 42px);\\r\\n\\t\\toverflow: auto;\\r\\n\\t}\\r\\n\\r\\n\\th3 {\\r\\n\\t\\tfont: 700 12px/1.5 var(--font);\\r\\n\\t\\tcolor: #333;\\r\\n\\t}\\r\\n</style>\"],\"names\":[],\"mappings\":\"AA6CC,aAAa,eAAC,CAAC,AACd,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,aAAa,CAC9B,WAAW,CAAE,MAAM,CACnB,OAAO,CAAE,CAAC,CAAC,KAAK,CAChB,MAAM,CAAE,OAAO,AAChB,CAAC,AAED,WAAW,eAAC,CAAC,AACZ,UAAU,CAAE,KAAK,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAC7B,QAAQ,CAAE,IAAI,AACf,CAAC,AAED,EAAE,eAAC,CAAC,AACH,IAAI,CAAE,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,CAC9B,KAAK,CAAE,IAAI,AACZ,CAAC\"}"
};

const PaneWithPanel = index.create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let $driver;

	

	let { panel, pos = 50 } = $$props;

	let max;

	// we can't bind to the spring itself, but we
	// can still use the spring to drive `pos`
	const driver = spring(pos); $driver = index.get_store_value(driver);

	if ($$props.panel === void 0 && $$bindings.panel && panel !== void 0) $$bindings.panel(panel);
	if ($$props.pos === void 0 && $$bindings.pos && pos !== void 0) $$bindings.pos(pos);

	$$result.css.add(css$5);

	let $$settled;
	let $$rendered;

	do {
		$$settled = true;

		$driver = index.get_store_value(driver);

		pos = $driver;

		$$rendered = `${index.validate_component(SplitPane, 'SplitPane').$$render($$result, {
			type: "vertical",
			max: max,
			pos: pos
		}, {
			max: $$value => { max = $$value; $$settled = false; },
			pos: $$value => { pos = $$value; $$settled = false; }
		}, {
			default: () => `
			`,
			a: () => `<section slot="a">
				${$$slots.main ? $$slots.main({}) : ``}
			</section>

			`,
			b: () => `<section slot="b">
				<div class="panel-header svelte-1bwl2ox">
					<h3 class="svelte-1bwl2ox">${index.escape(panel)}</h3>
					${$$slots["panel-header"] ? $$slots["panel-header"]({}) : ``}
				</div>

				<div class="panel-body svelte-1bwl2ox">
					${$$slots["panel-body"] ? $$slots["panel-body"]({}) : ``}
				</div>
			</section>
		`
		})}`;
	} while (!$$settled);

	return $$rendered;
});

let uid = 1;

class ReplProxy {
	constructor(iframe, handlers) {
		this.iframe = iframe;
		this.handlers = handlers;

		this.pending_cmds = new Map();

		this.handle_event = e => this.handle_repl_message(e);
		window.addEventListener('message', this.handle_event, false);
	}

	destroy() {
		window.removeEventListener('message', this.handle_event);
	}

	iframe_command(action, args) {
		return new Promise((resolve, reject) => {
			const cmd_id = uid++;

			this.pending_cmds.set(cmd_id, { resolve, reject });

			this.iframe.contentWindow.postMessage({ action, cmd_id, args }, '*');
		});
	}

	handle_command_message(cmd_data) {
		let action = cmd_data.action;
		let id = cmd_data.cmd_id;
		let handler = this.pending_cmds.get(id);

		if (handler) {
			this.pending_cmds.delete(id);
			if (action === 'cmd_error') {
				let { message, stack } = cmd_data;
				let e = new Error(message);
				e.stack = stack;
				handler.reject(e);
			}

			if (action === 'cmd_ok') {
				handler.resolve(cmd_data.args);
			}
		} else {
			console.error('command not found', id, cmd_data, [...this.pending_cmds.keys()]);
		}
	}

	handle_repl_message(event) {
		if (event.source !== this.iframe.contentWindow) return;

		const { action, args } = event.data;

		switch (action) {
			case 'cmd_error':
			case 'cmd_ok':
				return this.handle_command_message(event.data);
			case 'fetch_progress':
				return this.handlers.on_fetch_progress(args.remaining)
			case 'error':
				return this.handlers.on_error(event.data);
			case 'unhandledrejection':
				return this.handlers.on_unhandled_rejection(event.data);
			case 'console':
				return this.handlers.on_console(event.data);
		}
	}

	eval(script) {
		return this.iframe_command('eval', { script });
	}

	handle_links() {
		return this.iframe_command('catch_clicks', {});
	}
}

/* node_modules\svelte-json-tree\src\JSONArrow.svelte generated by Svelte v3.12.0 */

const css$6 = {
	code: ".container.svelte-u79z51{display:inline-block;width:var(--li-identation);cursor:pointer;margin-left:calc(-7px - var(--li-identation));text-align:right}.arrow.svelte-u79z51{transform-origin:67% 50%;position:relative;line-height:1.1em;font-size:0.75em;margin-left:0;transition:150ms;color:var(--arrow-sign)}.expanded.svelte-u79z51{transform:rotateZ(90deg) translateX(-3px)}",
	map: "{\"version\":3,\"file\":\"JSONArrow.svelte\",\"sources\":[\"JSONArrow.svelte\"],\"sourcesContent\":[\"<script>\\r\\n\\timport { createEventDispatcher } from 'svelte';\\r\\n\\tconst dispatch = createEventDispatcher();\\r\\n\\r\\n  function onClick(event) {\\r\\n    dispatch('click', event);\\r\\n  }\\r\\n\\r\\n  export let expanded;\\r\\n</script>\\r\\n<style>\\r\\n  .container {\\r\\n    display: inline-block;\\r\\n    width: var(--li-identation);\\r\\n    cursor: pointer;\\r\\n    margin-left: calc(-7px - var(--li-identation));\\r\\n    text-align: right;\\r\\n  }\\r\\n  .arrow {\\r\\n    transform-origin: 67% 50%;\\r\\n    position: relative;\\r\\n    line-height: 1.1em;\\r\\n    font-size: 0.75em;\\r\\n    margin-left: 0;\\r\\n    transition: 150ms;\\r\\n    color: var(--arrow-sign);\\r\\n  }\\r\\n  .expanded {\\r\\n    transform: rotateZ(90deg) translateX(-3px);\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"container\\\" on:click={onClick}>\\r\\n  <div class=\\\"arrow\\\" class:expanded={expanded}>{'\\\\u25B6'}</div>\\r\\n</div>\"],\"names\":[],\"mappings\":\"AAWE,UAAU,cAAC,CAAC,AACV,OAAO,CAAE,YAAY,CACrB,KAAK,CAAE,IAAI,eAAe,CAAC,CAC3B,MAAM,CAAE,OAAO,CACf,WAAW,CAAE,KAAK,IAAI,CAAC,CAAC,CAAC,IAAI,eAAe,CAAC,CAAC,CAC9C,UAAU,CAAE,KAAK,AACnB,CAAC,AACD,MAAM,cAAC,CAAC,AACN,gBAAgB,CAAE,GAAG,CAAC,GAAG,CACzB,QAAQ,CAAE,QAAQ,CAClB,WAAW,CAAE,KAAK,CAClB,SAAS,CAAE,MAAM,CACjB,WAAW,CAAE,CAAC,CACd,UAAU,CAAE,KAAK,CACjB,KAAK,CAAE,IAAI,YAAY,CAAC,AAC1B,CAAC,AACD,SAAS,cAAC,CAAC,AACT,SAAS,CAAE,QAAQ,KAAK,CAAC,CAAC,WAAW,IAAI,CAAC,AAC5C,CAAC\"}"
};

const JSONArrow = index.create_ssr_component(($$result, $$props, $$bindings, $$slots) => {

  let { expanded } = $$props;

	if ($$props.expanded === void 0 && $$bindings.expanded && expanded !== void 0) $$bindings.expanded(expanded);

	$$result.css.add(css$6);

	return `<div class="container svelte-u79z51">
	  <div class="${[`arrow svelte-u79z51`, expanded ? "expanded" : ""].join(' ').trim() }">${index.escape('\u25B6')}</div>
	</div>`;
});

function objType(obj) {
  const type = Object.prototype.toString.call(obj).slice(8, -1);
  if (type === 'Object') {
    if (typeof obj[Symbol.iterator] === 'function') {
      return 'Iterable';
    }
    return obj.constructor.name;
  }

  return type;
}

/* node_modules\svelte-json-tree\src\JSONKey.svelte generated by Svelte v3.12.0 */

const css$7 = {
	code: "label.svelte-v9qszx{display:inline-block;color:var(--label-color);margin:0}.spaced.svelte-v9qszx{margin-right:var(--li-colon-space)}",
	map: "{\"version\":3,\"file\":\"JSONKey.svelte\",\"sources\":[\"JSONKey.svelte\"],\"sourcesContent\":[\"<script>\\r\\n  import { isPrimitive } from './objType';\\r\\n  import JSONNode from './JSONNode.svelte';\\r\\n\\r\\n  export let key, isParentExpanded, isParentArray = false, colon = ':';\\r\\n\\r\\n  $: showKey = (isParentExpanded || !isParentArray || key != +key);\\r\\n</script>\\r\\n<style>\\r\\n  label {\\r\\n    display: inline-block;\\r\\n    color: var(--label-color);\\r\\n    margin: 0;\\r\\n  }\\r\\n  .spaced {\\r\\n    margin-right: var(--li-colon-space);\\r\\n  }\\r\\n</style>\\r\\n{#if showKey && key}\\r\\n  <label class:spaced={isParentExpanded}>\\r\\n    <span>{key}{colon}</span>\\r\\n  </label>\\r\\n{/if}\"],\"names\":[],\"mappings\":\"AASE,KAAK,cAAC,CAAC,AACL,OAAO,CAAE,YAAY,CACrB,KAAK,CAAE,IAAI,aAAa,CAAC,CACzB,MAAM,CAAE,CAAC,AACX,CAAC,AACD,OAAO,cAAC,CAAC,AACP,YAAY,CAAE,IAAI,gBAAgB,CAAC,AACrC,CAAC\"}"
};

const JSONKey = index.create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	

  let { key, isParentExpanded, isParentArray = false, colon = ':' } = $$props;

	if ($$props.key === void 0 && $$bindings.key && key !== void 0) $$bindings.key(key);
	if ($$props.isParentExpanded === void 0 && $$bindings.isParentExpanded && isParentExpanded !== void 0) $$bindings.isParentExpanded(isParentExpanded);
	if ($$props.isParentArray === void 0 && $$bindings.isParentArray && isParentArray !== void 0) $$bindings.isParentArray(isParentArray);
	if ($$props.colon === void 0 && $$bindings.colon && colon !== void 0) $$bindings.colon(colon);

	$$result.css.add(css$7);

	let showKey = (isParentExpanded || !isParentArray || key != +key);

	return `${ showKey && key ? `<label class="${[`svelte-v9qszx`, isParentExpanded ? "spaced" : ""].join(' ').trim() }">
	    <span>${index.escape(key)}${index.escape(colon)}</span>
	  </label>` : `` }`;
});

var contextKey = {};

/* node_modules\svelte-json-tree\src\JSONNested.svelte generated by Svelte v3.12.0 */

const css$8 = {
	code: ".indent.svelte-573nma{margin-left:var(--li-identation)}.collapse.svelte-573nma{--li-display:inline;display:inline;font-style:italic}.comma.svelte-573nma{margin-left:-0.5em;margin-right:0.5em}",
	map: "{\"version\":3,\"file\":\"JSONNested.svelte\",\"sources\":[\"JSONNested.svelte\"],\"sourcesContent\":[\"<script>\\r\\n  import { getContext, setContext } from 'svelte';\\r\\n  import contextKey from './context';\\r\\n  import JSONArrow from './JSONArrow.svelte';\\r\\n  import JSONNode from './JSONNode.svelte';\\r\\n  import JSONKey from './JSONKey.svelte';\\r\\n\\r\\n  export let key, keys, colon = ':', label = '', isParentExpanded, isParentArray, isArray = false, bracketOpen, bracketClose;\\r\\n  export let previewKeys = keys;\\r\\n  export let getKey = key => key;\\r\\n  export let getValue = key => key;\\r\\n  export let getPreviewValue = getValue;\\r\\n  export let expanded = false, expandable = true;\\r\\n\\r\\n  const context = getContext(contextKey);\\r\\n  setContext(contextKey, { ...context, colon })\\r\\n\\r\\n  $: slicedKeys = expanded ? keys: previewKeys.slice(0, 5);\\r\\n\\r\\n  $: if (!isParentExpanded) {\\r\\n    expanded = false;\\r\\n  }\\r\\n\\r\\n  function toggleExpand() {\\r\\n    expanded = !expanded;\\r\\n  }\\r\\n\\r\\n  function expand() {\\r\\n    expanded = true;\\r\\n  }\\r\\n\\r\\n</script>\\r\\n<style>\\r\\n  .indent {\\r\\n    margin-left: var(--li-identation);\\r\\n  }\\r\\n  .collapse {\\r\\n    --li-display: inline;\\r\\n    display: inline;\\r\\n    font-style: italic;\\r\\n  }\\r\\n  .comma {\\r\\n    margin-left: -0.5em;\\r\\n    margin-right: 0.5em;\\r\\n  }\\r\\n</style>\\r\\n<li class:indent={isParentExpanded}>\\r\\n  {#if expandable && isParentExpanded}\\r\\n    <JSONArrow on:click={toggleExpand} {expanded} />\\r\\n  {/if}\\r\\n  <JSONKey {key} colon={context.colon} {isParentExpanded} {isParentArray} />\\r\\n  <span><span on:click={toggleExpand}>{label}</span>{bracketOpen}</span>\\r\\n    {#if isParentExpanded}\\r\\n      <ul class:collapse={!expanded} on:click={expand}>\\r\\n        {#each slicedKeys as key, index}\\r\\n          <JSONNode key={getKey(key)} isParentExpanded={expanded} isParentArray={isArray} value={expanded ? getValue(key) : getPreviewValue(key)} />\\r\\n          {#if !expanded && index < previewKeys.length - 1}\\r\\n            <span class=\\\"comma\\\">,</span>\\r\\n          {/if}\\r\\n        {/each}\\r\\n        {#if slicedKeys.length < previewKeys.length }\\r\\n          <span>…</span>\\r\\n        {/if}\\r\\n      </ul>\\r\\n    {:else}\\r\\n      <span>…</span>\\r\\n    {/if}\\r\\n  <span>{bracketClose}</span>\\r\\n</li>\"],\"names\":[],\"mappings\":\"AAiCE,OAAO,cAAC,CAAC,AACP,WAAW,CAAE,IAAI,eAAe,CAAC,AACnC,CAAC,AACD,SAAS,cAAC,CAAC,AACT,YAAY,CAAE,MAAM,CACpB,OAAO,CAAE,MAAM,CACf,UAAU,CAAE,MAAM,AACpB,CAAC,AACD,MAAM,cAAC,CAAC,AACN,WAAW,CAAE,MAAM,CACnB,YAAY,CAAE,KAAK,AACrB,CAAC\"}"
};

const JSONNested = index.create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	

  let { key, keys, colon = ':', label = '', isParentExpanded, isParentArray, isArray = false, bracketOpen, bracketClose, previewKeys = keys, getKey = key => key } = $$props;
  let { getValue = key => key } = $$props;
  let { getPreviewValue = getValue, expanded = false, expandable = true } = $$props;

  const context = index.getContext(contextKey);
  index.setContext(contextKey, { ...context, colon });

	if ($$props.key === void 0 && $$bindings.key && key !== void 0) $$bindings.key(key);
	if ($$props.keys === void 0 && $$bindings.keys && keys !== void 0) $$bindings.keys(keys);
	if ($$props.colon === void 0 && $$bindings.colon && colon !== void 0) $$bindings.colon(colon);
	if ($$props.label === void 0 && $$bindings.label && label !== void 0) $$bindings.label(label);
	if ($$props.isParentExpanded === void 0 && $$bindings.isParentExpanded && isParentExpanded !== void 0) $$bindings.isParentExpanded(isParentExpanded);
	if ($$props.isParentArray === void 0 && $$bindings.isParentArray && isParentArray !== void 0) $$bindings.isParentArray(isParentArray);
	if ($$props.isArray === void 0 && $$bindings.isArray && isArray !== void 0) $$bindings.isArray(isArray);
	if ($$props.bracketOpen === void 0 && $$bindings.bracketOpen && bracketOpen !== void 0) $$bindings.bracketOpen(bracketOpen);
	if ($$props.bracketClose === void 0 && $$bindings.bracketClose && bracketClose !== void 0) $$bindings.bracketClose(bracketClose);
	if ($$props.previewKeys === void 0 && $$bindings.previewKeys && previewKeys !== void 0) $$bindings.previewKeys(previewKeys);
	if ($$props.getKey === void 0 && $$bindings.getKey && getKey !== void 0) $$bindings.getKey(getKey);
	if ($$props.getValue === void 0 && $$bindings.getValue && getValue !== void 0) $$bindings.getValue(getValue);
	if ($$props.getPreviewValue === void 0 && $$bindings.getPreviewValue && getPreviewValue !== void 0) $$bindings.getPreviewValue(getPreviewValue);
	if ($$props.expanded === void 0 && $$bindings.expanded && expanded !== void 0) $$bindings.expanded(expanded);
	if ($$props.expandable === void 0 && $$bindings.expandable && expandable !== void 0) $$bindings.expandable(expandable);

	$$result.css.add(css$8);

	if (!isParentExpanded) {
        expanded = false;
      }
	let slicedKeys = expanded ? keys: previewKeys.slice(0, 5);

	return `<li class="${[`svelte-573nma`, isParentExpanded ? "indent" : ""].join(' ').trim() }">
	  ${ expandable && isParentExpanded ? `${index.validate_component(JSONArrow, 'JSONArrow').$$render($$result, { expanded: expanded }, {}, {})}` : `` }
	  ${index.validate_component(JSONKey, 'JSONKey').$$render($$result, {
		key: key,
		colon: context.colon,
		isParentExpanded: isParentExpanded,
		isParentArray: isParentArray
	}, {}, {})}
	  <span><span>${index.escape(label)}</span>${index.escape(bracketOpen)}</span>
	    ${ isParentExpanded ? `<ul class="${[`svelte-573nma`, !expanded ? "collapse" : ""].join(' ').trim() }">
	        ${index.each(slicedKeys, (key, index$1) => `${index.validate_component(JSONNode, 'JSONNode').$$render($$result, {
		key: getKey(key),
		isParentExpanded: expanded,
		isParentArray: isArray,
		value: expanded ? getValue(key) : getPreviewValue(key)
	}, {}, {})}
	          ${ !expanded && index$1 < previewKeys.length - 1 ? `<span class="comma svelte-573nma">,</span>` : `` }`)}
	        ${ slicedKeys.length < previewKeys.length ? `<span>…</span>` : `` }
	      </ul>` : `<span>…</span>` }
	  <span>${index.escape(bracketClose)}</span>
	</li>`;
});

/* node_modules\svelte-json-tree\src\JSONObjectNode.svelte generated by Svelte v3.12.0 */

const JSONObjectNode = index.create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	

  let { key, value, isParentExpanded, isParentArray, nodeType, expanded = false } = $$props;

  function getValue(key) {
    return value[key];
  }

	if ($$props.key === void 0 && $$bindings.key && key !== void 0) $$bindings.key(key);
	if ($$props.value === void 0 && $$bindings.value && value !== void 0) $$bindings.value(value);
	if ($$props.isParentExpanded === void 0 && $$bindings.isParentExpanded && isParentExpanded !== void 0) $$bindings.isParentExpanded(isParentExpanded);
	if ($$props.isParentArray === void 0 && $$bindings.isParentArray && isParentArray !== void 0) $$bindings.isParentArray(isParentArray);
	if ($$props.nodeType === void 0 && $$bindings.nodeType && nodeType !== void 0) $$bindings.nodeType(nodeType);
	if ($$props.expanded === void 0 && $$bindings.expanded && expanded !== void 0) $$bindings.expanded(expanded);

	let keys = Object.getOwnPropertyNames(value);

	return `${index.validate_component(JSONNested, 'JSONNested').$$render($$result, {
		key: key,
		expanded: expanded,
		isParentExpanded: isParentExpanded,
		isParentArray: isParentArray,
		keys: keys,
		getValue: getValue,
		label: `${index.escape(nodeType)} `,
		bracketOpen: '{',
		bracketClose: '}'
	}, {}, {})}`;
});

/* node_modules\svelte-json-tree\src\JSONArrayNode.svelte generated by Svelte v3.12.0 */

const JSONArrayNode = index.create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	

  let { key, value, isParentExpanded, isParentArray, expanded = false } = $$props;
  const filteredKey = new Set(['length']);

  function getValue(key) {
    return value[key];
  }

	if ($$props.key === void 0 && $$bindings.key && key !== void 0) $$bindings.key(key);
	if ($$props.value === void 0 && $$bindings.value && value !== void 0) $$bindings.value(value);
	if ($$props.isParentExpanded === void 0 && $$bindings.isParentExpanded && isParentExpanded !== void 0) $$bindings.isParentExpanded(isParentExpanded);
	if ($$props.isParentArray === void 0 && $$bindings.isParentArray && isParentArray !== void 0) $$bindings.isParentArray(isParentArray);
	if ($$props.expanded === void 0 && $$bindings.expanded && expanded !== void 0) $$bindings.expanded(expanded);

	let keys = Object.getOwnPropertyNames(value);
	let previewKeys = keys.filter(key => !filteredKey.has(key));

	return `${index.validate_component(JSONNested, 'JSONNested').$$render($$result, {
		key: key,
		expanded: expanded,
		isParentExpanded: isParentExpanded,
		isParentArray: isParentArray,
		isArray: true,
		keys: keys,
		previewKeys: previewKeys,
		getValue: getValue,
		label: `Array(${index.escape(value.length)})`,
		bracketOpen: "[",
		bracketClose: "]"
	}, {}, {})}`;
});

/* node_modules\svelte-json-tree\src\JSONIterableArrayNode.svelte generated by Svelte v3.12.0 */

function getKey(key) {
  return String(key[0]);
}

function getValue(key) {
  return key[1];
}

const JSONIterableArrayNode = index.create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	

  let { key, value, isParentExpanded, isParentArray, nodeType } = $$props;

  let keys = [];

	if ($$props.key === void 0 && $$bindings.key && key !== void 0) $$bindings.key(key);
	if ($$props.value === void 0 && $$bindings.value && value !== void 0) $$bindings.value(value);
	if ($$props.isParentExpanded === void 0 && $$bindings.isParentExpanded && isParentExpanded !== void 0) $$bindings.isParentExpanded(isParentExpanded);
	if ($$props.isParentArray === void 0 && $$bindings.isParentArray && isParentArray !== void 0) $$bindings.isParentArray(isParentArray);
	if ($$props.nodeType === void 0 && $$bindings.nodeType && nodeType !== void 0) $$bindings.nodeType(nodeType);

	{
        let result = [];
        let i = 0;
        for(const entry of value) {
          result.push([i++, entry]);
        }
        keys = result;
      }

	return `${index.validate_component(JSONNested, 'JSONNested').$$render($$result, {
		key: key,
		isParentExpanded: isParentExpanded,
		isParentArray: isParentArray,
		keys: keys,
		getKey: getKey,
		getValue: getValue,
		isArray: true,
		label: `${index.escape(nodeType)}(${index.escape(keys.length)})`,
		bracketOpen: '{',
		bracketClose: '}'
	}, {}, {})}`;
});

class MapEntry {
  constructor(key, value) {
    this.key = key;
    this.value = value;
  }
}

/* node_modules\svelte-json-tree\src\JSONIterableMapNode.svelte generated by Svelte v3.12.0 */

function getKey$1(entry) {
  return entry[0];
}

function getValue$1(entry) {
  return entry[1];
}

const JSONIterableMapNode = index.create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	

  let { key, value, isParentExpanded, isParentArray, nodeType } = $$props;

  let keys = [];

	if ($$props.key === void 0 && $$bindings.key && key !== void 0) $$bindings.key(key);
	if ($$props.value === void 0 && $$bindings.value && value !== void 0) $$bindings.value(value);
	if ($$props.isParentExpanded === void 0 && $$bindings.isParentExpanded && isParentExpanded !== void 0) $$bindings.isParentExpanded(isParentExpanded);
	if ($$props.isParentArray === void 0 && $$bindings.isParentArray && isParentArray !== void 0) $$bindings.isParentArray(isParentArray);
	if ($$props.nodeType === void 0 && $$bindings.nodeType && nodeType !== void 0) $$bindings.nodeType(nodeType);

	{
        let result = [];
        let i = 0;
        for(const entry of value) {
          result.push([i++, new MapEntry(entry[0], entry[1])]);
        }
        keys = result;
      }

	return `${index.validate_component(JSONNested, 'JSONNested').$$render($$result, {
		key: key,
		isParentExpanded: isParentExpanded,
		isParentArray: isParentArray,
		keys: keys,
		getKey: getKey$1,
		getValue: getValue$1,
		label: `${index.escape(nodeType)}(${index.escape(keys.length)})`,
		colon: '',
		bracketOpen: '{',
		bracketClose: '}'
	}, {}, {})}`;
});

/* node_modules\svelte-json-tree\src\JSONMapEntryNode.svelte generated by Svelte v3.12.0 */

const JSONMapEntryNode = index.create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	

  let { key, value, isParentExpanded, isParentArray, expanded = false } = $$props;

  const keys = ['key', 'value'];

  function getValue(key) {
    return value[key];
  }

	if ($$props.key === void 0 && $$bindings.key && key !== void 0) $$bindings.key(key);
	if ($$props.value === void 0 && $$bindings.value && value !== void 0) $$bindings.value(value);
	if ($$props.isParentExpanded === void 0 && $$bindings.isParentExpanded && isParentExpanded !== void 0) $$bindings.isParentExpanded(isParentExpanded);
	if ($$props.isParentArray === void 0 && $$bindings.isParentArray && isParentArray !== void 0) $$bindings.isParentArray(isParentArray);
	if ($$props.expanded === void 0 && $$bindings.expanded && expanded !== void 0) $$bindings.expanded(expanded);

	return `${index.validate_component(JSONNested, 'JSONNested').$$render($$result, {
		expanded: expanded,
		isParentExpanded: isParentExpanded,
		isParentArray: isParentArray,
		key: isParentExpanded ? String(key) : value.key,
		keys: keys,
		getValue: getValue,
		label: isParentExpanded ? ': Entry ': '=> ',
		bracketOpen: '{',
		bracketClose: '}'
	}, {}, {})}`;
});

/* node_modules\svelte-json-tree\src\JSONValueNode.svelte generated by Svelte v3.12.0 */

const css$9 = {
	code: "li.svelte-mm8vfs{user-select:text;word-wrap:break-word;word-break:break-all}.indent.svelte-mm8vfs{margin-left:var(--li-identation)}.String.svelte-mm8vfs{color:var(--string-color)}.Date.svelte-mm8vfs{color:var(--date-color)}.Number.svelte-mm8vfs{color:var(--number-color)}.Boolean.svelte-mm8vfs{color:var(--boolean-color)}.Null.svelte-mm8vfs{color:var(--null-color)}.Undefined.svelte-mm8vfs{color:var(--undefined-color)}.Function.svelte-mm8vfs{color:var(--function-color);font-style:italic}.Symbol.svelte-mm8vfs{color:var(--symbol-color)}",
	map: "{\"version\":3,\"file\":\"JSONValueNode.svelte\",\"sources\":[\"JSONValueNode.svelte\"],\"sourcesContent\":[\"<script>\\r\\n  import { getContext } from 'svelte';\\r\\n  import contextKey from './context';\\r\\n\\r\\n  import JSONKey from './JSONKey.svelte';\\r\\n\\r\\n  export let key, value, valueGetter = null, isParentExpanded, isParentArray, nodeType;\\r\\n\\r\\n  const { colon } = getContext(contextKey);\\r\\n</script>\\r\\n<style>\\r\\n  li {\\r\\n    user-select: text;\\r\\n    word-wrap: break-word;\\r\\n    word-break: break-all;\\r\\n  }\\r\\n  .indent {\\r\\n    margin-left: var(--li-identation);\\r\\n  }\\r\\n  .String {\\r\\n    color: var(--string-color);\\r\\n  }\\r\\n  .Date {\\r\\n    color: var(--date-color);\\r\\n  }\\r\\n  .Number {\\r\\n    color: var(--number-color);\\r\\n  }\\r\\n  .Boolean {\\r\\n    color: var(--boolean-color);\\r\\n  }\\r\\n  .Null {\\r\\n    color: var(--null-color);\\r\\n  }\\r\\n  .Undefined {\\r\\n    color: var(--undefined-color);\\r\\n  }\\r\\n  .Function {\\r\\n    color: var(--function-color);\\r\\n    font-style: italic;\\r\\n  }\\r\\n  .Symbol {\\r\\n    color: var(--symbol-color);\\r\\n  }\\r\\n</style>\\r\\n<li class:indent={isParentExpanded}>\\r\\n  <JSONKey {key} {colon} {isParentExpanded} {isParentArray} />\\r\\n  <span class={nodeType}>\\r\\n    {valueGetter ? valueGetter(value) : value}\\r\\n  </span>\\r\\n</li>\"],\"names\":[],\"mappings\":\"AAWE,EAAE,cAAC,CAAC,AACF,WAAW,CAAE,IAAI,CACjB,SAAS,CAAE,UAAU,CACrB,UAAU,CAAE,SAAS,AACvB,CAAC,AACD,OAAO,cAAC,CAAC,AACP,WAAW,CAAE,IAAI,eAAe,CAAC,AACnC,CAAC,AACD,OAAO,cAAC,CAAC,AACP,KAAK,CAAE,IAAI,cAAc,CAAC,AAC5B,CAAC,AACD,KAAK,cAAC,CAAC,AACL,KAAK,CAAE,IAAI,YAAY,CAAC,AAC1B,CAAC,AACD,OAAO,cAAC,CAAC,AACP,KAAK,CAAE,IAAI,cAAc,CAAC,AAC5B,CAAC,AACD,QAAQ,cAAC,CAAC,AACR,KAAK,CAAE,IAAI,eAAe,CAAC,AAC7B,CAAC,AACD,KAAK,cAAC,CAAC,AACL,KAAK,CAAE,IAAI,YAAY,CAAC,AAC1B,CAAC,AACD,UAAU,cAAC,CAAC,AACV,KAAK,CAAE,IAAI,iBAAiB,CAAC,AAC/B,CAAC,AACD,SAAS,cAAC,CAAC,AACT,KAAK,CAAE,IAAI,gBAAgB,CAAC,CAC5B,UAAU,CAAE,MAAM,AACpB,CAAC,AACD,OAAO,cAAC,CAAC,AACP,KAAK,CAAE,IAAI,cAAc,CAAC,AAC5B,CAAC\"}"
};

const JSONValueNode = index.create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	

  let { key, value, valueGetter = null, isParentExpanded, isParentArray, nodeType } = $$props;

  const { colon } = index.getContext(contextKey);

	if ($$props.key === void 0 && $$bindings.key && key !== void 0) $$bindings.key(key);
	if ($$props.value === void 0 && $$bindings.value && value !== void 0) $$bindings.value(value);
	if ($$props.valueGetter === void 0 && $$bindings.valueGetter && valueGetter !== void 0) $$bindings.valueGetter(valueGetter);
	if ($$props.isParentExpanded === void 0 && $$bindings.isParentExpanded && isParentExpanded !== void 0) $$bindings.isParentExpanded(isParentExpanded);
	if ($$props.isParentArray === void 0 && $$bindings.isParentArray && isParentArray !== void 0) $$bindings.isParentArray(isParentArray);
	if ($$props.nodeType === void 0 && $$bindings.nodeType && nodeType !== void 0) $$bindings.nodeType(nodeType);

	$$result.css.add(css$9);

	return `<li class="${[`svelte-mm8vfs`, isParentExpanded ? "indent" : ""].join(' ').trim() }">
	  ${index.validate_component(JSONKey, 'JSONKey').$$render($$result, {
		key: key,
		colon: colon,
		isParentExpanded: isParentExpanded,
		isParentArray: isParentArray
	}, {}, {})}
	  <span class="${index.escape(index.null_to_empty(nodeType))} svelte-mm8vfs">
	    ${index.escape(valueGetter ? valueGetter(value) : value)}
	  </span>
	</li>`;
});

/* node_modules\svelte-json-tree\src\ErrorNode.svelte generated by Svelte v3.12.0 */

const css$a = {
	code: "li.svelte-15gsn31{user-select:text;word-wrap:break-word;word-break:break-all}.indent.svelte-15gsn31{margin-left:var(--li-identation)}.collapse.svelte-15gsn31{--li-display:inline;display:inline;font-style:italic}",
	map: "{\"version\":3,\"file\":\"ErrorNode.svelte\",\"sources\":[\"ErrorNode.svelte\"],\"sourcesContent\":[\"<script>\\r\\n  import { getContext, setContext } from 'svelte';\\r\\n  import contextKey from './context';\\r\\n  import JSONArrow from './JSONArrow.svelte';\\r\\n  import JSONNode from './JSONNode.svelte';\\r\\n  import JSONKey from './JSONKey.svelte';\\r\\n\\r\\n  export let key, value, isParentExpanded, isParentArray;\\r\\n  export let expanded = false;\\r\\n\\r\\n  $: stack = value.stack.split('\\\\n');\\r\\n\\r\\n  const context = getContext(contextKey);\\r\\n  setContext(contextKey, { ...context, colon: ':' })\\r\\n\\r\\n  $: if (!isParentExpanded) {\\r\\n    expanded = false;\\r\\n  }\\r\\n\\r\\n  function toggleExpand() {\\r\\n    expanded = !expanded;\\r\\n  }\\r\\n</script>\\r\\n<style>\\r\\n  li {\\r\\n    user-select: text;\\r\\n    word-wrap: break-word;\\r\\n    word-break: break-all;\\r\\n  }\\r\\n  .indent {\\r\\n    margin-left: var(--li-identation);\\r\\n  }\\r\\n  .collapse {\\r\\n    --li-display: inline;\\r\\n    display: inline;\\r\\n    font-style: italic;\\r\\n  }\\r\\n</style>\\r\\n<li class:indent={isParentExpanded}>\\r\\n  {#if isParentExpanded}\\r\\n    <JSONArrow on:click={toggleExpand} {expanded} />\\r\\n  {/if}\\r\\n  <JSONKey {key} colon={context.colon} {isParentExpanded} {isParentArray} />\\r\\n  <span on:click={toggleExpand}>Error: {expanded?'':value.message}</span>\\r\\n  {#if isParentExpanded}\\r\\n    <ul class:collapse={!expanded}>\\r\\n      {#if expanded}\\r\\n        <JSONNode key=\\\"message\\\" value={value.message} />\\r\\n        <li>\\r\\n          <JSONKey key=\\\"stack\\\" colon=\\\":\\\" {isParentExpanded} />\\r\\n          <span>\\r\\n            {#each stack as line, index}\\r\\n              <span class:indent={index > 0}>{line}</span><br />\\r\\n            {/each}\\r\\n          </span>\\r\\n        </li>\\r\\n      {/if}\\r\\n    </ul>\\r\\n  {/if}\\r\\n</li>\"],\"names\":[],\"mappings\":\"AAwBE,EAAE,eAAC,CAAC,AACF,WAAW,CAAE,IAAI,CACjB,SAAS,CAAE,UAAU,CACrB,UAAU,CAAE,SAAS,AACvB,CAAC,AACD,OAAO,eAAC,CAAC,AACP,WAAW,CAAE,IAAI,eAAe,CAAC,AACnC,CAAC,AACD,SAAS,eAAC,CAAC,AACT,YAAY,CAAE,MAAM,CACpB,OAAO,CAAE,MAAM,CACf,UAAU,CAAE,MAAM,AACpB,CAAC\"}"
};

const ErrorNode = index.create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	

  let { key, value, isParentExpanded, isParentArray, expanded = false } = $$props;

  const context = index.getContext(contextKey);
  index.setContext(contextKey, { ...context, colon: ':' });

	if ($$props.key === void 0 && $$bindings.key && key !== void 0) $$bindings.key(key);
	if ($$props.value === void 0 && $$bindings.value && value !== void 0) $$bindings.value(value);
	if ($$props.isParentExpanded === void 0 && $$bindings.isParentExpanded && isParentExpanded !== void 0) $$bindings.isParentExpanded(isParentExpanded);
	if ($$props.isParentArray === void 0 && $$bindings.isParentArray && isParentArray !== void 0) $$bindings.isParentArray(isParentArray);
	if ($$props.expanded === void 0 && $$bindings.expanded && expanded !== void 0) $$bindings.expanded(expanded);

	$$result.css.add(css$a);

	let stack = value.stack.split('\n');
	if (!isParentExpanded) {
        expanded = false;
      }

	return `<li class="${[`svelte-15gsn31`, isParentExpanded ? "indent" : ""].join(' ').trim() }">
	  ${ isParentExpanded ? `${index.validate_component(JSONArrow, 'JSONArrow').$$render($$result, { expanded: expanded }, {}, {})}` : `` }
	  ${index.validate_component(JSONKey, 'JSONKey').$$render($$result, {
		key: key,
		colon: context.colon,
		isParentExpanded: isParentExpanded,
		isParentArray: isParentArray
	}, {}, {})}
	  <span>Error: ${index.escape(expanded?'':value.message)}</span>
	  ${ isParentExpanded ? `<ul class="${[`svelte-15gsn31`, !expanded ? "collapse" : ""].join(' ').trim() }">
	      ${ expanded ? `${index.validate_component(JSONNode, 'JSONNode').$$render($$result, { key: "message", value: value.message }, {}, {})}
	        <li class="svelte-15gsn31">
	          ${index.validate_component(JSONKey, 'JSONKey').$$render($$result, {
		key: "stack",
		colon: ":",
		isParentExpanded: isParentExpanded
	}, {}, {})}
	          <span>
	            ${index.each(stack, (line, index$1) => `<span class="${[`svelte-15gsn31`, index$1 > 0 ? "indent" : ""].join(' ').trim() }">${index.escape(line)}</span><br>`)}
	          </span>
	        </li>` : `` }
	    </ul>` : `` }
	</li>`;
});

/* node_modules\svelte-json-tree\src\JSONNode.svelte generated by Svelte v3.12.0 */

const JSONNode = index.create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	

  let { key, value, isParentExpanded, isParentArray } = $$props;
  const nodeType = objType(value);

	if ($$props.key === void 0 && $$bindings.key && key !== void 0) $$bindings.key(key);
	if ($$props.value === void 0 && $$bindings.value && value !== void 0) $$bindings.value(value);
	if ($$props.isParentExpanded === void 0 && $$bindings.isParentExpanded && isParentExpanded !== void 0) $$bindings.isParentExpanded(isParentExpanded);
	if ($$props.isParentArray === void 0 && $$bindings.isParentArray && isParentArray !== void 0) $$bindings.isParentArray(isParentArray);

	return `${ nodeType === 'Object' ? `${index.validate_component(JSONObjectNode, 'JSONObjectNode').$$render($$result, {
		key: key,
		value: value,
		isParentExpanded: isParentExpanded,
		isParentArray: isParentArray,
		nodeType: nodeType
	}, {}, {})}` : `${ nodeType === 'Error' ? `${index.validate_component(ErrorNode, 'ErrorNode').$$render($$result, {
		key: key,
		value: value,
		isParentExpanded: isParentExpanded,
		isParentArray: isParentArray
	}, {}, {})}` : `${ nodeType === 'Array' ? `${index.validate_component(JSONArrayNode, 'JSONArrayNode').$$render($$result, {
		key: key,
		value: value,
		isParentExpanded: isParentExpanded,
		isParentArray: isParentArray
	}, {}, {})}` : `${ nodeType === 'Iterable' || nodeType === 'Map' || nodeType === 'Set' ? `${ typeof value.set === 'function' ? `${index.validate_component(JSONIterableMapNode, 'JSONIterableMapNode').$$render($$result, {
		key: key,
		value: value,
		isParentExpanded: isParentExpanded,
		isParentArray: isParentArray,
		nodeType: nodeType
	}, {}, {})}` : `${index.validate_component(JSONIterableArrayNode, 'JSONIterableArrayNode').$$render($$result, {
		key: key,
		value: value,
		isParentExpanded: isParentExpanded,
		isParentArray: isParentArray,
		nodeType: nodeType
	}, {}, {})}` }` : `${ nodeType === 'MapEntry' ? `${index.validate_component(JSONMapEntryNode, 'JSONMapEntryNode').$$render($$result, {
		key: key,
		value: value,
		isParentExpanded: isParentExpanded,
		isParentArray: isParentArray,
		nodeType: nodeType
	}, {}, {})}` : `${ nodeType === 'String' ? `${index.validate_component(JSONValueNode, 'JSONValueNode').$$render($$result, {
		key: key,
		value: value,
		isParentExpanded: isParentExpanded,
		isParentArray: isParentArray,
		nodeType: nodeType,
		valueGetter: raw => `"${raw}"`
	}, {}, {})}` : `${ nodeType === 'Number' ? `${index.validate_component(JSONValueNode, 'JSONValueNode').$$render($$result, {
		key: key,
		value: value,
		isParentExpanded: isParentExpanded,
		isParentArray: isParentArray,
		nodeType: nodeType
	}, {}, {})}` : `${ nodeType === 'Boolean' ? `${index.validate_component(JSONValueNode, 'JSONValueNode').$$render($$result, {
		key: key,
		value: value,
		isParentExpanded: isParentExpanded,
		isParentArray: isParentArray,
		nodeType: nodeType,
		valueGetter: raw => (raw ? 'true' : 'false')
	}, {}, {})}` : `${ nodeType === 'Date' ? `${index.validate_component(JSONValueNode, 'JSONValueNode').$$render($$result, {
		key: key,
		value: value,
		isParentExpanded: isParentExpanded,
		isParentArray: isParentArray,
		nodeType: nodeType,
		valueGetter: raw => raw.toISOString()
	}, {}, {})}` : `${ nodeType === 'Null' ? `${index.validate_component(JSONValueNode, 'JSONValueNode').$$render($$result, {
		key: key,
		value: value,
		isParentExpanded: isParentExpanded,
		isParentArray: isParentArray,
		nodeType: nodeType,
		valueGetter: () => 'null'
	}, {}, {})}` : `${ nodeType === 'Undefined' ? `${index.validate_component(JSONValueNode, 'JSONValueNode').$$render($$result, {
		key: key,
		value: value,
		isParentExpanded: isParentExpanded,
		isParentArray: isParentArray,
		nodeType: nodeType,
		valueGetter: () => 'undefined'
	}, {}, {})}` : `${ nodeType === 'Function' || nodeType === 'Symbol' ? `${index.validate_component(JSONValueNode, 'JSONValueNode').$$render($$result, {
		key: key,
		value: value,
		isParentExpanded: isParentExpanded,
		isParentArray: isParentArray,
		nodeType: nodeType,
		valueGetter: raw => raw.toString()
	}, {}, {})}` : `${index.validate_component(JSONValueNode, 'JSONValueNode').$$render($$result, {
		key: key,
		value: value,
		isParentExpanded: isParentExpanded,
		isParentArray: isParentArray,
		nodeType: nodeType,
		valueGetter: () => `<${nodeType}>`
	}, {}, {})}` }` }` }` }` }` }` }` }` }` }` }` }`;
});

/* node_modules\svelte-json-tree\src\index.svelte generated by Svelte v3.12.0 */

const css$b = {
	code: "ul.svelte-1bcmroa{--string-color:#cb3f41;--symbol-color:#cb3f41;--boolean-color:#112aa7;--function-color:#112aa7;--number-color:#3029cf;--label-color:#871d8f;--arrow-color:#727272;--null-color:#8d8d8d;--undefined-color:#8d8d8d;--date-color:#8d8d8d;--li-identation:1em;--li-colon-space:0.3em;font-size:var(--json-tree-font-size, 12px);font-family:'Courier New', Courier, monospace}ul.svelte-1bcmroa li{line-height:var(--li-line-height, 1.3);display:var(--li-display, list-item);list-style:none}ul.svelte-1bcmroa,ul.svelte-1bcmroa ul{padding:0;margin:0}",
	map: "{\"version\":3,\"file\":\"index.svelte\",\"sources\":[\"index.svelte\"],\"sourcesContent\":[\"<script>\\r\\n  import JSONNode from './JSONNode.svelte';\\r\\n  import { setContext } from 'svelte';\\r\\n  import contextKey from './context';\\r\\n\\r\\n  setContext(contextKey, {});\\r\\n\\r\\n  export let key = '', value;\\r\\n</script>\\r\\n<style>\\r\\n  ul {\\r\\n    --string-color: #cb3f41;\\r\\n    --symbol-color: #cb3f41;\\r\\n    --boolean-color: #112aa7;\\r\\n    --function-color: #112aa7;\\r\\n    --number-color: #3029cf;\\r\\n    --label-color: #871d8f;\\r\\n    --arrow-color: #727272;\\r\\n    --null-color: #8d8d8d;\\r\\n    --undefined-color: #8d8d8d;\\r\\n    --date-color: #8d8d8d;\\r\\n    --li-identation: 1em;\\r\\n    --li-colon-space: 0.3em;\\r\\n    font-size: var(--json-tree-font-size, 12px);\\r\\n    font-family: 'Courier New', Courier, monospace;\\r\\n  }\\r\\n  ul :global(li) {\\r\\n    line-height: var(--li-line-height, 1.3);\\r\\n    display: var(--li-display, list-item);\\r\\n    list-style: none;\\r\\n  }\\r\\n  ul, ul :global(ul) {\\r\\n    padding: 0;\\r\\n    margin: 0;\\r\\n  }\\r\\n</style>\\r\\n<ul>\\r\\n  <JSONNode {key} {value} isParentExpanded={true} isParentArray={false} />\\r\\n</ul>\\r\\n\"],\"names\":[],\"mappings\":\"AAUE,EAAE,eAAC,CAAC,AACF,cAAc,CAAE,OAAO,CACvB,cAAc,CAAE,OAAO,CACvB,eAAe,CAAE,OAAO,CACxB,gBAAgB,CAAE,OAAO,CACzB,cAAc,CAAE,OAAO,CACvB,aAAa,CAAE,OAAO,CACtB,aAAa,CAAE,OAAO,CACtB,YAAY,CAAE,OAAO,CACrB,iBAAiB,CAAE,OAAO,CAC1B,YAAY,CAAE,OAAO,CACrB,eAAe,CAAE,GAAG,CACpB,gBAAgB,CAAE,KAAK,CACvB,SAAS,CAAE,IAAI,qBAAqB,CAAC,KAAK,CAAC,CAC3C,WAAW,CAAE,aAAa,CAAC,CAAC,OAAO,CAAC,CAAC,SAAS,AAChD,CAAC,AACD,iBAAE,CAAC,AAAQ,EAAE,AAAE,CAAC,AACd,WAAW,CAAE,IAAI,gBAAgB,CAAC,IAAI,CAAC,CACvC,OAAO,CAAE,IAAI,YAAY,CAAC,UAAU,CAAC,CACrC,UAAU,CAAE,IAAI,AAClB,CAAC,AACD,iBAAE,CAAE,iBAAE,CAAC,AAAQ,EAAE,AAAE,CAAC,AAClB,OAAO,CAAE,CAAC,CACV,MAAM,CAAE,CAAC,AACX,CAAC\"}"
};

const Index = index.create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	

  index.setContext(contextKey, {});

  let { key = '', value } = $$props;

	if ($$props.key === void 0 && $$bindings.key && key !== void 0) $$bindings.key(key);
	if ($$props.value === void 0 && $$bindings.value && value !== void 0) $$bindings.value(value);

	$$result.css.add(css$b);

	return `<ul class="svelte-1bcmroa">
	  ${index.validate_component(JSONNode, 'JSONNode').$$render($$result, {
		key: key,
		value: value,
		isParentExpanded: true,
		isParentArray: false
	}, {}, {})}
	</ul>`;
});

/* node_modules\@sveltejs\svelte-repl\src\Output\Console.svelte generated by Svelte v3.12.0 */

const css$c = {
	code: ".log.svelte-n9t3xp{border-bottom:1px solid #eee;padding:5px 10px;display:flex}.log.svelte-n9t3xp>*{margin-right:10px;font-family:var(--font-mono)}.console-warn.svelte-n9t3xp{background:#fffbe6;border-color:#fff4c4}.console-error.svelte-n9t3xp{background:#fff0f0;border-color:#fed6d7}.count.svelte-n9t3xp{color:#999;font-size:12px;line-height:1.2}.info.svelte-n9t3xp{color:#666;font-family:var(--font) !important;font-size:12px}.error.svelte-n9t3xp{color:#da106e}",
	map: "{\"version\":3,\"file\":\"Console.svelte\",\"sources\":[\"Console.svelte\"],\"sourcesContent\":[\"<script>\\r\\n\\timport JSONNode from 'svelte-json-tree';\\r\\n\\r\\n\\texport let logs;\\r\\n</script>\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n\\t{#each logs as log}\\r\\n\\t\\t<div class=\\\"log console-{log.level}\\\">\\r\\n\\t\\t\\t{#if log.count > 1}\\r\\n\\t\\t\\t\\t<span class=\\\"count\\\">{log.count}x</span>\\r\\n\\t\\t\\t{/if}\\r\\n\\r\\n\\t\\t\\t{#if log.level === 'clear'}\\r\\n\\t\\t\\t\\t<span class=\\\"info\\\">Console was cleared</span>\\r\\n\\t\\t\\t{:else if log.level === 'unclonable'}\\r\\n\\t\\t\\t\\t<span class=\\\"info error\\\">Message could not be cloned. Open devtools to see it</span>\\r\\n\\t\\t\\t{:else}\\r\\n\\t\\t\\t\\t{#each log.args as arg}\\r\\n\\t\\t\\t\\t\\t<JSONNode value={arg} />\\r\\n\\t\\t\\t\\t{/each}\\r\\n\\t\\t\\t{/if}\\r\\n\\t\\t</div>\\r\\n\\t{/each}\\r\\n</div>\\r\\n\\r\\n<style>\\r\\n\\t.log {\\r\\n\\t\\tborder-bottom: 1px solid #eee;\\r\\n\\t\\tpadding: 5px 10px;\\r\\n\\t\\tdisplay: flex;\\r\\n\\t}\\r\\n\\r\\n\\t.log > :global(*) {\\r\\n\\t\\tmargin-right: 10px;\\r\\n\\t\\tfont-family: var(--font-mono);\\r\\n\\t}\\r\\n\\r\\n\\t.console-warn {\\r\\n\\t\\tbackground: #fffbe6;\\r\\n\\t\\tborder-color: #fff4c4;\\r\\n\\t}\\r\\n\\r\\n\\t.console-error {\\r\\n\\t\\tbackground: #fff0f0;\\r\\n\\t\\tborder-color: #fed6d7;\\r\\n\\t}\\r\\n\\r\\n\\t.count {\\r\\n\\t\\tcolor: #999;\\r\\n\\t\\tfont-size: 12px;\\r\\n\\t\\tline-height: 1.2;\\r\\n\\t}\\r\\n\\r\\n\\t.info {\\r\\n\\t\\tcolor: #666;\\r\\n\\t\\tfont-family: var(--font) !important;\\r\\n\\t\\tfont-size: 12px;\\r\\n\\t}\\r\\n\\r\\n\\t.error {\\r\\n\\t\\tcolor: #da106e; /* todo make this a var */\\r\\n\\t}\\r\\n</style>\"],\"names\":[],\"mappings\":\"AA2BC,IAAI,cAAC,CAAC,AACL,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CAC7B,OAAO,CAAE,GAAG,CAAC,IAAI,CACjB,OAAO,CAAE,IAAI,AACd,CAAC,AAED,kBAAI,CAAW,CAAC,AAAE,CAAC,AAClB,YAAY,CAAE,IAAI,CAClB,WAAW,CAAE,IAAI,WAAW,CAAC,AAC9B,CAAC,AAED,aAAa,cAAC,CAAC,AACd,UAAU,CAAE,OAAO,CACnB,YAAY,CAAE,OAAO,AACtB,CAAC,AAED,cAAc,cAAC,CAAC,AACf,UAAU,CAAE,OAAO,CACnB,YAAY,CAAE,OAAO,AACtB,CAAC,AAED,MAAM,cAAC,CAAC,AACP,KAAK,CAAE,IAAI,CACX,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,GAAG,AACjB,CAAC,AAED,KAAK,cAAC,CAAC,AACN,KAAK,CAAE,IAAI,CACX,WAAW,CAAE,IAAI,MAAM,CAAC,CAAC,UAAU,CACnC,SAAS,CAAE,IAAI,AAChB,CAAC,AAED,MAAM,cAAC,CAAC,AACP,KAAK,CAAE,OAAO,AACf,CAAC\"}"
};

const Console = index.create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let { logs } = $$props;

	if ($$props.logs === void 0 && $$bindings.logs && logs !== void 0) $$bindings.logs(logs);

	$$result.css.add(css$c);

	return `<div class="container">
		${index.each(logs, (log) => `<div class="log console-${index.escape(log.level)} svelte-n9t3xp">
				${ log.count > 1 ? `<span class="count svelte-n9t3xp">${index.escape(log.count)}x</span>` : `` }

				${ log.level === 'clear' ? `<span class="info svelte-n9t3xp">Console was cleared</span>` : `${ log.level === 'unclonable' ? `<span class="info error svelte-n9t3xp">Message could not be cloned. Open devtools to see it</span>` : `${index.each(log.args, (arg) => `${index.validate_component(Index, 'JSONNode').$$render($$result, { value: arg }, {}, {})}`)}` }` }
			</div>`)}
	</div>`;
});

var srcdoc = "<!doctype html>\n<html>\n\t<head>\n\t\t<style>\n\t\t\thtml, body {\n\tposition: relative;\n\twidth: 100%;\n\theight: 100%;\n}\n\nbody {\n\tcolor: #333;\n\tmargin: 0;\n\tpadding: 8px;\n\tbox-sizing: border-box;\n\tfont-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen-Sans, Ubuntu, Cantarell, \"Helvetica Neue\", sans-serif;\n}\n\na {\n\tcolor: rgb(0,100,200);\n\ttext-decoration: none;\n}\n\na:hover {\n\ttext-decoration: underline;\n}\n\na:visited {\n\tcolor: rgb(0,80,160);\n}\n\nlabel {\n\tdisplay: block;\n}\n\ninput, button, select, textarea {\n\tfont-family: inherit;\n\tfont-size: inherit;\n\tpadding: 0.4em;\n\tmargin: 0 0 0.5em 0;\n\tbox-sizing: border-box;\n\tborder: 1px solid #ccc;\n\tborder-radius: 2px;\n}\n\ninput:disabled {\n\tcolor: #ccc;\n}\n\ninput[type=\"range\"] {\n\theight: 0;\n}\n\nbutton {\n\tcolor: #333;\n\tbackground-color: #f4f4f4;\n\toutline: none;\n}\n\nbutton:disabled {\n\tcolor: #999;\n}\n\nbutton:not(:disabled):active {\n\tbackground-color: #ddd;\n}\n\nbutton:focus {\n\tborder-color: #666;\n}\n\n\t\t</style>\n\n\t\t<script>\n\t\t\t(function(){\n\t\t\t\tfunction handle_message(ev) {\n\t\t\t\t\tlet { action, cmd_id } = ev.data;\n\t\t\t\t\tconst send_message = (payload) => parent.postMessage( { ...payload }, ev.origin);\n\t\t\t\t\tconst send_reply = (payload) => send_message({ ...payload, cmd_id });\n\t\t\t\t\tconst send_ok = () => send_reply({ action: 'cmd_ok' });\n\t\t\t\t\tconst send_error = (message, stack) => send_reply({ action: 'cmd_error', message, stack });\n\n\t\t\t\t\tif (action === 'eval') {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst { script } = ev.data.args;\n\t\t\t\t\t\t\teval(script);\n\t\t\t\t\t\t\tsend_ok();\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tsend_error(e.message, e.stack);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (action === 'catch_clicks') {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst top_origin = ev.origin;\n\t\t\t\t\t\t\tdocument.body.addEventListener('click', event => {\n\t\t\t\t\t\t\t\tif (event.which !== 1) return;\n\t\t\t\t\t\t\t\tif (event.metaKey || event.ctrlKey || event.shiftKey) return;\n\t\t\t\t\t\t\t\tif (event.defaultPrevented) return;\n\n\t\t\t\t\t\t\t\t// ensure target is a link\n\t\t\t\t\t\t\t\tlet el = event.target;\n\t\t\t\t\t\t\t\twhile (el && el.nodeName !== 'A') el = el.parentNode;\n\t\t\t\t\t\t\t\tif (!el || el.nodeName !== 'A') return;\n\n\t\t\t\t\t\t\t\tif (el.hasAttribute('download') || el.getAttribute('rel') === 'external' || el.target) return;\n\n\t\t\t\t\t\t\t\tevent.preventDefault();\n\n\t\t\t\t\t\t\t\tif (el.href.startsWith(top_origin)) {\n\t\t\t\t\t\t\t\t\tconst url = new URL(el.href);\n\t\t\t\t\t\t\t\t\tif (url.hash[0] === '#') {\n\t\t\t\t\t\t\t\t\t\twindow.location.hash = url.hash;\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\twindow.open(el.href, '_blank');\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tsend_ok();\n\t\t\t\t\t\t} catch(e) {\n\t\t\t\t\t\t\tsend_error(e.message, e.stack);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\twindow.addEventListener('message', handle_message, false);\n\n\t\t\t\twindow.onerror = function (msg, url, lineNo, columnNo, error) {\n\t\t\t\t\tparent.postMessage({ action: 'error', value: error }, '*');\n\t\t\t\t}\n\n\t\t\t\twindow.addEventListener(\"unhandledrejection\", event => {\n\t\t\t\t\tparent.postMessage({ action: 'unhandledrejection', value: event.reason }, '*');\n\t\t\t\t});\n\t\t\t}).call(this);\n\n\t\t\t// TODO handle group/groupEnd, table, trace, etc\n\t\t\tlet previous = { level: null, args: null };\n\n\t\t\t['clear', 'log', 'info', 'dir', 'warn', 'error'].forEach((level) => {\n\t\t\t\tconst original = console[level];\n\t\t\t\tconsole[level] = (...args) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tprevious.level === level &&\n\t\t\t\t\t\tprevious.args.length === args.length &&\n\t\t\t\t\t\tprevious.args.every((a, i) => a === args[i])\n\t\t\t\t\t) {\n\t\t\t\t\t\tparent.postMessage({ action: 'console', level, duplicate: true }, '*');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprevious = { level, args };\n\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tparent.postMessage({ action: 'console', level, args }, '*');\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\tparent.postMessage({ action: 'console', level: 'unclonable' }, '*');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\toriginal(...args);\n\t\t\t\t}\n\t\t\t})\n\t\t</script>\n\t</head>\n\t<body></body>\n</html>";

/* node_modules\@sveltejs\svelte-repl\src\Output\Viewer.svelte generated by Svelte v3.12.0 */

const css$d = {
	code: ".iframe-container.svelte-1d9710i{position:absolute;background-color:white;border:none;width:100%;height:100%}iframe.svelte-1d9710i{width:100%;height:100%;border:none;display:block}.greyed-out.svelte-1d9710i{filter:grayscale(50%) blur(1px);opacity:.25}button.svelte-1d9710i{color:#999;font-size:12px;text-transform:uppercase;display:block}button.svelte-1d9710i:hover{color:#333}.overlay.svelte-1d9710i{position:absolute;bottom:0;width:100%}",
	map: "{\"version\":3,\"file\":\"Viewer.svelte\",\"sources\":[\"Viewer.svelte\"],\"sourcesContent\":[\"<script>\\r\\n\\timport { onMount, getContext } from 'svelte';\\r\\n\\timport getLocationFromStack from './getLocationFromStack.js';\\r\\n\\timport SplitPane from '../SplitPane.svelte';\\r\\n\\timport PaneWithPanel from './PaneWithPanel.svelte';\\r\\n\\timport ReplProxy from './ReplProxy.js';\\r\\n\\timport Console from './Console.svelte';\\r\\n\\timport Message from '../Message.svelte';\\r\\n\\timport srcdoc from './srcdoc/index.js';\\r\\n\\r\\n\\tconst { bundle } = getContext('REPL');\\r\\n\\r\\n\\texport let error; // TODO should this be exposed as a prop?\\r\\n\\tlet logs = [];\\r\\n\\r\\n\\texport function setProp(prop, value) {\\r\\n\\t\\tif (!proxy) return;\\r\\n\\t\\tproxy.setProp(prop, value);\\r\\n\\t}\\r\\n\\r\\n\\texport let status;\\r\\n\\texport let relaxed = false;\\r\\n\\texport let injectedJS = '';\\r\\n\\texport let injectedCSS = '';\\r\\n\\r\\n\\tlet iframe;\\r\\n\\tlet pending_imports = 0;\\r\\n\\tlet pending = false;\\r\\n\\r\\n\\tlet proxy = null;\\r\\n\\r\\n\\tlet ready = false;\\r\\n\\tlet inited = false;\\r\\n\\r\\n\\tlet log_height = 90;\\r\\n\\tlet prev_height;\\r\\n\\r\\n\\tlet last_console_event;\\r\\n\\r\\n\\tonMount(() => {\\r\\n\\t\\tproxy = new ReplProxy(iframe, {\\r\\n\\t\\t\\ton_fetch_progress: progress => {\\r\\n\\t\\t\\t\\tpending_imports = progress;\\r\\n\\t\\t\\t},\\r\\n\\t\\t\\ton_error: event => {\\r\\n\\t\\t\\t\\tpush_logs({ level: 'error', args: [event.value]});\\r\\n\\t\\t\\t},\\r\\n\\t\\t\\ton_unhandled_rejection: event => {\\r\\n\\t\\t\\t\\tlet error = event.value;\\r\\n\\t\\t\\t\\tif (typeof error === 'string') error = { message: error };\\r\\n\\t\\t\\t\\terror.message = 'Uncaught (in promise): ' + error.message;\\r\\n\\t\\t\\t\\tpush_logs({ level: 'error', args: [error]});\\r\\n\\t\\t\\t},\\r\\n\\t\\t\\ton_console: log => {\\r\\n\\t\\t\\t\\tif (log.level === 'clear') {\\r\\n\\t\\t\\t\\t\\tlogs = [log];\\r\\n\\t\\t\\t\\t} else if (log.duplicate) {\\r\\n\\t\\t\\t\\t\\tconst last_log = logs[logs.length - 1];\\r\\n\\r\\n\\t\\t\\t\\t\\tif (last_log) {\\r\\n\\t\\t\\t\\t\\t\\tlast_log.count = (last_log.count || 1) + 1;\\r\\n\\t\\t\\t\\t\\t\\tlogs = logs;\\r\\n\\t\\t\\t\\t\\t} else {\\r\\n\\t\\t\\t\\t\\t\\tlast_console_event.count = 1;\\r\\n\\t\\t\\t\\t\\t\\tlogs = [last_console_event];\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t} else {\\r\\n\\t\\t\\t\\t\\tpush_logs(log);\\r\\n\\t\\t\\t\\t\\tlast_console_event = log;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t});\\r\\n\\r\\n\\t\\tiframe.addEventListener('load', () => {\\r\\n\\t\\t\\tproxy.handle_links();\\r\\n\\t\\t\\tready = true;\\r\\n\\t\\t});\\r\\n\\r\\n\\r\\n\\t\\treturn () => {\\r\\n\\t\\t\\tproxy.destroy();\\r\\n\\t\\t}\\r\\n\\t});\\r\\n\\r\\n\\tasync function apply_bundle($bundle) {\\r\\n\\t\\tif (!$bundle || $bundle.error) return;\\r\\n\\r\\n\\t\\ttry {\\r\\n\\t\\t\\tclear_logs();\\r\\n\\r\\n\\t\\t\\tawait proxy.eval(`\\r\\n\\t\\t\\t\\t${injectedJS}\\r\\n\\r\\n\\t\\t\\t\\t${styles}\\r\\n\\r\\n\\t\\t\\t\\tconst styles = document.querySelectorAll('style[id^=svelte-]');\\r\\n\\r\\n\\t\\t\\t\\t${$bundle.dom.code}\\r\\n\\r\\n\\t\\t\\t\\tlet i = styles.length;\\r\\n\\t\\t\\t\\twhile (i--) styles[i].parentNode.removeChild(styles[i]);\\r\\n\\r\\n\\t\\t\\t\\tif (window.component) {\\r\\n\\t\\t\\t\\t\\ttry {\\r\\n\\t\\t\\t\\t\\t\\twindow.component.$destroy();\\r\\n\\t\\t\\t\\t\\t} catch (err) {\\r\\n\\t\\t\\t\\t\\t\\tconsole.error(err);\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tdocument.body.innerHTML = '';\\r\\n\\t\\t\\t\\twindow.location.hash = '';\\r\\n\\t\\t\\t\\twindow._svelteTransitionManager = null;\\r\\n\\r\\n\\t\\t\\t\\twindow.component = new SvelteComponent.default({\\r\\n\\t\\t\\t\\t\\ttarget: document.body\\r\\n\\t\\t\\t\\t});\\r\\n\\t\\t\\t`);\\r\\n\\r\\n\\t\\t\\terror = null;\\r\\n\\t\\t} catch (e) {\\r\\n\\t\\t\\tshow_error(e);\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tinited = true;\\r\\n\\t}\\r\\n\\r\\n\\t$: if (ready) apply_bundle($bundle);\\r\\n\\r\\n\\t$: styles = injectedCSS && `{\\r\\n\\t\\tconst style = document.createElement('style');\\r\\n\\t\\tstyle.textContent = ${JSON.stringify(injectedCSS)};\\r\\n\\t\\tdocument.head.appendChild(style);\\r\\n\\t}`;\\r\\n\\r\\n\\tfunction show_error(e) {\\r\\n\\t\\tconst loc = getLocationFromStack(e.stack, $bundle.dom.map);\\r\\n\\t\\tif (loc) {\\r\\n\\t\\t\\te.filename = loc.source;\\r\\n\\t\\t\\te.loc = { line: loc.line, column: loc.column };\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\terror = e;\\r\\n\\t}\\r\\n\\r\\n\\tfunction push_logs(log) {\\r\\n\\t\\tlogs = [...logs, log];\\r\\n\\t}\\r\\n\\r\\n\\tfunction on_toggle_console() {\\r\\n\\t\\tif (log_height < 90) {\\r\\n\\t\\t\\tprev_height = log_height;\\r\\n\\t\\t\\tlog_height = 90;\\r\\n\\t\\t} else {\\r\\n\\t\\t\\tlog_height = prev_height || 45;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tfunction clear_logs() {\\r\\n\\t\\tlogs = [];\\r\\n\\t}\\r\\n</script>\\r\\n\\r\\n<style>\\r\\n\\t.iframe-container {\\r\\n\\t\\tposition: absolute;\\r\\n\\t\\tbackground-color: white;\\r\\n\\t\\tborder: none;\\r\\n\\t\\twidth: 100%;\\r\\n\\t\\theight: 100%;\\r\\n\\t}\\r\\n\\r\\n\\tiframe {\\r\\n\\t\\twidth: 100%;\\r\\n\\t\\theight: 100%;\\r\\n\\t\\t/* height: calc(100vh - var(--nav-h)); */\\r\\n\\t\\tborder: none;\\r\\n\\t\\tdisplay: block;\\r\\n\\t}\\r\\n\\r\\n\\t.greyed-out {\\r\\n\\t\\tfilter: grayscale(50%) blur(1px);\\r\\n\\t\\topacity: .25;\\r\\n\\t}\\r\\n\\r\\n\\tbutton {\\r\\n\\t\\tcolor: #999;\\r\\n\\t\\tfont-size: 12px;\\r\\n\\t\\ttext-transform: uppercase;\\r\\n\\t\\tdisplay: block;\\r\\n\\t}\\r\\n\\r\\n\\tbutton:hover {\\r\\n\\t\\tcolor: #333;\\r\\n\\t}\\r\\n\\r\\n\\t.overlay {\\r\\n\\t\\tposition: absolute;\\r\\n\\t\\tbottom: 0;\\r\\n\\t\\twidth: 100%;\\r\\n\\t}\\r\\n</style>\\r\\n\\r\\n<div class=\\\"iframe-container\\\">\\r\\n\\t<PaneWithPanel pos={100} panel=\\\"Console\\\">\\r\\n\\t\\t<div slot=\\\"main\\\">\\r\\n\\t\\t\\t<iframe\\r\\n\\t\\t\\t\\ttitle=\\\"Result\\\"\\r\\n\\t\\t\\t\\tclass:inited\\r\\n\\t\\t\\t\\tbind:this={iframe}\\r\\n\\t\\t\\t\\tsandbox=\\\"allow-popups-to-escape-sandbox allow-scripts allow-popups allow-forms allow-pointer-lock allow-top-navigation allow-modals {relaxed ? 'allow-same-origin' : ''}\\\"\\r\\n\\t\\t\\t\\tclass=\\\"{error || pending || pending_imports ? 'greyed-out' : ''}\\\"\\r\\n\\t\\t\\t\\t{srcdoc}\\r\\n\\t\\t\\t></iframe>\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t\\t<div slot=\\\"panel-header\\\">\\r\\n\\t\\t\\t<button on:click|stopPropagation={clear_logs}>\\r\\n\\t\\t\\t\\t{#if (logs.length > 0)}({logs.length}){/if}\\r\\n\\t\\t\\t\\tClear\\r\\n\\t\\t\\t</button>\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t\\t<section slot=\\\"panel-body\\\">\\r\\n\\t\\t\\t<Console {logs} on:clear={clear_logs}/>\\r\\n\\t\\t</section>\\r\\n\\t</PaneWithPanel>\\r\\n\\r\\n\\t<div class=\\\"overlay\\\">\\r\\n\\t\\t{#if error}\\r\\n\\t\\t\\t<Message kind=\\\"error\\\" details={error}/>\\r\\n\\t\\t{:else if status || !$bundle}\\r\\n\\t\\t\\t<Message kind=\\\"info\\\" truncate>{status || 'loading Svelte compiler...'}</Message>\\r\\n\\t\\t{/if}\\r\\n\\t</div>\\r\\n</div>\"],\"names\":[],\"mappings\":\"AAoKC,iBAAiB,eAAC,CAAC,AAClB,QAAQ,CAAE,QAAQ,CAClB,gBAAgB,CAAE,KAAK,CACvB,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,AACb,CAAC,AAED,MAAM,eAAC,CAAC,AACP,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CAEZ,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,KAAK,AACf,CAAC,AAED,WAAW,eAAC,CAAC,AACZ,MAAM,CAAE,UAAU,GAAG,CAAC,CAAC,KAAK,GAAG,CAAC,CAChC,OAAO,CAAE,GAAG,AACb,CAAC,AAED,MAAM,eAAC,CAAC,AACP,KAAK,CAAE,IAAI,CACX,SAAS,CAAE,IAAI,CACf,cAAc,CAAE,SAAS,CACzB,OAAO,CAAE,KAAK,AACf,CAAC,AAED,qBAAM,MAAM,AAAC,CAAC,AACb,KAAK,CAAE,IAAI,AACZ,CAAC,AAED,QAAQ,eAAC,CAAC,AACT,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,CAAC,CACT,KAAK,CAAE,IAAI,AACZ,CAAC\"}"
};

let pending = false;

const Viewer = index.create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let $bundle;

	

	const { bundle } = index.getContext('REPL'); $bundle = index.get_store_value(bundle);

	let { error } = $$props; // TODO should this be exposed as a prop?
	let logs = [];

	function setProp(prop, value) {
		if (!proxy) return;
		proxy.setProp(prop, value);
	}

	let { status, relaxed = false, injectedJS = '', injectedCSS = '' } = $$props;

	let iframe;
	let pending_imports = 0;

	let proxy = null;

	let ready = false;
	let inited = false;

	let last_console_event;

	index.onMount(() => {
		proxy = new ReplProxy(iframe, {
			on_fetch_progress: progress => {
				pending_imports = progress;
			},
			on_error: event => {
				push_logs({ level: 'error', args: [event.value]});
			},
			on_unhandled_rejection: event => {
				let error = event.value;
				if (typeof error === 'string') error = { message: error };
				error.message = 'Uncaught (in promise): ' + error.message;
				push_logs({ level: 'error', args: [error]});
			},
			on_console: log => {
				if (log.level === 'clear') {
					logs = [log];
				} else if (log.duplicate) {
					const last_log = logs[logs.length - 1];

					if (last_log) {
						last_log.count = (last_log.count || 1) + 1;
						logs = logs;
					} else {
						last_console_event.count = 1;
						logs = [last_console_event];
					}
				} else {
					push_logs(log);
					last_console_event = log;
				}
			}
		});

		iframe.addEventListener('load', () => {
			proxy.handle_links();
			ready = true;
		});


		return () => {
			proxy.destroy();
		}
	});

	async function apply_bundle($bundle) {
		if (!$bundle || $bundle.error) return;

		try {
			clear_logs();

			await proxy.eval(`
				${injectedJS}

				${styles}

				const styles = document.querySelectorAll('style[id^=svelte-]');

				${$bundle.dom.code}

				let i = styles.length;
				while (i--) styles[i].parentNode.removeChild(styles[i]);

				if (window.component) {
					try {
						window.component.$destroy();
					} catch (err) {
						console.error(err);
					}
				}

				document.body.innerHTML = '';
				window.location.hash = '';
				window._svelteTransitionManager = null;

				window.component = new SvelteComponent.default({
					target: document.body
				});
			`);

			error = null;
		} catch (e) {
			show_error(e);
		}

		inited = true;
	}

	function show_error(e) {
		const loc = getLocationFromStack(e.stack, $bundle.dom.map);
		if (loc) {
			e.filename = loc.source;
			e.loc = { line: loc.line, column: loc.column };
		}

		error = e;
	}

	function push_logs(log) {
		logs = [...logs, log];
	}

	function clear_logs() {
		logs = [];
	}

	if ($$props.error === void 0 && $$bindings.error && error !== void 0) $$bindings.error(error);
	if ($$props.setProp === void 0 && $$bindings.setProp && setProp !== void 0) $$bindings.setProp(setProp);
	if ($$props.status === void 0 && $$bindings.status && status !== void 0) $$bindings.status(status);
	if ($$props.relaxed === void 0 && $$bindings.relaxed && relaxed !== void 0) $$bindings.relaxed(relaxed);
	if ($$props.injectedJS === void 0 && $$bindings.injectedJS && injectedJS !== void 0) $$bindings.injectedJS(injectedJS);
	if ($$props.injectedCSS === void 0 && $$bindings.injectedCSS && injectedCSS !== void 0) $$bindings.injectedCSS(injectedCSS);

	$$result.css.add(css$d);

	$bundle = index.get_store_value(bundle);

	if (ready) apply_bundle($bundle);
	let styles = injectedCSS && `{
		const style = document.createElement('style');
		style.textContent = ${JSON.stringify(injectedCSS)};
		document.head.appendChild(style);
	}`;

	return `<div class="iframe-container svelte-1d9710i">
		${index.validate_component(PaneWithPanel, 'PaneWithPanel').$$render($$result, { pos: 100, panel: "Console" }, {}, {
		default: () => `
			`,
		main: () => `<div slot="main">
				<iframe title="Result" sandbox="allow-popups-to-escape-sandbox allow-scripts allow-popups allow-forms allow-pointer-lock allow-top-navigation allow-modals ${index.escape(relaxed ? 'allow-same-origin' : '')}" class="${[`${index.escape(index.null_to_empty(error || pending || pending_imports ? 'greyed-out' : ''))} svelte-1d9710i`, inited ? "inited" : ""].join(' ').trim() }"${index.add_attribute("srcdoc", srcdoc, 0)}${index.add_attribute("this", iframe, 1)}></iframe>
			</div>

			`,
		"panel-header": () => `<div slot="panel-header">
				<button class="svelte-1d9710i">
					${ (logs.length > 0) ? `(${index.escape(logs.length)})` : `` }
					Clear
				</button>
			</div>

			`,
		"panel-body": () => `<section slot="panel-body">
				${index.validate_component(Console, 'Console').$$render($$result, { logs: logs }, {}, {})}
			</section>
		`
	})}

		<div class="overlay svelte-1d9710i">
			${ error ? `${index.validate_component(Message, 'Message').$$render($$result, { kind: "error", details: error }, {}, {})}` : `${ status || !$bundle ? `${index.validate_component(Message, 'Message').$$render($$result, { kind: "info", truncate: true }, {}, {
		default: () => `${index.escape(status || 'loading Svelte compiler...')}`
	})}` : `` }` }
		</div>
	</div>`;
});

/* node_modules\@sveltejs\svelte-repl\src\Output\CompilerOptions.svelte generated by Svelte v3.12.0 */

const css$e = {
	code: ".options.svelte-b58a6z{padding:0 10px;font-family:var(--font-mono);font-size:13px;color:#999;line-height:1.8}.option.svelte-b58a6z{display:block;padding:0 0 0 1.25em;white-space:nowrap;color:#333;user-select:none}.key.svelte-b58a6z{display:inline-block;width:9em}.string.svelte-b58a6z{color:hsl(41, 37%, 45%)}.boolean.svelte-b58a6z{color:hsl(45, 7%, 45%)}label.svelte-b58a6z{display:inline-block}label[for].svelte-b58a6z{color:var(--string)}input[type=checkbox].svelte-b58a6z{top:-1px}input[type=radio].svelte-b58a6z{position:absolute;top:auto;overflow:hidden;clip:rect(1px, 1px, 1px, 1px);width:1px;height:1px;white-space:nowrap}input[type=radio]+label.svelte-b58a6z{padding:0 0 0 1.6em;margin:0 0.6em 0 0;opacity:0.7}input[type=radio]:checked+label.svelte-b58a6z{opacity:1}input[type=radio]+label.svelte-b58a6z:before{content:'';background:#eee;display:block;box-sizing:border-box;float:left;width:15px;height:15px;margin-left:-21px;margin-top:4px;vertical-align:top;cursor:pointer;text-align:center;transition:box-shadow 0.1s ease-out}input[type=radio]+label.svelte-b58a6z:before{background-color:var(--second);border-radius:100%;box-shadow:inset 0 0 0 0.5em rgba(255, 255, 255, .95);border:1px solid var(--second)}input[type=radio]:checked+label.svelte-b58a6z:before{background-color:var(--prime);box-shadow:inset 0 0 0 .15em rgba(255, 255, 255, .95);border:1px solid var(--second);transition:box-shadow 0.2s ease-out}",
	map: "{\"version\":3,\"file\":\"CompilerOptions.svelte\",\"sources\":[\"CompilerOptions.svelte\"],\"sourcesContent\":[\"<script>\\r\\n\\timport { getContext } from 'svelte';\\r\\n\\r\\n\\tconst { compile_options } = getContext('REPL');\\r\\n</script>\\r\\n\\r\\n<style>\\r\\n\\t.options {\\r\\n\\t\\tpadding: 0 10px;\\r\\n\\t\\tfont-family: var(--font-mono);\\r\\n\\t\\tfont-size: 13px;\\r\\n\\t\\tcolor: #999;\\r\\n\\t\\tline-height: 1.8;\\r\\n\\t}\\r\\n\\r\\n\\t.option {\\r\\n\\t\\tdisplay: block;\\r\\n\\t\\tpadding: 0 0 0 1.25em;\\r\\n\\t\\twhite-space: nowrap;\\r\\n\\t\\tcolor: #333;\\r\\n\\t\\tuser-select: none;\\r\\n\\t}\\r\\n\\r\\n\\t.key {\\r\\n\\t\\tdisplay: inline-block;\\r\\n\\t\\twidth: 9em;\\r\\n\\t}\\r\\n\\r\\n\\t.string {\\r\\n\\t\\tcolor: hsl(41, 37%, 45%);\\r\\n\\t}\\r\\n\\r\\n\\t.boolean {\\r\\n\\t\\tcolor: hsl(45, 7%, 45%);\\r\\n\\t}\\r\\n\\r\\n\\tlabel {\\r\\n\\t\\tdisplay: inline-block;\\r\\n\\t}\\r\\n\\r\\n\\tlabel[for] {\\r\\n\\t\\tcolor: var(--string);\\r\\n\\t}\\r\\n\\r\\n\\tinput[type=checkbox] {\\r\\n\\t\\ttop: -1px;\\r\\n\\t}\\r\\n\\r\\n\\tinput[type=radio] {\\r\\n\\t\\tposition: absolute;\\r\\n\\t\\ttop: auto;\\r\\n\\t\\toverflow: hidden;\\r\\n\\t\\tclip: rect(1px, 1px, 1px, 1px);\\r\\n\\t\\twidth: 1px;\\r\\n\\t\\theight: 1px;\\r\\n\\t\\twhite-space: nowrap;\\r\\n\\t}\\r\\n\\r\\n\\tinput[type=radio] + label {\\r\\n\\t\\tpadding: 0 0 0 1.6em;\\r\\n\\t\\tmargin: 0 0.6em 0 0;\\r\\n\\t\\topacity: 0.7;\\r\\n\\t}\\r\\n\\r\\n\\tinput[type=radio]:checked + label {\\r\\n\\t\\topacity: 1;\\r\\n\\t}\\r\\n\\r\\n\\t/* input[type=radio]:focus + label {\\r\\n\\t\\tcolor: #00f;\\r\\n\\t\\toutline: 1px dotted #00f;\\r\\n\\t} */\\r\\n\\r\\n\\tinput[type=radio] + label:before {\\r\\n\\t\\tcontent: '';\\r\\n\\t\\tbackground: #eee;\\r\\n\\t\\tdisplay: block;\\r\\n\\t\\tbox-sizing: border-box;\\r\\n\\t\\tfloat: left;\\r\\n\\t\\twidth: 15px;\\r\\n\\t\\theight: 15px;\\r\\n\\t\\tmargin-left: -21px;\\r\\n\\t\\tmargin-top: 4px;\\r\\n\\t\\tvertical-align: top;\\r\\n\\t\\tcursor: pointer;\\r\\n\\t\\ttext-align: center;\\r\\n\\t\\ttransition: box-shadow 0.1s ease-out;\\r\\n\\t}\\r\\n\\r\\n\\tinput[type=radio] + label:before {\\r\\n\\t\\tbackground-color: var(--second);\\r\\n\\t\\tborder-radius: 100%;\\r\\n\\t\\tbox-shadow: inset 0 0 0 0.5em rgba(255, 255, 255, .95);\\r\\n\\t\\tborder: 1px solid var(--second);\\r\\n\\t}\\r\\n\\r\\n\\tinput[type=radio]:checked + label:before {\\r\\n\\t\\tbackground-color: var(--prime);\\r\\n\\t\\tbox-shadow: inset 0 0 0 .15em rgba(255, 255, 255, .95);\\r\\n\\t\\tborder: 1px solid var(--second);\\r\\n\\t\\ttransition: box-shadow 0.2s ease-out;\\r\\n\\t}\\r\\n</style>\\r\\n\\r\\n<div class=\\\"options\\\">\\r\\n\\tresult = svelte.compile(source, &#123;\\r\\n\\t<div class=\\\"option\\\">\\r\\n\\t\\t<span class=\\\"key\\\">generate:</span>\\r\\n\\r\\n\\t\\t<input id=\\\"dom-input\\\" type=\\\"radio\\\" bind:group={$compile_options.generate} value=\\\"dom\\\">\\r\\n\\t\\t<label for=\\\"dom-input\\\"><span class=\\\"string\\\">\\\"dom\\\"</span></label>\\r\\n\\r\\n\\t\\t<input id=\\\"ssr-input\\\" type=\\\"radio\\\" bind:group={$compile_options.generate} value=\\\"ssr\\\">\\r\\n\\t\\t<label for=\\\"ssr-input\\\"><span class=\\\"string\\\">\\\"ssr\\\"</span>,</label>\\r\\n\\t</div>\\r\\n\\r\\n\\t<label class=\\\"option\\\">\\r\\n\\t\\t<span class=\\\"key\\\">dev:</span>\\r\\n\\t\\t<input type=\\\"checkbox\\\" bind:checked={$compile_options.dev}> <span class=\\\"boolean\\\">{$compile_options.dev}</span>,\\r\\n\\t</label>\\r\\n\\r\\n\\t<label class=\\\"option\\\">\\r\\n\\t\\t<span class=\\\"key\\\">css:</span>\\r\\n\\t\\t<input type=\\\"checkbox\\\" bind:checked={$compile_options.css}> <span class=\\\"boolean\\\">{$compile_options.css}</span>,\\r\\n\\t</label>\\r\\n\\r\\n\\t<label class=\\\"option\\\">\\r\\n\\t\\t<span class=\\\"key\\\">hydratable:</span>\\r\\n\\t\\t<input type=\\\"checkbox\\\" bind:checked={$compile_options.hydratable}> <span class=\\\"boolean\\\">{$compile_options.hydratable}</span>,\\r\\n\\t</label>\\r\\n\\r\\n\\t<label class=\\\"option\\\">\\r\\n\\t\\t<span class=\\\"key\\\">customElement:</span>\\r\\n\\t\\t<input type=\\\"checkbox\\\" bind:checked={$compile_options.customElement}> <span class=\\\"boolean\\\">{$compile_options.customElement}</span>,\\r\\n\\t</label>\\r\\n\\r\\n\\t<label class=\\\"option\\\">\\r\\n\\t\\t<span class=\\\"key\\\">immutable:</span>\\r\\n\\t\\t<input type=\\\"checkbox\\\" bind:checked={$compile_options.immutable}> <span class=\\\"boolean\\\">{$compile_options.immutable}</span>,\\r\\n\\t</label>\\r\\n\\r\\n\\t<label class=\\\"option\\\">\\r\\n\\t\\t<span class=\\\"key\\\">legacy:</span>\\r\\n\\t\\t<input type=\\\"checkbox\\\" bind:checked={$compile_options.legacy}> <span class=\\\"boolean\\\">{$compile_options.legacy}</span>\\r\\n\\t</label>\\r\\n\\t});\\r\\n</div>\"],\"names\":[],\"mappings\":\"AAOC,QAAQ,cAAC,CAAC,AACT,OAAO,CAAE,CAAC,CAAC,IAAI,CACf,WAAW,CAAE,IAAI,WAAW,CAAC,CAC7B,SAAS,CAAE,IAAI,CACf,KAAK,CAAE,IAAI,CACX,WAAW,CAAE,GAAG,AACjB,CAAC,AAED,OAAO,cAAC,CAAC,AACR,OAAO,CAAE,KAAK,CACd,OAAO,CAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CACrB,WAAW,CAAE,MAAM,CACnB,KAAK,CAAE,IAAI,CACX,WAAW,CAAE,IAAI,AAClB,CAAC,AAED,IAAI,cAAC,CAAC,AACL,OAAO,CAAE,YAAY,CACrB,KAAK,CAAE,GAAG,AACX,CAAC,AAED,OAAO,cAAC,CAAC,AACR,KAAK,CAAE,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,AACzB,CAAC,AAED,QAAQ,cAAC,CAAC,AACT,KAAK,CAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,AACxB,CAAC,AAED,KAAK,cAAC,CAAC,AACN,OAAO,CAAE,YAAY,AACtB,CAAC,AAED,KAAK,CAAC,GAAG,CAAC,cAAC,CAAC,AACX,KAAK,CAAE,IAAI,QAAQ,CAAC,AACrB,CAAC,AAED,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAC,CAAC,AACrB,GAAG,CAAE,IAAI,AACV,CAAC,AAED,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,cAAC,CAAC,AAClB,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,IAAI,CACT,QAAQ,CAAE,MAAM,CAChB,IAAI,CAAE,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAC9B,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,GAAG,CACX,WAAW,CAAE,MAAM,AACpB,CAAC,AAED,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAG,KAAK,cAAC,CAAC,AAC1B,OAAO,CAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CACpB,MAAM,CAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CACnB,OAAO,CAAE,GAAG,AACb,CAAC,AAED,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAG,KAAK,cAAC,CAAC,AAClC,OAAO,CAAE,CAAC,AACX,CAAC,AAOD,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAG,mBAAK,OAAO,AAAC,CAAC,AACjC,OAAO,CAAE,EAAE,CACX,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,KAAK,CACd,UAAU,CAAE,UAAU,CACtB,KAAK,CAAE,IAAI,CACX,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,WAAW,CAAE,KAAK,CAClB,UAAU,CAAE,GAAG,CACf,cAAc,CAAE,GAAG,CACnB,MAAM,CAAE,OAAO,CACf,UAAU,CAAE,MAAM,CAClB,UAAU,CAAE,UAAU,CAAC,IAAI,CAAC,QAAQ,AACrC,CAAC,AAED,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAG,mBAAK,OAAO,AAAC,CAAC,AACjC,gBAAgB,CAAE,IAAI,QAAQ,CAAC,CAC/B,aAAa,CAAE,IAAI,CACnB,UAAU,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACtD,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,QAAQ,CAAC,AAChC,CAAC,AAED,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAG,mBAAK,OAAO,AAAC,CAAC,AACzC,gBAAgB,CAAE,IAAI,OAAO,CAAC,CAC9B,UAAU,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACtD,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,QAAQ,CAAC,CAC/B,UAAU,CAAE,UAAU,CAAC,IAAI,CAAC,QAAQ,AACrC,CAAC\"}"
};

const CompilerOptions = index.create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let $compile_options;

	const { compile_options } = index.getContext('REPL'); $compile_options = index.get_store_value(compile_options);

	$$result.css.add(css$e);

	$compile_options = index.get_store_value(compile_options);

	return `<div class="options svelte-b58a6z">
		result = svelte.compile(source, {
		<div class="option svelte-b58a6z">
			<span class="key svelte-b58a6z">generate:</span>

			<input id="dom-input" type="radio" value="dom" class="svelte-b58a6z">
			<label for="dom-input" class="svelte-b58a6z"><span class="string svelte-b58a6z">"dom"</span></label>

			<input id="ssr-input" type="radio" value="ssr" class="svelte-b58a6z">
			<label for="ssr-input" class="svelte-b58a6z"><span class="string svelte-b58a6z">"ssr"</span>,</label>
		</div>

		<label class="option svelte-b58a6z">
			<span class="key svelte-b58a6z">dev:</span>
			<input type="checkbox" class="svelte-b58a6z"${index.add_attribute("checked", $compile_options.dev, 1)}> <span class="boolean svelte-b58a6z">${index.escape($compile_options.dev)}</span>,
		</label>

		<label class="option svelte-b58a6z">
			<span class="key svelte-b58a6z">css:</span>
			<input type="checkbox" class="svelte-b58a6z"${index.add_attribute("checked", $compile_options.css, 1)}> <span class="boolean svelte-b58a6z">${index.escape($compile_options.css)}</span>,
		</label>

		<label class="option svelte-b58a6z">
			<span class="key svelte-b58a6z">hydratable:</span>
			<input type="checkbox" class="svelte-b58a6z"${index.add_attribute("checked", $compile_options.hydratable, 1)}> <span class="boolean svelte-b58a6z">${index.escape($compile_options.hydratable)}</span>,
		</label>

		<label class="option svelte-b58a6z">
			<span class="key svelte-b58a6z">customElement:</span>
			<input type="checkbox" class="svelte-b58a6z"${index.add_attribute("checked", $compile_options.customElement, 1)}> <span class="boolean svelte-b58a6z">${index.escape($compile_options.customElement)}</span>,
		</label>

		<label class="option svelte-b58a6z">
			<span class="key svelte-b58a6z">immutable:</span>
			<input type="checkbox" class="svelte-b58a6z"${index.add_attribute("checked", $compile_options.immutable, 1)}> <span class="boolean svelte-b58a6z">${index.escape($compile_options.immutable)}</span>,
		</label>

		<label class="option svelte-b58a6z">
			<span class="key svelte-b58a6z">legacy:</span>
			<input type="checkbox" class="svelte-b58a6z"${index.add_attribute("checked", $compile_options.legacy, 1)}> <span class="boolean svelte-b58a6z">${index.escape($compile_options.legacy)}</span>
		</label>
		});
	</div>`;
});

const workers = new Map();

let uid$1 = 1;

class Compiler {
	constructor(workersUrl, svelteUrl) {
		if (!workers.has(svelteUrl)) {
			const worker = new Worker(`${workersUrl}/compiler.js`);
			worker.postMessage({ type: 'init', svelteUrl });
			workers.set(svelteUrl, worker);
		}

		this.worker = workers.get(svelteUrl);

		this.handlers = new Map();

		this.worker.addEventListener('message', event => {
			const handler = this.handlers.get(event.data.id);

			if (handler) { // if no handler, was meant for a different REPL
				handler(event.data.result);
				this.handlers.delete(event.data.id);
			}
		});
	}

	compile(component, options) {
		return new Promise(fulfil => {
			const id = uid$1++;

			this.handlers.set(id, fulfil);

			this.worker.postMessage({
				id,
				type: 'compile',
				source: component.source,
				options: Object.assign({
					name: component.name,
					filename: `${component.name}.svelte`
				}, options),
				entry: component.name === 'App'
			});
		});
	}

	destroy() {
		this.worker.terminate();
	}
}

/* node_modules\@sveltejs\svelte-repl\src\Output\index.svelte generated by Svelte v3.12.0 */

const css$f = {
	code: ".view-toggle.svelte-dgpatq{height:var(--pane-controls-h);border-bottom:1px solid #eee;white-space:nowrap;box-sizing:border-box}button.svelte-dgpatq{background:white;text-align:left;position:relative;font:400 12px/1.5 var(--font);border:none;border-bottom:3px solid transparent;padding:12px 12px 8px 12px;color:#999;border-radius:0}button.active.svelte-dgpatq{border-bottom:3px solid var(--prime);color:#333}div[slot].svelte-dgpatq{height:100%}.tab-content.svelte-dgpatq{position:absolute;width:100%;height:calc(100% - 42px) !important;opacity:0;pointer-events:none}.tab-content.visible.svelte-dgpatq{opacity:1;pointer-events:all}",
	map: "{\"version\":3,\"file\":\"index.svelte\",\"sources\":[\"index.svelte\"],\"sourcesContent\":[\"<script>\\r\\n\\timport { getContext, onMount } from 'svelte';\\r\\n\\timport SplitPane from '../SplitPane.svelte';\\r\\n\\timport Viewer from './Viewer.svelte';\\r\\n\\timport PaneWithPanel from './PaneWithPanel.svelte';\\r\\n\\timport CompilerOptions from './CompilerOptions.svelte';\\r\\n\\timport Compiler from './Compiler.js';\\r\\n\\timport CodeMirror from '../CodeMirror.svelte';\\r\\n\\timport { is_browser } from '../env.js';\\r\\n\\r\\n\\tconst { register_output } = getContext('REPL');\\r\\n\\r\\n\\texport let svelteUrl;\\r\\n\\texport let workersUrl;\\r\\n\\texport let status;\\r\\n\\texport let sourceErrorLoc = null;\\r\\n\\texport let runtimeError = null;\\r\\n\\texport let embedded = false;\\r\\n\\texport let relaxed = false;\\r\\n\\texport let injectedJS;\\r\\n\\texport let injectedCSS;\\r\\n\\r\\n\\tlet foo; // TODO workaround for https://github.com/sveltejs/svelte/issues/2122\\r\\n\\r\\n\\tregister_output({\\r\\n\\t\\tset: async (selected, options) => {\\r\\n\\t\\t\\tif (selected.type === 'js') {\\r\\n\\t\\t\\t\\tjs_editor.set(`/* Select a component to see its compiled code */`);\\r\\n\\t\\t\\t\\tcss_editor.set(`/* Select a component to see its compiled code */`);\\r\\n\\t\\t\\t\\treturn;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tconst compiled = await compiler.compile(selected, options);\\r\\n\\t\\t\\tif (!js_editor) return; // unmounted\\r\\n\\r\\n\\t\\t\\tjs_editor.set(compiled.js, 'js');\\r\\n\\t\\t\\tcss_editor.set(compiled.css, 'css');\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\tupdate: async (selected, options) => {\\r\\n\\t\\t\\tif (selected.type === 'js') return;\\r\\n\\r\\n\\t\\t\\tconst compiled = await compiler.compile(selected, options);\\r\\n\\t\\t\\tif (!js_editor) return; // unmounted\\r\\n\\r\\n\\t\\t\\tjs_editor.update(compiled.js);\\r\\n\\t\\t\\tcss_editor.update(compiled.css);\\r\\n\\t\\t}\\r\\n\\t});\\r\\n\\r\\n\\tconst compiler = is_browser && new Compiler(workersUrl, svelteUrl);\\r\\n\\r\\n\\t// refs\\r\\n\\tlet viewer;\\r\\n\\tlet js_editor;\\r\\n\\tlet css_editor;\\r\\n\\tconst setters = {};\\r\\n\\r\\n\\tlet view = 'result';\\r\\n</script>\\r\\n\\r\\n<style>\\r\\n\\t.view-toggle {\\r\\n\\t\\theight: var(--pane-controls-h);\\r\\n\\t\\tborder-bottom: 1px solid #eee;\\r\\n\\t\\twhite-space: nowrap;\\r\\n\\t\\tbox-sizing: border-box;\\r\\n\\t}\\r\\n\\r\\n\\tbutton {\\r\\n\\t\\t/* width: 50%;\\r\\n\\t\\theight: 100%; */\\r\\n\\t\\tbackground: white;\\r\\n\\t\\ttext-align: left;\\r\\n\\t\\tposition: relative;\\r\\n\\t\\tfont: 400 12px/1.5 var(--font);\\r\\n\\t\\tborder: none;\\r\\n\\t\\tborder-bottom: 3px solid transparent;\\r\\n\\t\\tpadding: 12px 12px 8px 12px;\\r\\n\\t\\tcolor: #999;\\r\\n\\t\\tborder-radius: 0;\\r\\n\\t}\\r\\n\\r\\n\\tbutton.active {\\r\\n\\t\\tborder-bottom: 3px solid var(--prime);\\r\\n\\t\\tcolor: #333;\\r\\n\\t}\\r\\n\\r\\n\\tdiv[slot] {\\r\\n\\t\\theight: 100%;\\r\\n\\t}\\r\\n\\r\\n\\t.tab-content {\\r\\n\\t\\tposition: absolute;\\r\\n\\t\\twidth: 100%;\\r\\n\\t\\theight: calc(100% - 42px) !important;\\r\\n\\t\\topacity: 0;\\r\\n\\t\\tpointer-events: none;\\r\\n\\t}\\r\\n\\r\\n\\t.tab-content.visible {\\r\\n\\t\\t/* can't use visibility due to a weird painting bug in Chrome */\\r\\n\\t\\topacity: 1;\\r\\n\\t\\tpointer-events: all;\\r\\n\\t}\\r\\n</style>\\r\\n\\r\\n<div class=\\\"view-toggle\\\">\\r\\n\\t<button\\r\\n\\t\\tclass:active=\\\"{view === 'result'}\\\"\\r\\n\\t\\ton:click=\\\"{() => view = 'result'}\\\"\\r\\n\\t>Result</button>\\r\\n\\r\\n\\t<button\\r\\n\\t\\tclass:active=\\\"{view === 'js'}\\\"\\r\\n\\t\\ton:click=\\\"{() => view = 'js'}\\\"\\r\\n\\t>JS output</button>\\r\\n\\r\\n\\t<button\\r\\n\\t\\tclass:active=\\\"{view === 'css'}\\\"\\r\\n\\t\\ton:click=\\\"{() => view = 'css'}\\\"\\r\\n\\t>CSS output</button>\\r\\n</div>\\r\\n\\r\\n<!-- component viewer -->\\r\\n<div class=\\\"tab-content\\\" class:visible=\\\"{view === 'result'}\\\">\\r\\n\\t<Viewer\\r\\n\\t\\tbind:this={viewer}\\r\\n\\t\\tbind:error={runtimeError}\\r\\n\\t\\t{status}\\r\\n\\t\\t{relaxed}\\r\\n\\t\\t{injectedJS}\\r\\n\\t\\t{injectedCSS}\\r\\n\\t/>\\r\\n</div>\\r\\n\\r\\n<!-- js output -->\\r\\n<div class=\\\"tab-content\\\" class:visible=\\\"{view === 'js'}\\\">\\r\\n\\t{#if embedded}\\r\\n\\t\\t<CodeMirror\\r\\n\\t\\t\\tbind:this={js_editor}\\r\\n\\t\\t\\tmode=\\\"js\\\"\\r\\n\\t\\t\\terrorLoc={sourceErrorLoc}\\r\\n\\t\\t\\treadonly\\r\\n\\t\\t/>\\r\\n\\t{:else}\\r\\n\\t\\t<PaneWithPanel pos={67} panel=\\\"Compiler options\\\">\\r\\n\\t\\t\\t<div slot=\\\"main\\\">\\r\\n\\t\\t\\t\\t<CodeMirror\\r\\n\\t\\t\\t\\t\\tbind:this={js_editor}\\r\\n\\t\\t\\t\\t\\tmode=\\\"js\\\"\\r\\n\\t\\t\\t\\t\\terrorLoc={sourceErrorLoc}\\r\\n\\t\\t\\t\\t\\treadonly\\r\\n\\t\\t\\t\\t/>\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t<div slot=\\\"panel-body\\\">\\r\\n\\t\\t\\t\\t<CompilerOptions/>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</PaneWithPanel>\\r\\n\\t{/if}\\r\\n</div>\\r\\n\\r\\n<!-- css output -->\\r\\n<div class=\\\"tab-content\\\" class:visible=\\\"{view === 'css'}\\\">\\r\\n\\t<CodeMirror\\r\\n\\t\\tbind:this={css_editor}\\r\\n\\t\\tmode=\\\"css\\\"\\r\\n\\t\\terrorLoc={sourceErrorLoc}\\r\\n\\t\\treadonly\\r\\n\\t/>\\r\\n</div>\\r\\n\"],\"names\":[],\"mappings\":\"AA8DC,YAAY,cAAC,CAAC,AACb,MAAM,CAAE,IAAI,iBAAiB,CAAC,CAC9B,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CAC7B,WAAW,CAAE,MAAM,CACnB,UAAU,CAAE,UAAU,AACvB,CAAC,AAED,MAAM,cAAC,CAAC,AAGP,UAAU,CAAE,KAAK,CACjB,UAAU,CAAE,IAAI,CAChB,QAAQ,CAAE,QAAQ,CAClB,IAAI,CAAE,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,CAC9B,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,WAAW,CACpC,OAAO,CAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAC3B,KAAK,CAAE,IAAI,CACX,aAAa,CAAE,CAAC,AACjB,CAAC,AAED,MAAM,OAAO,cAAC,CAAC,AACd,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,CACrC,KAAK,CAAE,IAAI,AACZ,CAAC,AAED,GAAG,CAAC,IAAI,CAAC,cAAC,CAAC,AACV,MAAM,CAAE,IAAI,AACb,CAAC,AAED,YAAY,cAAC,CAAC,AACb,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,KAAK,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,UAAU,CACpC,OAAO,CAAE,CAAC,CACV,cAAc,CAAE,IAAI,AACrB,CAAC,AAED,YAAY,QAAQ,cAAC,CAAC,AAErB,OAAO,CAAE,CAAC,CACV,cAAc,CAAE,GAAG,AACpB,CAAC\"}"
};

const Index$1 = index.create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	

	const { register_output } = index.getContext('REPL');

	let { svelteUrl, workersUrl, status, sourceErrorLoc = null, runtimeError = null, embedded = false, relaxed = false, injectedJS, injectedCSS } = $$props;

	register_output({
		set: async (selected, options) => {
			if (selected.type === 'js') {
				js_editor.set(`/* Select a component to see its compiled code */`);
				css_editor.set(`/* Select a component to see its compiled code */`);
				return;
			}

			const compiled = await compiler.compile(selected, options);
			if (!js_editor) return; // unmounted

			js_editor.set(compiled.js, 'js');
			css_editor.set(compiled.css, 'css');
		},

		update: async (selected, options) => {
			if (selected.type === 'js') return;

			const compiled = await compiler.compile(selected, options);
			if (!js_editor) return; // unmounted

			js_editor.update(compiled.js);
			css_editor.update(compiled.css);
		}
	});

	const compiler = is_browser && new Compiler(workersUrl, svelteUrl);

	// refs
	let viewer;
	let js_editor;
	let css_editor;

	if ($$props.svelteUrl === void 0 && $$bindings.svelteUrl && svelteUrl !== void 0) $$bindings.svelteUrl(svelteUrl);
	if ($$props.workersUrl === void 0 && $$bindings.workersUrl && workersUrl !== void 0) $$bindings.workersUrl(workersUrl);
	if ($$props.status === void 0 && $$bindings.status && status !== void 0) $$bindings.status(status);
	if ($$props.sourceErrorLoc === void 0 && $$bindings.sourceErrorLoc && sourceErrorLoc !== void 0) $$bindings.sourceErrorLoc(sourceErrorLoc);
	if ($$props.runtimeError === void 0 && $$bindings.runtimeError && runtimeError !== void 0) $$bindings.runtimeError(runtimeError);
	if ($$props.embedded === void 0 && $$bindings.embedded && embedded !== void 0) $$bindings.embedded(embedded);
	if ($$props.relaxed === void 0 && $$bindings.relaxed && relaxed !== void 0) $$bindings.relaxed(relaxed);
	if ($$props.injectedJS === void 0 && $$bindings.injectedJS && injectedJS !== void 0) $$bindings.injectedJS(injectedJS);
	if ($$props.injectedCSS === void 0 && $$bindings.injectedCSS && injectedCSS !== void 0) $$bindings.injectedCSS(injectedCSS);

	$$result.css.add(css$f);

	let $$settled;
	let $$rendered;

	do {
		$$settled = true;

		$$rendered = `<div class="view-toggle svelte-dgpatq">
			<button class="${[`svelte-dgpatq`,  "active" ].join(' ').trim() }">Result</button>

			<button class="${[`svelte-dgpatq`,  ""].join(' ').trim() }">JS output</button>

			<button class="${[`svelte-dgpatq`,  ""].join(' ').trim() }">CSS output</button>
		</div>


		<div class="${[`tab-content svelte-dgpatq`,  "visible" ].join(' ').trim() }">
			${index.validate_component(Viewer, 'Viewer').$$render($$result, {
			status: status,
			relaxed: relaxed,
			injectedJS: injectedJS,
			injectedCSS: injectedCSS,
			this: viewer,
			error: runtimeError
		}, {
			this: $$value => { viewer = $$value; $$settled = false; },
			error: $$value => { runtimeError = $$value; $$settled = false; }
		}, {})}
		</div>


		<div class="${[`tab-content svelte-dgpatq`,  ""].join(' ').trim() }">
			${ embedded ? `${index.validate_component(CodeMirror_1, 'CodeMirror').$$render($$result, {
			mode: "js",
			errorLoc: sourceErrorLoc,
			readonly: true,
			this: js_editor
		}, {
			this: $$value => { js_editor = $$value; $$settled = false; }
		}, {})}` : `${index.validate_component(PaneWithPanel, 'PaneWithPanel').$$render($$result, {
			pos: 67,
			panel: "Compiler options"
		}, {}, {
			default: () => `
					`,
			main: () => `<div slot="main" class="svelte-dgpatq">
						${index.validate_component(CodeMirror_1, 'CodeMirror').$$render($$result, {
			mode: "js",
			errorLoc: sourceErrorLoc,
			readonly: true,
			this: js_editor
		}, {
			this: $$value => { js_editor = $$value; $$settled = false; }
		}, {})}
					</div>

					`,
			"panel-body": () => `<div slot="panel-body" class="svelte-dgpatq">
						${index.validate_component(CompilerOptions, 'CompilerOptions').$$render($$result, {}, {}, {})}
					</div>
				`
		})}` }
		</div>


		<div class="${[`tab-content svelte-dgpatq`,  ""].join(' ').trim() }">
			${index.validate_component(CodeMirror_1, 'CodeMirror').$$render($$result, {
			mode: "css",
			errorLoc: sourceErrorLoc,
			readonly: true,
			this: css_editor
		}, {
			this: $$value => { css_editor = $$value; $$settled = false; }
		}, {})}
		</div>`;
	} while (!$$settled);

	return $$rendered;
});

const workers$1 = new Map();

let uid$2 = 1;

class Bundler {
	constructor({ workersUrl, packagesUrl, svelteUrl, onstatus }) {
		const hash = `${packagesUrl}:${svelteUrl}`;

		if (!workers$1.has(hash)) {
			const worker = new Worker(`${workersUrl}/bundler.js`);
			worker.postMessage({ type: 'init', packagesUrl, svelteUrl });
			workers$1.set(hash, worker);
		}

		this.worker = workers$1.get(hash);

		this.handlers = new Map();

		this.worker.addEventListener('message', event => {
			const handler = this.handlers.get(event.data.uid);

			if (handler) { // if no handler, was meant for a different REPL
				if (event.data.type === 'status') {
					onstatus(event.data.message);
					return;
				}

				onstatus(null);
				handler(event.data);
				this.handlers.delete(event.data.uid);
			}
		});
	}

	bundle(components) {
		return new Promise(fulfil => {
			this.handlers.set(uid$2, fulfil);

			this.worker.postMessage({
				uid: uid$2,
				type: 'bundle',
				components
			});

			uid$2 += 1;
		});
	}

	destroy() {
		this.worker.terminate();
	}
}

/* node_modules\@sveltejs\svelte-repl\src\Repl.svelte generated by Svelte v3.12.0 */

const css$g = {
	code: ".container.svelte-8myrqj{position:relative;width:100%;height:100%}.container.svelte-8myrqj section{position:relative;padding:42px 0 0 0;height:100%;box-sizing:border-box}.container.svelte-8myrqj section>*:first-child{position:absolute;top:0;left:0;width:100%;height:42px;box-sizing:border-box}.container.svelte-8myrqj section>*:last-child{width:100%;height:100%}",
	map: "{\"version\":3,\"file\":\"Repl.svelte\",\"sources\":[\"Repl.svelte\"],\"sourcesContent\":[\"<script>\\r\\n\\timport { setContext, createEventDispatcher } from 'svelte';\\r\\n\\timport { writable } from 'svelte/store';\\r\\n\\timport SplitPane from './SplitPane.svelte';\\r\\n\\timport ComponentSelector from './Input/ComponentSelector.svelte';\\r\\n\\timport ModuleEditor from './Input/ModuleEditor.svelte';\\r\\n\\timport Output from './Output/index.svelte';\\r\\n\\timport Bundler from './Bundler.js';\\r\\n\\timport { is_browser } from './env.js';\\r\\n\\r\\n\\texport let workersUrl;\\r\\n\\texport let packagesUrl = 'https://unpkg.com';\\r\\n\\texport let svelteUrl = `${packagesUrl}/svelte`;\\r\\n\\texport let embedded = false;\\r\\n\\texport let orientation = 'columns';\\r\\n\\texport let relaxed = false;\\r\\n\\texport let fixed = false;\\r\\n\\texport let fixedPos = 50;\\r\\n\\texport let injectedJS = '';\\r\\n\\texport let injectedCSS = '';\\r\\n\\r\\n\\texport function toJSON() {\\r\\n\\t\\treturn {\\r\\n\\t\\t\\timports: $bundle.imports,\\r\\n\\t\\t\\tcomponents: $components\\r\\n\\t\\t};\\r\\n\\t}\\r\\n\\r\\n\\texport async function set(data) {\\r\\n\\t\\tcomponents.set(data.components);\\r\\n\\t\\tselected.set(data.components[0]);\\r\\n\\r\\n\\t\\trebundle();\\r\\n\\r\\n\\t\\tawait module_editor_ready;\\r\\n\\t\\tawait output_ready;\\r\\n\\r\\n\\t\\tinjectedCSS = data.css || '';\\r\\n\\t\\tmodule_editor.set($selected.source, $selected.type);\\r\\n\\t\\toutput.set($selected, $compile_options);\\r\\n\\t}\\r\\n\\r\\n\\texport function update(data) {\\r\\n\\t\\tconst { name, type } = $selected || {};\\r\\n\\r\\n\\t\\tcomponents.set(data.components);\\r\\n\\r\\n\\t\\tconst matched_component = data.components.find(file => file.name === name && file.type === type);\\r\\n\\t\\tselected.set(matched_component || data.components[0]);\\r\\n\\r\\n\\t\\tinjectedCSS = data.css || '';\\r\\n\\r\\n\\t\\tif (matched_component) {\\r\\n\\t\\t\\tmodule_editor.update(matched_component.source);\\r\\n\\t\\t\\toutput.update(matched_component, $compile_options);\\r\\n\\t\\t} else {\\r\\n\\t\\t\\tmodule_editor.set(matched_component.source, matched_component.type);\\r\\n\\t\\t\\toutput.set(matched_component, $compile_options);\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tif (!workersUrl) {\\r\\n\\t\\tthrow new Error(`You must supply workersUrl prop to <Repl>`);\\r\\n\\t}\\r\\n\\r\\n\\tconst dispatch = createEventDispatcher();\\r\\n\\r\\n\\tconst components = writable([]);\\r\\n\\tconst selected = writable(null);\\r\\n\\tconst bundle = writable(null);\\r\\n\\r\\n\\tconst compile_options = writable({\\r\\n\\t\\tgenerate: 'dom',\\r\\n\\t\\tdev: false,\\r\\n\\t\\tcss: false,\\r\\n\\t\\thydratable: false,\\r\\n\\t\\tcustomElement: false,\\r\\n\\t\\timmutable: false,\\r\\n\\t\\tlegacy: false\\r\\n\\t});\\r\\n\\r\\n\\tlet module_editor;\\r\\n\\tlet output;\\r\\n\\r\\n\\tlet current_token;\\r\\n\\tasync function rebundle() {\\r\\n\\t\\tconst token = current_token = {};\\r\\n\\t\\tconst result = await bundler.bundle($components);\\r\\n\\t\\tif (result && token === current_token) bundle.set(result);\\r\\n\\t}\\r\\n\\r\\n\\t// TODO this is a horrible kludge, written in a panic. fix it\\r\\n\\tlet fulfil_module_editor_ready;\\r\\n\\tlet module_editor_ready = new Promise(f => fulfil_module_editor_ready = f);\\r\\n\\r\\n\\tlet fulfil_output_ready;\\r\\n\\tlet output_ready = new Promise(f => fulfil_output_ready = f);\\r\\n\\r\\n\\r\\n\\tsetContext('REPL', {\\r\\n\\t\\tcomponents,\\r\\n\\t\\tselected,\\r\\n\\t\\tbundle,\\r\\n\\t\\tcompile_options,\\r\\n\\r\\n\\t\\trebundle,\\r\\n\\r\\n\\t\\tnavigate: item => {\\r\\n\\t\\t\\tconst match = /^(.+)\\\\.(\\\\w+)$/.exec(item.filename);\\r\\n\\t\\t\\tif (!match) return; // ???\\r\\n\\r\\n\\t\\t\\tconst [, name, type] = match;\\r\\n\\t\\t\\tconst component = $components.find(c => c.name === name && c.type === type);\\r\\n\\t\\t\\thandle_select(component);\\r\\n\\r\\n\\t\\t\\t// TODO select the line/column in question\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\thandle_change: event => {\\r\\n\\t\\t\\tselected.update(component => {\\r\\n\\t\\t\\t\\t// TODO this is a bit hacky — we're relying on mutability\\r\\n\\t\\t\\t\\t// so that updating components works... might be better\\r\\n\\t\\t\\t\\t// if a) components had unique IDs, b) we tracked selected\\r\\n\\t\\t\\t\\t// *index* rather than component, and c) `selected` was\\r\\n\\t\\t\\t\\t// derived from `components` and `index`\\r\\n\\t\\t\\t\\tcomponent.source = event.detail.value;\\r\\n\\t\\t\\t\\treturn component;\\r\\n\\t\\t\\t});\\r\\n\\r\\n\\t\\t\\tcomponents.update(c => c);\\r\\n\\r\\n\\t\\t\\t// recompile selected component\\r\\n\\t\\t\\toutput.update($selected, $compile_options);\\r\\n\\r\\n\\t\\t\\trebundle();\\r\\n\\r\\n\\t\\t\\tdispatch('change', {\\r\\n\\t\\t\\t\\tcomponents: $components\\r\\n\\t\\t\\t});\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\tregister_module_editor(editor) {\\r\\n\\t\\t\\tmodule_editor = editor;\\r\\n\\t\\t\\tfulfil_module_editor_ready();\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\tregister_output(handlers) {\\r\\n\\t\\t\\toutput = handlers;\\r\\n\\t\\t\\tfulfil_output_ready();\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\trequest_focus() {\\r\\n\\t\\t\\tmodule_editor.focus();\\r\\n\\t\\t}\\r\\n\\t});\\r\\n\\r\\n\\tfunction handle_select(component) {\\r\\n\\t\\tselected.set(component);\\r\\n\\t\\tmodule_editor.set(component.source, component.type);\\r\\n\\t\\toutput.set($selected, $compile_options);\\r\\n\\t}\\r\\n\\r\\n\\tlet input;\\r\\n\\tlet sourceErrorLoc;\\r\\n\\tlet runtimeErrorLoc; // TODO refactor this stuff — runtimeErrorLoc is unused\\r\\n\\tlet status = null;\\r\\n\\r\\n\\tconst bundler = is_browser && new Bundler({\\r\\n\\t\\tworkersUrl,\\r\\n\\t\\tpackagesUrl,\\r\\n\\t\\tsvelteUrl,\\r\\n\\t\\tonstatus: message => {\\r\\n\\t\\t\\tstatus = message;\\r\\n\\t\\t}\\r\\n\\t});\\r\\n\\r\\n\\t$: if (output && $selected) {\\r\\n\\t\\toutput.update($selected, $compile_options);\\r\\n\\t}\\r\\n</script>\\r\\n\\r\\n<style>\\r\\n\\t.container {\\r\\n\\t\\tposition: relative;\\r\\n\\t\\twidth: 100%;\\r\\n\\t\\theight: 100%;\\r\\n\\t}\\r\\n\\r\\n\\t.container :global(section) {\\r\\n\\t\\tposition: relative;\\r\\n\\t\\tpadding: 42px 0 0 0;\\r\\n\\t\\theight: 100%;\\r\\n\\t\\tbox-sizing: border-box;\\r\\n\\t}\\r\\n\\r\\n\\t.container :global(section) > :global(*):first-child {\\r\\n\\t\\tposition: absolute;\\r\\n\\t\\ttop: 0;\\r\\n\\t\\tleft: 0;\\r\\n\\t\\twidth: 100%;\\r\\n\\t\\theight: 42px;\\r\\n\\t\\tbox-sizing: border-box;\\r\\n\\t}\\r\\n\\r\\n\\t.container :global(section) > :global(*):last-child {\\r\\n\\t\\twidth: 100%;\\r\\n\\t\\theight: 100%;\\r\\n\\t}\\r\\n</style>\\r\\n\\r\\n<div class=\\\"container\\\" class:orientation>\\r\\n\\t<SplitPane\\r\\n\\t\\ttype=\\\"{orientation === 'rows' ? 'vertical' : 'horizontal'}\\\"\\r\\n\\t\\tpos=\\\"{fixed ? fixedPos : orientation === 'rows' ? 50 : 60}\\\"\\r\\n\\t\\t{fixed}\\r\\n\\t>\\r\\n\\t\\t<section slot=a>\\r\\n\\t\\t\\t<ComponentSelector {handle_select}/>\\r\\n\\t\\t\\t<ModuleEditor bind:this={input} errorLoc=\\\"{sourceErrorLoc || runtimeErrorLoc}\\\"/>\\r\\n\\t\\t</section>\\r\\n\\r\\n\\t\\t<section slot=b style='height: 100%;'>\\r\\n\\t\\t\\t<Output {svelteUrl} {workersUrl} {status} {embedded} {relaxed} {injectedJS} {injectedCSS}/>\\r\\n\\t\\t</section>\\r\\n\\t</SplitPane>\\r\\n</div>\\r\\n\"],\"names\":[],\"mappings\":\"AAsLC,UAAU,cAAC,CAAC,AACX,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,AACb,CAAC,AAED,wBAAU,CAAC,AAAQ,OAAO,AAAE,CAAC,AAC5B,QAAQ,CAAE,QAAQ,CAClB,OAAO,CAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACnB,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,UAAU,AACvB,CAAC,AAED,wBAAU,CAAC,AAAQ,OAAO,AAAC,CAAW,CAAC,AAAC,YAAY,AAAC,CAAC,AACrD,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,CAAC,CACP,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,UAAU,AACvB,CAAC,AAED,wBAAU,CAAC,AAAQ,OAAO,AAAC,CAAW,CAAC,AAAC,WAAW,AAAC,CAAC,AACpD,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,AACb,CAAC\"}"
};

const Repl = index.create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let $bundle, $components, $selected, $compile_options;

	

	let { workersUrl, packagesUrl = 'https://unpkg.com', svelteUrl = `${packagesUrl}/svelte`, embedded = false, orientation = 'columns', relaxed = false, fixed = false, fixedPos = 50, injectedJS = '', injectedCSS = '' } = $$props;

	function toJSON() {
		return {
			imports: $bundle.imports,
			components: $components
		};
	}

	async function set(data) {
		components.set(data.components);
		selected.set(data.components[0]);

		rebundle();

		await module_editor_ready;
		await output_ready;

		injectedCSS = data.css || '';
		module_editor.set($selected.source, $selected.type);
		output.set($selected, $compile_options);
	}

	function update(data) {
		const { name, type } = $selected || {};

		components.set(data.components);

		const matched_component = data.components.find(file => file.name === name && file.type === type);
		selected.set(matched_component || data.components[0]);

		injectedCSS = data.css || '';

		if (matched_component) {
			module_editor.update(matched_component.source);
			output.update(matched_component, $compile_options);
		} else {
			module_editor.set(matched_component.source, matched_component.type);
			output.set(matched_component, $compile_options);
		}
	}

	if (!workersUrl) {
		throw new Error(`You must supply workersUrl prop to <Repl>`);
	}

	const dispatch = index.createEventDispatcher();

	const components = index$2.writable([]); $components = index.get_store_value(components);
	const selected = index$2.writable(null); $selected = index.get_store_value(selected);
	const bundle = index$2.writable(null); $bundle = index.get_store_value(bundle);

	const compile_options = index$2.writable({
		generate: 'dom',
		dev: false,
		css: false,
		hydratable: false,
		customElement: false,
		immutable: false,
		legacy: false
	}); $compile_options = index.get_store_value(compile_options);

	let module_editor;
	let output;

	let current_token;
	async function rebundle() {
		const token = current_token = {};
		const result = await bundler.bundle($components);
		if (result && token === current_token) bundle.set(result);
	}

	// TODO this is a horrible kludge, written in a panic. fix it
	let fulfil_module_editor_ready;
	let module_editor_ready = new Promise(f => fulfil_module_editor_ready = f);

	let fulfil_output_ready;
	let output_ready = new Promise(f => fulfil_output_ready = f);


	index.setContext('REPL', {
		components,
		selected,
		bundle,
		compile_options,

		rebundle,

		navigate: item => {
			const match = /^(.+)\.(\w+)$/.exec(item.filename);
			if (!match) return; // ???

			const [, name, type] = match;
			const component = $components.find(c => c.name === name && c.type === type);
			handle_select(component);

			// TODO select the line/column in question
		},

		handle_change: event => {
			selected.update(component => {
				// TODO this is a bit hacky — we're relying on mutability
				// so that updating components works... might be better
				// if a) components had unique IDs, b) we tracked selected
				// *index* rather than component, and c) `selected` was
				// derived from `components` and `index`
				component.source = event.detail.value;
				return component;
			});

			components.update(c => c);

			// recompile selected component
			output.update($selected, $compile_options);

			rebundle();

			dispatch('change', {
				components: $components
			});
		},

		register_module_editor(editor) {
			module_editor = editor;
			fulfil_module_editor_ready();
		},

		register_output(handlers) {
			output = handlers;
			fulfil_output_ready();
		},

		request_focus() {
			module_editor.focus();
		}
	});

	function handle_select(component) {
		selected.set(component);
		module_editor.set(component.source, component.type);
		output.set($selected, $compile_options);
	}

	let input;
	let runtimeErrorLoc; // TODO refactor this stuff — runtimeErrorLoc is unused
	let status = null;

	const bundler = is_browser && new Bundler({
		workersUrl,
		packagesUrl,
		svelteUrl,
		onstatus: message => {
			status = message;
		}
	});

	if ($$props.workersUrl === void 0 && $$bindings.workersUrl && workersUrl !== void 0) $$bindings.workersUrl(workersUrl);
	if ($$props.packagesUrl === void 0 && $$bindings.packagesUrl && packagesUrl !== void 0) $$bindings.packagesUrl(packagesUrl);
	if ($$props.svelteUrl === void 0 && $$bindings.svelteUrl && svelteUrl !== void 0) $$bindings.svelteUrl(svelteUrl);
	if ($$props.embedded === void 0 && $$bindings.embedded && embedded !== void 0) $$bindings.embedded(embedded);
	if ($$props.orientation === void 0 && $$bindings.orientation && orientation !== void 0) $$bindings.orientation(orientation);
	if ($$props.relaxed === void 0 && $$bindings.relaxed && relaxed !== void 0) $$bindings.relaxed(relaxed);
	if ($$props.fixed === void 0 && $$bindings.fixed && fixed !== void 0) $$bindings.fixed(fixed);
	if ($$props.fixedPos === void 0 && $$bindings.fixedPos && fixedPos !== void 0) $$bindings.fixedPos(fixedPos);
	if ($$props.injectedJS === void 0 && $$bindings.injectedJS && injectedJS !== void 0) $$bindings.injectedJS(injectedJS);
	if ($$props.injectedCSS === void 0 && $$bindings.injectedCSS && injectedCSS !== void 0) $$bindings.injectedCSS(injectedCSS);
	if ($$props.toJSON === void 0 && $$bindings.toJSON && toJSON !== void 0) $$bindings.toJSON(toJSON);
	if ($$props.set === void 0 && $$bindings.set && set !== void 0) $$bindings.set(set);
	if ($$props.update === void 0 && $$bindings.update && update !== void 0) $$bindings.update(update);

	$$result.css.add(css$g);

	let $$settled;
	let $$rendered;

	do {
		$$settled = true;

		$bundle = index.get_store_value(bundle);
		$components = index.get_store_value(components);
		$selected = index.get_store_value(selected);
		$compile_options = index.get_store_value(compile_options);

		if (output && $selected) {
				output.update($selected, $compile_options);
			}

		$$rendered = `<div class="${[`container svelte-8myrqj`, orientation ? "orientation" : ""].join(' ').trim() }">
			${index.validate_component(SplitPane, 'SplitPane').$$render($$result, {
			type: orientation === 'rows' ? 'vertical' : 'horizontal',
			pos: fixed ? fixedPos : orientation === 'rows' ? 50 : 60,
			fixed: fixed
		}, {}, {
			default: () => `
				`,
			a: () => `<section slot="a">
					${index.validate_component(ComponentSelector, 'ComponentSelector').$$render($$result, { handle_select: handle_select }, {}, {})}
					${index.validate_component(ModuleEditor, 'ModuleEditor').$$render($$result, {
			errorLoc:  runtimeErrorLoc,
			this: input
		}, {
			this: $$value => { input = $$value; $$settled = false; }
		}, {})}
				</section>

				`,
			b: () => `<section slot="b" style="height: 100%;">
					${index.validate_component(Index$1, 'Output').$$render($$result, {
			svelteUrl: svelteUrl,
			workersUrl: workersUrl,
			status: status,
			embedded: embedded,
			relaxed: relaxed,
			injectedJS: injectedJS,
			injectedCSS: injectedCSS
		}, {}, {})}
				</section>
			`
		})}
		</div>`;
	} while (!$$settled);

	return $$rendered;
});

exports.Repl = Repl;

'use strict';

var index = require('./index-eb65fe33.js');
require('./Repl-546ad7c5.js');
var examples = require('./examples-e5967878.js');

/* src\components\Repl\ReplWidget.svelte generated by Svelte v3.12.0 */

const css = {
	code: ".repl-outer.svelte-614v39{position:relative;top:0;left:0;width:100%;height:100%;background-color:var(--back);overflow:hidden;box-sizing:border-box;--pane-controls-h:4.2rem}.viewport.svelte-614v39{width:100%;height:100%}.mobile.svelte-614v39 .viewport.svelte-614v39{width:200%;height:calc(100% - 42px);transition:transform 0.3s}.mobile.svelte-614v39 .offset.svelte-614v39{transform:translate(-50%, 0)}",
	map: "{\"version\":3,\"file\":\"ReplWidget.svelte\",\"sources\":[\"ReplWidget.svelte\"],\"sourcesContent\":[\"<script>\\r\\n\\timport Repl from '@sveltejs/svelte-repl';\\r\\n\\timport { onMount } from 'svelte';\\r\\n\\r\\n\\timport { process_example } from '../../utils/examples';\\r\\n\\timport InputOutputToggle from './InputOutputToggle.svelte';\\r\\n\\r\\n\\texport let version = '3';\\r\\n\\texport let gist = null;\\r\\n\\texport let example = null;\\r\\n\\texport let embedded = false;\\r\\n\\r\\n\\tlet repl;\\r\\n\\tlet name = 'loading...';\\r\\n\\tlet width = false\\r\\n\\t\\t? window.innerWidth - 32\\r\\n\\t\\t: 1000;\\r\\n\\r\\n\\tlet checked = false;\\r\\n\\r\\n\\tonMount(() => {\\r\\n\\t\\tif (version !== 'local') {\\r\\n\\t\\t\\tfetch(`https://unpkg.com/svelte@${version}/package.json`)\\r\\n\\t\\t\\t\\t.then(r => r.json())\\r\\n\\t\\t\\t\\t.then(pkg => {\\r\\n\\t\\t\\t\\t\\tversion = pkg.version;\\r\\n\\t\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif (gist) {\\r\\n\\t\\t\\tfetch(`repl/${gist}.json`).then(r => r.json()).then(data => {\\r\\n\\t\\t\\t\\tconst { description, files } = data;\\r\\n\\r\\n\\t\\t\\t\\tname = description;\\r\\n\\r\\n\\t\\t\\t\\tconst components = Object.keys(files)\\r\\n\\t\\t\\t\\t\\t.map(file => {\\r\\n\\t\\t\\t\\t\\t\\tconst dot = file.lastIndexOf('.');\\r\\n\\t\\t\\t\\t\\t\\tif (!~dot) return;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tconst source = files[file].content;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\treturn {\\r\\n\\t\\t\\t\\t\\t\\t\\tname: file.slice(0, dot),\\r\\n\\t\\t\\t\\t\\t\\t\\ttype: file.slice(dot + 1),\\r\\n\\t\\t\\t\\t\\t\\t\\tsource\\r\\n\\t\\t\\t\\t\\t\\t};\\r\\n\\t\\t\\t\\t\\t})\\r\\n\\t\\t\\t\\t\\t.filter(x => x.type === 'svelte' || x.type === 'js')\\r\\n\\t\\t\\t\\t\\t.sort((a, b) => {\\r\\n\\t\\t\\t\\t\\t\\tif (a.name === 'App' && a.type === 'svelte') return -1;\\r\\n\\t\\t\\t\\t\\t\\tif (b.name === 'App' && b.type === 'svelte') return 1;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tif (a.type !== b.type) return a.type === 'svelte' ? -1 : 1;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\treturn a.name < b.name ? -1 : 1;\\r\\n\\t\\t\\t\\t\\t});\\r\\n\\r\\n\\t\\t\\t\\trepl.set({ components });\\r\\n\\t\\t\\t});\\r\\n\\t\\t} else if (example) {\\r\\n\\t\\t\\tfetch(`examples/${example}.json`).then(async response => {\\r\\n\\t\\t\\t\\tif (response.ok) {\\r\\n\\t\\t\\t\\t\\tconst data = await response.json();\\r\\n\\r\\n\\t\\t\\t\\t\\trepl.set({\\r\\n\\t\\t\\t\\t\\t\\tcomponents: process_example(data.files)\\r\\n\\t\\t\\t\\t\\t});\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t});\\r\\n\\r\\n\\t$: if (embedded) document.title = `${name} • Svelte REPL`;\\r\\n\\r\\n\\t$: svelteUrl = false && version === 'local' ?\\r\\n\\t\\t`${location.origin}/repl/local` :\\r\\n\\t\\t`https://unpkg.com/svelte@${version}`;\\r\\n\\r\\n\\tconst rollupUrl = `https://unpkg.com/rollup@1/dist/rollup.browser.js`;\\r\\n\\r\\n\\t$: mobile = width < 560;\\r\\n</script>\\r\\n\\r\\n<style>\\r\\n\\t.repl-outer {\\r\\n\\t\\tposition: relative;\\r\\n\\t\\ttop: 0;\\r\\n\\t\\tleft: 0;\\r\\n\\t\\twidth: 100%;\\r\\n\\t\\theight: 100%;\\r\\n\\t\\tbackground-color: var(--back);\\r\\n\\t\\toverflow: hidden;\\r\\n\\t\\tbox-sizing: border-box;\\r\\n\\t\\t--pane-controls-h: 4.2rem;\\r\\n\\t}\\r\\n\\r\\n\\t.viewport {\\r\\n\\t\\twidth: 100%;\\r\\n\\t\\theight: 100%;\\r\\n\\t}\\r\\n\\r\\n\\t.mobile .viewport {\\r\\n\\t\\twidth: 200%;\\r\\n\\t\\theight: calc(100% - 42px);\\r\\n\\t\\ttransition: transform 0.3s;\\r\\n\\t}\\r\\n\\r\\n\\t.mobile .offset {\\r\\n\\t\\ttransform: translate(-50%, 0);\\r\\n\\t}\\r\\n</style>\\r\\n\\r\\n<div class=\\\"repl-outer\\\" bind:clientWidth={width} class:mobile>\\r\\n\\t<div class=\\\"viewport\\\" class:offset={checked}>\\r\\n\\t\\t{#if false}\\r\\n\\t\\t\\t<Repl\\r\\n\\t\\t\\t\\tbind:this={repl}\\r\\n\\t\\t\\t\\tworkersUrl=\\\"workers\\\"\\r\\n\\t\\t\\t\\tfixed={mobile}\\r\\n\\t\\t\\t\\t{svelteUrl}\\r\\n\\t\\t\\t\\t{rollupUrl}\\r\\n\\t\\t\\t\\tembedded\\r\\n\\t\\t\\t\\trelaxed\\r\\n\\t\\t\\t/>\\r\\n\\t\\t{/if}\\r\\n\\t</div>\\r\\n\\r\\n\\t{#if mobile}\\r\\n\\t\\t<InputOutputToggle bind:checked/>\\r\\n\\t{/if}\\r\\n</div>\\r\\n\"],\"names\":[],\"mappings\":\"AAqFC,WAAW,cAAC,CAAC,AACZ,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,CAAC,CACP,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,gBAAgB,CAAE,IAAI,MAAM,CAAC,CAC7B,QAAQ,CAAE,MAAM,CAChB,UAAU,CAAE,UAAU,CACtB,iBAAiB,CAAE,MAAM,AAC1B,CAAC,AAED,SAAS,cAAC,CAAC,AACV,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,AACb,CAAC,AAED,qBAAO,CAAC,SAAS,cAAC,CAAC,AAClB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,KAAK,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CACzB,UAAU,CAAE,SAAS,CAAC,IAAI,AAC3B,CAAC,AAED,qBAAO,CAAC,OAAO,cAAC,CAAC,AAChB,SAAS,CAAE,UAAU,IAAI,CAAC,CAAC,CAAC,CAAC,AAC9B,CAAC\"}"
};

const ReplWidget = index.create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	

	let { version = '3', gist = null, example = null, embedded = false } = $$props;

	let repl;
	let name = 'loading...';

	let checked = false;

	index.onMount(() => {
		if (version !== 'local') {
			fetch(`https://unpkg.com/svelte@${version}/package.json`)
				.then(r => r.json())
				.then(pkg => {
					version = pkg.version;
				});
		}

		if (gist) {
			fetch(`repl/${gist}.json`).then(r => r.json()).then(data => {
				const { description, files } = data;

				name = description;

				const components = Object.keys(files)
					.map(file => {
						const dot = file.lastIndexOf('.');
						if (!~dot) return;

						const source = files[file].content;

						return {
							name: file.slice(0, dot),
							type: file.slice(dot + 1),
							source
						};
					})
					.filter(x => x.type === 'svelte' || x.type === 'js')
					.sort((a, b) => {
						if (a.name === 'App' && a.type === 'svelte') return -1;
						if (b.name === 'App' && b.type === 'svelte') return 1;

						if (a.type !== b.type) return a.type === 'svelte' ? -1 : 1;

						return a.name < b.name ? -1 : 1;
					});

				repl.set({ components });
			});
		} else if (example) {
			fetch(`examples/${example}.json`).then(async response => {
				if (response.ok) {
					const data = await response.json();

					repl.set({
						components: examples.process_example(data.files)
					});
				}
			});
		}
	});

	if ($$props.version === void 0 && $$bindings.version && version !== void 0) $$bindings.version(version);
	if ($$props.gist === void 0 && $$bindings.gist && gist !== void 0) $$bindings.gist(gist);
	if ($$props.example === void 0 && $$bindings.example && example !== void 0) $$bindings.example(example);
	if ($$props.embedded === void 0 && $$bindings.embedded && embedded !== void 0) $$bindings.embedded(embedded);

	$$result.css.add(css);

	let $$settled;
	let $$rendered;

	do {
		$$settled = true;

		if (embedded) document.title = `${name} • Svelte REPL`;

		$$rendered = `<div class="${[`repl-outer svelte-614v39`,  ""].join(' ').trim() }">
			<div class="${[`viewport svelte-614v39`, checked ? "offset" : ""].join(' ').trim() }">
				${  `` }
			</div>

			${  `` }
		</div>`;
	} while (!$$settled);

	return $$rendered;
});

exports.ReplWidget = ReplWidget;

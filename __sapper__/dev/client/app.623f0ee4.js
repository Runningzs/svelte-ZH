import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, o as onMount, e as element, c as claim_element, a as children, b as detach_dev, f as attr_dev, g as set_style, h as add_location, j as insert_dev, k as append_dev, l as space, m as empty, p as claim_space, n as noop, q as create_slot, v as validate_store, r as component_subscribe, t as setContext, u as set_store_value, w as mount_component, x as transition_in, y as transition_out, z as destroy_component, A as group_outros, B as check_outros, C as get_slot_changes, D as get_slot_context, E as text, F as claim_text, G as globals, H as set_data_dev, I as assign, J as get_spread_update, K as get_spread_object, L as getContext } from './index.4e52d202.js';
import { w as writable } from './index.ad9ca859.js';
import { I as Icons, N as Nav, a as NavItem, b as Icon } from './index.abf9c6bd.js';

const CONTEXT_KEY = {};

const preload = () => ({});

/* src\components\PreloadingIndicator.svelte generated by Svelte v3.12.0 */

const file = "src\\components\\PreloadingIndicator.svelte";

// (55:0) {#if visible}
function create_if_block_1(ctx) {
	var div1, div0;

	const block = {
		c: function create() {
			div1 = element("div");
			div0 = element("div");
			this.h();
		},

		l: function claim(nodes) {
			div1 = claim_element(nodes, "DIV", { class: true }, false);
			var div1_nodes = children(div1);

			div0 = claim_element(div1_nodes, "DIV", { class: true, style: true }, false);
			var div0_nodes = children(div0);

			div0_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			this.h();
		},

		h: function hydrate() {
			attr_dev(div0, "class", "progress svelte-3253v6");
			set_style(div0, "width", "" + ctx.p * 100 + "%");
			add_location(div0, file, 56, 2, 894);
			attr_dev(div1, "class", "progress-container svelte-3253v6");
			add_location(div1, file, 55, 1, 858);
		},

		m: function mount(target, anchor) {
			insert_dev(target, div1, anchor);
			append_dev(div1, div0);
		},

		p: function update(changed, ctx) {
			if (changed.p) {
				set_style(div0, "width", "" + ctx.p * 100 + "%");
			}
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(div1);
			}
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_if_block_1.name, type: "if", source: "(55:0) {#if visible}", ctx });
	return block;
}

// (61:0) {#if p >= 0.4}
function create_if_block(ctx) {
	var div;

	const block = {
		c: function create() {
			div = element("div");
			this.h();
		},

		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true }, false);
			var div_nodes = children(div);

			div_nodes.forEach(detach_dev);
			this.h();
		},

		h: function hydrate() {
			attr_dev(div, "class", "fade svelte-3253v6");
			add_location(div, file, 61, 1, 985);
		},

		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(div);
			}
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_if_block.name, type: "if", source: "(61:0) {#if p >= 0.4}", ctx });
	return block;
}

function create_fragment(ctx) {
	var t, if_block1_anchor;

	var if_block0 = (ctx.visible) && create_if_block_1(ctx);

	var if_block1 = (ctx.p >= 0.4) && create_if_block(ctx);

	const block = {
		c: function create() {
			if (if_block0) if_block0.c();
			t = space();
			if (if_block1) if_block1.c();
			if_block1_anchor = empty();
		},

		l: function claim(nodes) {
			if (if_block0) if_block0.l(nodes);
			t = claim_space(nodes);
			if (if_block1) if_block1.l(nodes);
			if_block1_anchor = empty();
		},

		m: function mount(target, anchor) {
			if (if_block0) if_block0.m(target, anchor);
			insert_dev(target, t, anchor);
			if (if_block1) if_block1.m(target, anchor);
			insert_dev(target, if_block1_anchor, anchor);
		},

		p: function update(changed, ctx) {
			if (ctx.visible) {
				if (if_block0) {
					if_block0.p(changed, ctx);
				} else {
					if_block0 = create_if_block_1(ctx);
					if_block0.c();
					if_block0.m(t.parentNode, t);
				}
			} else if (if_block0) {
				if_block0.d(1);
				if_block0 = null;
			}

			if (ctx.p >= 0.4) {
				if (!if_block1) {
					if_block1 = create_if_block(ctx);
					if_block1.c();
					if_block1.m(if_block1_anchor.parentNode, if_block1_anchor);
				}
			} else if (if_block1) {
				if_block1.d(1);
				if_block1 = null;
			}
		},

		i: noop,
		o: noop,

		d: function destroy(detaching) {
			if (if_block0) if_block0.d(detaching);

			if (detaching) {
				detach_dev(t);
			}

			if (if_block1) if_block1.d(detaching);

			if (detaching) {
				detach_dev(if_block1_anchor);
			}
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_fragment.name, type: "component", source: "", ctx });
	return block;
}

function instance($$self, $$props, $$invalidate) {
	let p = 0;
	let visible = false;

	onMount(() => {
		function next() {
			$$invalidate('visible', visible = true);
			$$invalidate('p', p += 0.1);

			const remaining = 1 - p;
			if (remaining > 0.15) setTimeout(next, 500 / remaining);
		}

		setTimeout(next, 250);
	});

	$$self.$capture_state = () => {
		return {};
	};

	$$self.$inject_state = $$props => {
		if ('p' in $$props) $$invalidate('p', p = $$props.p);
		if ('visible' in $$props) $$invalidate('visible', visible = $$props.visible);
	};

	return { p, visible };
}

class PreloadingIndicator extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, []);
		dispatch_dev("SvelteRegisterComponent", { component: this, tagName: "PreloadingIndicator", options, id: create_fragment.name });
	}
}

/* src\routes\_layout.svelte generated by Svelte v3.12.0 */

const file$1 = "src\\routes\\_layout.svelte";

// (34:0) {#if $preloading}
function create_if_block_1$1(ctx) {
	var current;

	var preloadingindicator = new PreloadingIndicator({ $$inline: true });

	const block = {
		c: function create() {
			preloadingindicator.$$.fragment.c();
		},

		l: function claim(nodes) {
			preloadingindicator.$$.fragment.l(nodes);
		},

		m: function mount(target, anchor) {
			mount_component(preloadingindicator, target, anchor);
			current = true;
		},

		i: function intro(local) {
			if (current) return;
			transition_in(preloadingindicator.$$.fragment, local);

			current = true;
		},

		o: function outro(local) {
			transition_out(preloadingindicator.$$.fragment, local);
			current = false;
		},

		d: function destroy(detaching) {
			destroy_component(preloadingindicator, detaching);
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_if_block_1$1.name, type: "if", source: "(34:0) {#if $preloading}", ctx });
	return block;
}

// (38:0) {#if $page.path !== '/repl/embed'}
function create_if_block$1(ctx) {
	var current;

	var nav = new Nav({
		props: {
		segment: ctx.segment,
		page: ctx.page,
		logo: "svelte-logo-horizontal.svg",
		$$slots: { default: [create_default_slot] },
		$$scope: { ctx }
	},
		$$inline: true
	});

	const block = {
		c: function create() {
			nav.$$.fragment.c();
		},

		l: function claim(nodes) {
			nav.$$.fragment.l(nodes);
		},

		m: function mount(target, anchor) {
			mount_component(nav, target, anchor);
			current = true;
		},

		p: function update(changed, ctx) {
			var nav_changes = {};
			if (changed.segment) nav_changes.segment = ctx.segment;
			if (changed.$$scope) nav_changes.$$scope = { changed, ctx };
			nav.$set(nav_changes);
		},

		i: function intro(local) {
			if (current) return;
			transition_in(nav.$$.fragment, local);

			current = true;
		},

		o: function outro(local) {
			transition_out(nav.$$.fragment, local);
			current = false;
		},

		d: function destroy(detaching) {
			destroy_component(nav, detaching);
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_if_block$1.name, type: "if", source: "(38:0) {#if $page.path !== '/repl/embed'}", ctx });
	return block;
}

// (40:2) <NavItem segment="tutorial">
function create_default_slot_9(ctx) {
	var t;

	const block = {
		c: function create() {
			t = text("教程");
		},

		l: function claim(nodes) {
			t = claim_text(nodes, "教程");
		},

		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(t);
			}
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_default_slot_9.name, type: "slot", source: "(40:2) <NavItem segment=\"tutorial\">", ctx });
	return block;
}

// (41:2) <NavItem segment="docs">
function create_default_slot_8(ctx) {
	var t;

	const block = {
		c: function create() {
			t = text("API");
		},

		l: function claim(nodes) {
			t = claim_text(nodes, "API");
		},

		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(t);
			}
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_default_slot_8.name, type: "slot", source: "(41:2) <NavItem segment=\"docs\">", ctx });
	return block;
}

// (42:2) <NavItem segment="examples">
function create_default_slot_7(ctx) {
	var t;

	const block = {
		c: function create() {
			t = text("实例");
		},

		l: function claim(nodes) {
			t = claim_text(nodes, "实例");
		},

		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(t);
			}
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_default_slot_7.name, type: "slot", source: "(42:2) <NavItem segment=\"examples\">", ctx });
	return block;
}

// (43:2) <NavItem segment="repl">
function create_default_slot_6(ctx) {
	var t;

	const block = {
		c: function create() {
			t = text("REPL");
		},

		l: function claim(nodes) {
			t = claim_text(nodes, "REPL");
		},

		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(t);
			}
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_default_slot_6.name, type: "slot", source: "(43:2) <NavItem segment=\"repl\">", ctx });
	return block;
}

// (44:2) <NavItem segment="blog">
function create_default_slot_5(ctx) {
	var t;

	const block = {
		c: function create() {
			t = text("博客");
		},

		l: function claim(nodes) {
			t = claim_text(nodes, "博客");
		},

		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(t);
			}
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_default_slot_5.name, type: "slot", source: "(44:2) <NavItem segment=\"blog\">", ctx });
	return block;
}

// (45:2) <NavItem segment="faq">
function create_default_slot_4(ctx) {
	var t;

	const block = {
		c: function create() {
			t = text("常见问题");
		},

		l: function claim(nodes) {
			t = claim_text(nodes, "常见问题");
		},

		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(t);
			}
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_default_slot_4.name, type: "slot", source: "(45:2) <NavItem segment=\"faq\">", ctx });
	return block;
}

// (47:2) <NavItem external="https://sapper.svelte.dev">
function create_default_slot_3(ctx) {
	var t;

	const block = {
		c: function create() {
			t = text("Sapper");
		},

		l: function claim(nodes) {
			t = claim_text(nodes, "Sapper");
		},

		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(t);
			}
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_default_slot_3.name, type: "slot", source: "(47:2) <NavItem external=\"https://sapper.svelte.dev\">", ctx });
	return block;
}

// (49:2) <NavItem external="chat" title="Discord Chat">
function create_default_slot_2(ctx) {
	var current;

	var icon = new Icon({
		props: { name: "message-square" },
		$$inline: true
	});

	const block = {
		c: function create() {
			icon.$$.fragment.c();
		},

		l: function claim(nodes) {
			icon.$$.fragment.l(nodes);
		},

		m: function mount(target, anchor) {
			mount_component(icon, target, anchor);
			current = true;
		},

		p: noop,

		i: function intro(local) {
			if (current) return;
			transition_in(icon.$$.fragment, local);

			current = true;
		},

		o: function outro(local) {
			transition_out(icon.$$.fragment, local);
			current = false;
		},

		d: function destroy(detaching) {
			destroy_component(icon, detaching);
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_default_slot_2.name, type: "slot", source: "(49:2) <NavItem external=\"chat\" title=\"Discord Chat\">", ctx });
	return block;
}

// (53:2) <NavItem external="https://github.com/sveltejs/svelte" title="GitHub Repo">
function create_default_slot_1(ctx) {
	var current;

	var icon = new Icon({
		props: { name: "github" },
		$$inline: true
	});

	const block = {
		c: function create() {
			icon.$$.fragment.c();
		},

		l: function claim(nodes) {
			icon.$$.fragment.l(nodes);
		},

		m: function mount(target, anchor) {
			mount_component(icon, target, anchor);
			current = true;
		},

		p: noop,

		i: function intro(local) {
			if (current) return;
			transition_in(icon.$$.fragment, local);

			current = true;
		},

		o: function outro(local) {
			transition_out(icon.$$.fragment, local);
			current = false;
		},

		d: function destroy(detaching) {
			destroy_component(icon, detaching);
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_default_slot_1.name, type: "slot", source: "(53:2) <NavItem external=\"https://github.com/sveltejs/svelte\" title=\"GitHub Repo\">", ctx });
	return block;
}

// (39:1) <Nav {segment} {page} logo="svelte-logo-horizontal.svg">
function create_default_slot(ctx) {
	var t0, t1, t2, t3, t4, t5, t6, t7, current;

	var navitem0 = new NavItem({
		props: {
		segment: "tutorial",
		$$slots: { default: [create_default_slot_9] },
		$$scope: { ctx }
	},
		$$inline: true
	});

	var navitem1 = new NavItem({
		props: {
		segment: "docs",
		$$slots: { default: [create_default_slot_8] },
		$$scope: { ctx }
	},
		$$inline: true
	});

	var navitem2 = new NavItem({
		props: {
		segment: "examples",
		$$slots: { default: [create_default_slot_7] },
		$$scope: { ctx }
	},
		$$inline: true
	});

	var navitem3 = new NavItem({
		props: {
		segment: "repl",
		$$slots: { default: [create_default_slot_6] },
		$$scope: { ctx }
	},
		$$inline: true
	});

	var navitem4 = new NavItem({
		props: {
		segment: "blog",
		$$slots: { default: [create_default_slot_5] },
		$$scope: { ctx }
	},
		$$inline: true
	});

	var navitem5 = new NavItem({
		props: {
		segment: "faq",
		$$slots: { default: [create_default_slot_4] },
		$$scope: { ctx }
	},
		$$inline: true
	});

	var navitem6 = new NavItem({
		props: {
		external: "https://sapper.svelte.dev",
		$$slots: { default: [create_default_slot_3] },
		$$scope: { ctx }
	},
		$$inline: true
	});

	var navitem7 = new NavItem({
		props: {
		external: "chat",
		title: "Discord Chat",
		$$slots: { default: [create_default_slot_2] },
		$$scope: { ctx }
	},
		$$inline: true
	});

	var navitem8 = new NavItem({
		props: {
		external: "https://github.com/sveltejs/svelte",
		title: "GitHub Repo",
		$$slots: { default: [create_default_slot_1] },
		$$scope: { ctx }
	},
		$$inline: true
	});

	const block = {
		c: function create() {
			navitem0.$$.fragment.c();
			t0 = space();
			navitem1.$$.fragment.c();
			t1 = space();
			navitem2.$$.fragment.c();
			t2 = space();
			navitem3.$$.fragment.c();
			t3 = space();
			navitem4.$$.fragment.c();
			t4 = space();
			navitem5.$$.fragment.c();
			t5 = space();
			navitem6.$$.fragment.c();
			t6 = space();
			navitem7.$$.fragment.c();
			t7 = space();
			navitem8.$$.fragment.c();
		},

		l: function claim(nodes) {
			navitem0.$$.fragment.l(nodes);
			t0 = claim_space(nodes);
			navitem1.$$.fragment.l(nodes);
			t1 = claim_space(nodes);
			navitem2.$$.fragment.l(nodes);
			t2 = claim_space(nodes);
			navitem3.$$.fragment.l(nodes);
			t3 = claim_space(nodes);
			navitem4.$$.fragment.l(nodes);
			t4 = claim_space(nodes);
			navitem5.$$.fragment.l(nodes);
			t5 = claim_space(nodes);
			navitem6.$$.fragment.l(nodes);
			t6 = claim_space(nodes);
			navitem7.$$.fragment.l(nodes);
			t7 = claim_space(nodes);
			navitem8.$$.fragment.l(nodes);
		},

		m: function mount(target, anchor) {
			mount_component(navitem0, target, anchor);
			insert_dev(target, t0, anchor);
			mount_component(navitem1, target, anchor);
			insert_dev(target, t1, anchor);
			mount_component(navitem2, target, anchor);
			insert_dev(target, t2, anchor);
			mount_component(navitem3, target, anchor);
			insert_dev(target, t3, anchor);
			mount_component(navitem4, target, anchor);
			insert_dev(target, t4, anchor);
			mount_component(navitem5, target, anchor);
			insert_dev(target, t5, anchor);
			mount_component(navitem6, target, anchor);
			insert_dev(target, t6, anchor);
			mount_component(navitem7, target, anchor);
			insert_dev(target, t7, anchor);
			mount_component(navitem8, target, anchor);
			current = true;
		},

		p: function update(changed, ctx) {
			var navitem0_changes = {};
			if (changed.$$scope) navitem0_changes.$$scope = { changed, ctx };
			navitem0.$set(navitem0_changes);

			var navitem1_changes = {};
			if (changed.$$scope) navitem1_changes.$$scope = { changed, ctx };
			navitem1.$set(navitem1_changes);

			var navitem2_changes = {};
			if (changed.$$scope) navitem2_changes.$$scope = { changed, ctx };
			navitem2.$set(navitem2_changes);

			var navitem3_changes = {};
			if (changed.$$scope) navitem3_changes.$$scope = { changed, ctx };
			navitem3.$set(navitem3_changes);

			var navitem4_changes = {};
			if (changed.$$scope) navitem4_changes.$$scope = { changed, ctx };
			navitem4.$set(navitem4_changes);

			var navitem5_changes = {};
			if (changed.$$scope) navitem5_changes.$$scope = { changed, ctx };
			navitem5.$set(navitem5_changes);

			var navitem6_changes = {};
			if (changed.$$scope) navitem6_changes.$$scope = { changed, ctx };
			navitem6.$set(navitem6_changes);

			var navitem7_changes = {};
			if (changed.$$scope) navitem7_changes.$$scope = { changed, ctx };
			navitem7.$set(navitem7_changes);

			var navitem8_changes = {};
			if (changed.$$scope) navitem8_changes.$$scope = { changed, ctx };
			navitem8.$set(navitem8_changes);
		},

		i: function intro(local) {
			if (current) return;
			transition_in(navitem0.$$.fragment, local);

			transition_in(navitem1.$$.fragment, local);

			transition_in(navitem2.$$.fragment, local);

			transition_in(navitem3.$$.fragment, local);

			transition_in(navitem4.$$.fragment, local);

			transition_in(navitem5.$$.fragment, local);

			transition_in(navitem6.$$.fragment, local);

			transition_in(navitem7.$$.fragment, local);

			transition_in(navitem8.$$.fragment, local);

			current = true;
		},

		o: function outro(local) {
			transition_out(navitem0.$$.fragment, local);
			transition_out(navitem1.$$.fragment, local);
			transition_out(navitem2.$$.fragment, local);
			transition_out(navitem3.$$.fragment, local);
			transition_out(navitem4.$$.fragment, local);
			transition_out(navitem5.$$.fragment, local);
			transition_out(navitem6.$$.fragment, local);
			transition_out(navitem7.$$.fragment, local);
			transition_out(navitem8.$$.fragment, local);
			current = false;
		},

		d: function destroy(detaching) {
			destroy_component(navitem0, detaching);

			if (detaching) {
				detach_dev(t0);
			}

			destroy_component(navitem1, detaching);

			if (detaching) {
				detach_dev(t1);
			}

			destroy_component(navitem2, detaching);

			if (detaching) {
				detach_dev(t2);
			}

			destroy_component(navitem3, detaching);

			if (detaching) {
				detach_dev(t3);
			}

			destroy_component(navitem4, detaching);

			if (detaching) {
				detach_dev(t4);
			}

			destroy_component(navitem5, detaching);

			if (detaching) {
				detach_dev(t5);
			}

			destroy_component(navitem6, detaching);

			if (detaching) {
				detach_dev(t6);
			}

			destroy_component(navitem7, detaching);

			if (detaching) {
				detach_dev(t7);
			}

			destroy_component(navitem8, detaching);
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_default_slot.name, type: "slot", source: "(39:1) <Nav {segment} {page} logo=\"svelte-logo-horizontal.svg\">", ctx });
	return block;
}

function create_fragment$1(ctx) {
	var t0, t1, t2, main, current;

	var icons = new Icons({ $$inline: true });

	var if_block0 = (ctx.$preloading) && create_if_block_1$1(ctx);

	var if_block1 = (ctx.$page.path !== '/repl/embed') && create_if_block$1(ctx);

	const default_slot_template = ctx.$$slots.default;
	const default_slot = create_slot(default_slot_template, ctx, null);

	const block = {
		c: function create() {
			icons.$$.fragment.c();
			t0 = space();
			if (if_block0) if_block0.c();
			t1 = space();
			if (if_block1) if_block1.c();
			t2 = space();
			main = element("main");

			if (default_slot) default_slot.c();
			this.h();
		},

		l: function claim(nodes) {
			icons.$$.fragment.l(nodes);
			t0 = claim_space(nodes);
			if (if_block0) if_block0.l(nodes);
			t1 = claim_space(nodes);
			if (if_block1) if_block1.l(nodes);
			t2 = claim_space(nodes);

			main = claim_element(nodes, "MAIN", { class: true }, false);
			var main_nodes = children(main);

			if (default_slot) default_slot.l(main_nodes);
			main_nodes.forEach(detach_dev);
			this.h();
		},

		h: function hydrate() {
			attr_dev(main, "class", "svelte-hxszvy");
			add_location(main, file$1, 58, 0, 1549);
		},

		m: function mount(target, anchor) {
			mount_component(icons, target, anchor);
			insert_dev(target, t0, anchor);
			if (if_block0) if_block0.m(target, anchor);
			insert_dev(target, t1, anchor);
			if (if_block1) if_block1.m(target, anchor);
			insert_dev(target, t2, anchor);
			insert_dev(target, main, anchor);

			if (default_slot) {
				default_slot.m(main, null);
			}

			current = true;
		},

		p: function update(changed, ctx) {
			if (ctx.$preloading) {
				if (!if_block0) {
					if_block0 = create_if_block_1$1(ctx);
					if_block0.c();
					transition_in(if_block0, 1);
					if_block0.m(t1.parentNode, t1);
				} else transition_in(if_block0, 1);
			} else if (if_block0) {
				group_outros();
				transition_out(if_block0, 1, 1, () => {
					if_block0 = null;
				});
				check_outros();
			}

			if (ctx.$page.path !== '/repl/embed') {
				if (if_block1) {
					if_block1.p(changed, ctx);
					transition_in(if_block1, 1);
				} else {
					if_block1 = create_if_block$1(ctx);
					if_block1.c();
					transition_in(if_block1, 1);
					if_block1.m(t2.parentNode, t2);
				}
			} else if (if_block1) {
				group_outros();
				transition_out(if_block1, 1, 1, () => {
					if_block1 = null;
				});
				check_outros();
			}

			if (default_slot && default_slot.p && changed.$$scope) {
				default_slot.p(
					get_slot_changes(default_slot_template, ctx, changed, null),
					get_slot_context(default_slot_template, ctx, null)
				);
			}
		},

		i: function intro(local) {
			if (current) return;
			transition_in(icons.$$.fragment, local);

			transition_in(if_block0);
			transition_in(if_block1);
			transition_in(default_slot, local);
			current = true;
		},

		o: function outro(local) {
			transition_out(icons.$$.fragment, local);
			transition_out(if_block0);
			transition_out(if_block1);
			transition_out(default_slot, local);
			current = false;
		},

		d: function destroy(detaching) {
			destroy_component(icons, detaching);

			if (detaching) {
				detach_dev(t0);
			}

			if (if_block0) if_block0.d(detaching);

			if (detaching) {
				detach_dev(t1);
			}

			if (if_block1) if_block1.d(detaching);

			if (detaching) {
				detach_dev(t2);
				detach_dev(main);
			}

			if (default_slot) default_slot.d(detaching);
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_fragment$1.name, type: "component", source: "", ctx });
	return block;
}

function instance$1($$self, $$props, $$invalidate) {
	let $session, $preloading, $page;

	

	let { segment } = $$props;

	const { page, preloading, session } = stores$1(); validate_store(page, 'page'); component_subscribe($$self, page, $$value => { $page = $$value; $$invalidate('$page', $page); }); validate_store(preloading, 'preloading'); component_subscribe($$self, preloading, $$value => { $preloading = $$value; $$invalidate('$preloading', $preloading); }); validate_store(session, 'session'); component_subscribe($$self, session, $$value => { $session = $$value; $$invalidate('$session', $session); });

	setContext('app', {
		login: () => {
			const login_window = window.open(`${window.location.origin}/auth/login`, 'login', 'width=600,height=400');

			window.addEventListener('message', function handler(event) {
				login_window.close();
				window.removeEventListener('message', handler);
				set_store_value(session, $session.user = event.data.user, $session);
			});
		},

		logout: async () => {
			const r = await fetch(`/auth/logout`, {
				credentials: 'include'
			});

			if (r.ok) set_store_value(session, $session.user = null, $session);
		}
	});

	const writable_props = ['segment'];
	Object.keys($$props).forEach(key => {
		if (!writable_props.includes(key) && !key.startsWith('$$')) console.warn(`<Layout> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;

	$$self.$set = $$props => {
		if ('segment' in $$props) $$invalidate('segment', segment = $$props.segment);
		if ('$$scope' in $$props) $$invalidate('$$scope', $$scope = $$props.$$scope);
	};

	$$self.$capture_state = () => {
		return { segment, $session, $preloading, $page };
	};

	$$self.$inject_state = $$props => {
		if ('segment' in $$props) $$invalidate('segment', segment = $$props.segment);
		if ('$session' in $$props) session.set($session);
		if ('$preloading' in $$props) preloading.set($preloading);
		if ('$page' in $$props) page.set($page);
	};

	return {
		segment,
		page,
		preloading,
		session,
		$preloading,
		$page,
		$$slots,
		$$scope
	};
}

class Layout extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$1, create_fragment$1, safe_not_equal, ["segment"]);
		dispatch_dev("SvelteRegisterComponent", { component: this, tagName: "Layout", options, id: create_fragment$1.name });

		const { ctx } = this.$$;
		const props = options.props || {};
		if (ctx.segment === undefined && !('segment' in props)) {
			console.warn("<Layout> was created without expected prop 'segment'");
		}
	}

	get segment() {
		throw new Error("<Layout>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set segment(value) {
		throw new Error("<Layout>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src\routes\_error.svelte generated by Svelte v3.12.0 */
const { Error: Error_1 } = globals;

const file$2 = "src\\routes\\_error.svelte";

// (66:1) {:else}
function create_else_block_2(ctx) {
	var h1, t0, t1, p, t2;

	const block = {
		c: function create() {
			h1 = element("h1");
			t0 = text("It looks like you're offline");
			t1 = space();
			p = element("p");
			t2 = text("Reload the page once you've found the internet.");
			this.h();
		},

		l: function claim(nodes) {
			h1 = claim_element(nodes, "H1", { class: true }, false);
			var h1_nodes = children(h1);

			t0 = claim_text(h1_nodes, "It looks like you're offline");
			h1_nodes.forEach(detach_dev);
			t1 = claim_space(nodes);

			p = claim_element(nodes, "P", { class: true }, false);
			var p_nodes = children(p);

			t2 = claim_text(p_nodes, "Reload the page once you've found the internet.");
			p_nodes.forEach(detach_dev);
			this.h();
		},

		h: function hydrate() {
			attr_dev(h1, "class", "svelte-lk6uuh");
			add_location(h1, file$2, 66, 2, 1419);
			attr_dev(p, "class", "svelte-lk6uuh");
			add_location(p, file$2, 68, 2, 1462);
		},

		m: function mount(target, anchor) {
			insert_dev(target, h1, anchor);
			append_dev(h1, t0);
			insert_dev(target, t1, anchor);
			insert_dev(target, p, anchor);
			append_dev(p, t2);
		},

		p: noop,

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(h1);
				detach_dev(t1);
				detach_dev(p);
			}
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_else_block_2.name, type: "else", source: "(66:1) {:else}", ctx });
	return block;
}

// (48:1) {#if online}
function create_if_block$2(ctx) {
	var h1, t0, t1, t2, if_block1_anchor;

	function select_block_type_1(changed, ctx) {
		if (ctx.error.message) return create_if_block_3;
		return create_else_block_1;
	}

	var current_block_type = select_block_type_1(null, ctx);
	var if_block0 = current_block_type(ctx);

	function select_block_type_2(changed, ctx) {
		if (ctx.dev && ctx.error.stack) return create_if_block_1$2;
		return create_else_block;
	}

	var current_block_type_1 = select_block_type_2(null, ctx);
	var if_block1 = current_block_type_1(ctx);

	const block = {
		c: function create() {
			h1 = element("h1");
			t0 = text("Yikes!");
			t1 = space();
			if_block0.c();
			t2 = space();
			if_block1.c();
			if_block1_anchor = empty();
			this.h();
		},

		l: function claim(nodes) {
			h1 = claim_element(nodes, "H1", { class: true }, false);
			var h1_nodes = children(h1);

			t0 = claim_text(h1_nodes, "Yikes!");
			h1_nodes.forEach(detach_dev);
			t1 = claim_space(nodes);
			if_block0.l(nodes);
			t2 = claim_space(nodes);
			if_block1.l(nodes);
			if_block1_anchor = empty();
			this.h();
		},

		h: function hydrate() {
			attr_dev(h1, "class", "svelte-lk6uuh");
			add_location(h1, file$2, 48, 2, 894);
		},

		m: function mount(target, anchor) {
			insert_dev(target, h1, anchor);
			append_dev(h1, t0);
			insert_dev(target, t1, anchor);
			if_block0.m(target, anchor);
			insert_dev(target, t2, anchor);
			if_block1.m(target, anchor);
			insert_dev(target, if_block1_anchor, anchor);
		},

		p: function update(changed, ctx) {
			if (current_block_type === (current_block_type = select_block_type_1(changed, ctx)) && if_block0) {
				if_block0.p(changed, ctx);
			} else {
				if_block0.d(1);
				if_block0 = current_block_type(ctx);
				if (if_block0) {
					if_block0.c();
					if_block0.m(t2.parentNode, t2);
				}
			}

			if (current_block_type_1 === (current_block_type_1 = select_block_type_2(changed, ctx)) && if_block1) {
				if_block1.p(changed, ctx);
			} else {
				if_block1.d(1);
				if_block1 = current_block_type_1(ctx);
				if (if_block1) {
					if_block1.c();
					if_block1.m(if_block1_anchor.parentNode, if_block1_anchor);
				}
			}
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(h1);
				detach_dev(t1);
			}

			if_block0.d(detaching);

			if (detaching) {
				detach_dev(t2);
			}

			if_block1.d(detaching);

			if (detaching) {
				detach_dev(if_block1_anchor);
			}
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_if_block$2.name, type: "if", source: "(48:1) {#if online}", ctx });
	return block;
}

// (53:2) {:else}
function create_else_block_1(ctx) {
	var p, t0, t1, t2;

	const block = {
		c: function create() {
			p = element("p");
			t0 = text("Encountered a ");
			t1 = text(ctx.status);
			t2 = text(" error");
			this.h();
		},

		l: function claim(nodes) {
			p = claim_element(nodes, "P", { class: true }, false);
			var p_nodes = children(p);

			t0 = claim_text(p_nodes, "Encountered a ");
			t1 = claim_text(p_nodes, ctx.status);
			t2 = claim_text(p_nodes, " error");
			p_nodes.forEach(detach_dev);
			this.h();
		},

		h: function hydrate() {
			attr_dev(p, "class", "error svelte-lk6uuh");
			add_location(p, file$2, 53, 3, 1001);
		},

		m: function mount(target, anchor) {
			insert_dev(target, p, anchor);
			append_dev(p, t0);
			append_dev(p, t1);
			append_dev(p, t2);
		},

		p: function update(changed, ctx) {
			if (changed.status) {
				set_data_dev(t1, ctx.status);
			}
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(p);
			}
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_else_block_1.name, type: "else", source: "(53:2) {:else}", ctx });
	return block;
}

// (51:2) {#if error.message}
function create_if_block_3(ctx) {
	var p, t0, t1, t2_value = ctx.error.message + "", t2;

	const block = {
		c: function create() {
			p = element("p");
			t0 = text(ctx.status);
			t1 = text(": ");
			t2 = text(t2_value);
			this.h();
		},

		l: function claim(nodes) {
			p = claim_element(nodes, "P", { class: true }, false);
			var p_nodes = children(p);

			t0 = claim_text(p_nodes, ctx.status);
			t1 = claim_text(p_nodes, ": ");
			t2 = claim_text(p_nodes, t2_value);
			p_nodes.forEach(detach_dev);
			this.h();
		},

		h: function hydrate() {
			attr_dev(p, "class", "error svelte-lk6uuh");
			add_location(p, file$2, 51, 3, 939);
		},

		m: function mount(target, anchor) {
			insert_dev(target, p, anchor);
			append_dev(p, t0);
			append_dev(p, t1);
			append_dev(p, t2);
		},

		p: function update(changed, ctx) {
			if (changed.status) {
				set_data_dev(t0, ctx.status);
			}

			if ((changed.error) && t2_value !== (t2_value = ctx.error.message + "")) {
				set_data_dev(t2, t2_value);
			}
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(p);
			}
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_if_block_3.name, type: "if", source: "(51:2) {#if error.message}", ctx });
	return block;
}

// (59:2) {:else}
function create_else_block(ctx) {
	var t0, p, t1, a0, t2, t3, a1, t4, t5;

	var if_block = (ctx.status >= 500) && create_if_block_2(ctx);

	const block = {
		c: function create() {
			if (if_block) if_block.c();
			t0 = space();
			p = element("p");
			t1 = text("If the error persists, please drop by ");
			a0 = element("a");
			t2 = text("Discord chatroom");
			t3 = text(" and let us know, or raise an issue on ");
			a1 = element("a");
			t4 = text("GitHub");
			t5 = text(". Thanks!");
			this.h();
		},

		l: function claim(nodes) {
			if (if_block) if_block.l(nodes);
			t0 = claim_space(nodes);

			p = claim_element(nodes, "P", { class: true }, false);
			var p_nodes = children(p);

			t1 = claim_text(p_nodes, "If the error persists, please drop by ");

			a0 = claim_element(p_nodes, "A", { href: true }, false);
			var a0_nodes = children(a0);

			t2 = claim_text(a0_nodes, "Discord chatroom");
			a0_nodes.forEach(detach_dev);
			t3 = claim_text(p_nodes, " and let us know, or raise an issue on ");

			a1 = claim_element(p_nodes, "A", { href: true }, false);
			var a1_nodes = children(a1);

			t4 = claim_text(a1_nodes, "GitHub");
			a1_nodes.forEach(detach_dev);
			t5 = claim_text(p_nodes, ". Thanks!");
			p_nodes.forEach(detach_dev);
			this.h();
		},

		h: function hydrate() {
			attr_dev(a0, "href", "chat");
			add_location(a0, file$2, 63, 44, 1254);
			attr_dev(a1, "href", "https://github.com/sveltejs/svelte");
			add_location(a1, file$2, 63, 118, 1328);
			attr_dev(p, "class", "svelte-lk6uuh");
			add_location(p, file$2, 63, 3, 1213);
		},

		m: function mount(target, anchor) {
			if (if_block) if_block.m(target, anchor);
			insert_dev(target, t0, anchor);
			insert_dev(target, p, anchor);
			append_dev(p, t1);
			append_dev(p, a0);
			append_dev(a0, t2);
			append_dev(p, t3);
			append_dev(p, a1);
			append_dev(a1, t4);
			append_dev(p, t5);
		},

		p: function update(changed, ctx) {
			if (ctx.status >= 500) {
				if (!if_block) {
					if_block = create_if_block_2(ctx);
					if_block.c();
					if_block.m(t0.parentNode, t0);
				}
			} else if (if_block) {
				if_block.d(1);
				if_block = null;
			}
		},

		d: function destroy(detaching) {
			if (if_block) if_block.d(detaching);

			if (detaching) {
				detach_dev(t0);
				detach_dev(p);
			}
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_else_block.name, type: "else", source: "(59:2) {:else}", ctx });
	return block;
}

// (57:2) {#if dev && error.stack}
function create_if_block_1$2(ctx) {
	var pre, t_value = ctx.error.stack + "", t;

	const block = {
		c: function create() {
			pre = element("pre");
			t = text(t_value);
			this.h();
		},

		l: function claim(nodes) {
			pre = claim_element(nodes, "PRE", {}, false);
			var pre_nodes = children(pre);

			t = claim_text(pre_nodes, t_value);
			pre_nodes.forEach(detach_dev);
			this.h();
		},

		h: function hydrate() {
			add_location(pre, file$2, 57, 3, 1094);
		},

		m: function mount(target, anchor) {
			insert_dev(target, pre, anchor);
			append_dev(pre, t);
		},

		p: function update(changed, ctx) {
			if ((changed.error) && t_value !== (t_value = ctx.error.stack + "")) {
				set_data_dev(t, t_value);
			}
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(pre);
			}
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_if_block_1$2.name, type: "if", source: "(57:2) {#if dev && error.stack}", ctx });
	return block;
}

// (60:3) {#if status >= 500}
function create_if_block_2(ctx) {
	var p, t;

	const block = {
		c: function create() {
			p = element("p");
			t = text("Please try reloading the page.");
			this.h();
		},

		l: function claim(nodes) {
			p = claim_element(nodes, "P", { class: true }, false);
			var p_nodes = children(p);

			t = claim_text(p_nodes, "Please try reloading the page.");
			p_nodes.forEach(detach_dev);
			this.h();
		},

		h: function hydrate() {
			attr_dev(p, "class", "svelte-lk6uuh");
			add_location(p, file$2, 60, 4, 1159);
		},

		m: function mount(target, anchor) {
			insert_dev(target, p, anchor);
			append_dev(p, t);
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(p);
			}
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_if_block_2.name, type: "if", source: "(60:3) {#if status >= 500}", ctx });
	return block;
}

function create_fragment$2(ctx) {
	var title_value, t, div;

	document.title = title_value = ctx.status;

	function select_block_type(changed, ctx) {
		if (ctx.online) return create_if_block$2;
		return create_else_block_2;
	}

	var current_block_type = select_block_type(null, ctx);
	var if_block = current_block_type(ctx);

	const block = {
		c: function create() {
			t = space();
			div = element("div");
			if_block.c();
			this.h();
		},

		l: function claim(nodes) {
			t = claim_space(nodes);

			div = claim_element(nodes, "DIV", { class: true }, false);
			var div_nodes = children(div);

			if_block.l(div_nodes);
			div_nodes.forEach(detach_dev);
			this.h();
		},

		h: function hydrate() {
			attr_dev(div, "class", "container svelte-lk6uuh");
			add_location(div, file$2, 46, 0, 852);
		},

		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
			insert_dev(target, div, anchor);
			if_block.m(div, null);
		},

		p: function update(changed, ctx) {
			if ((changed.status) && title_value !== (title_value = ctx.status)) {
				document.title = title_value;
			}

			if_block.p(changed, ctx);
		},

		i: noop,
		o: noop,

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(t);
				detach_dev(div);
			}

			if_block.d();
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_fragment$2.name, type: "component", source: "", ctx });
	return block;
}

function instance$2($$self, $$props, $$invalidate) {
	const dev = "development" === 'development';

	let { status, error } = $$props;

	// we don't want to use <svelte:window bind:online> here,
	// because we only care about the online state when
	// the page first loads
	const online = typeof navigator !== 'undefined'
		? navigator.onLine
		: true;

	const writable_props = ['status', 'error'];
	Object.keys($$props).forEach(key => {
		if (!writable_props.includes(key) && !key.startsWith('$$')) console.warn(`<Error> was created with unknown prop '${key}'`);
	});

	$$self.$set = $$props => {
		if ('status' in $$props) $$invalidate('status', status = $$props.status);
		if ('error' in $$props) $$invalidate('error', error = $$props.error);
	};

	$$self.$capture_state = () => {
		return { status, error };
	};

	$$self.$inject_state = $$props => {
		if ('status' in $$props) $$invalidate('status', status = $$props.status);
		if ('error' in $$props) $$invalidate('error', error = $$props.error);
	};

	return { dev, status, error, online };
}

class Error$1 extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$2, create_fragment$2, safe_not_equal, ["status", "error"]);
		dispatch_dev("SvelteRegisterComponent", { component: this, tagName: "Error", options, id: create_fragment$2.name });

		const { ctx } = this.$$;
		const props = options.props || {};
		if (ctx.status === undefined && !('status' in props)) {
			console.warn("<Error> was created without expected prop 'status'");
		}
		if (ctx.error === undefined && !('error' in props)) {
			console.warn("<Error> was created without expected prop 'error'");
		}
	}

	get status() {
		throw new Error_1("<Error>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set status(value) {
		throw new Error_1("<Error>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get error() {
		throw new Error_1("<Error>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set error(value) {
		throw new Error_1("<Error>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src\node_modules\@sapper\internal\App.svelte generated by Svelte v3.12.0 */
const { Error: Error_1$1 } = globals;

// (22:1) {:else}
function create_else_block$1(ctx) {
	var switch_instance_anchor, current;

	var switch_instance_spread_levels = [
		{ segment: ctx.segments[1] },
		ctx.level1.props
	];

	var switch_value = ctx.level1.component;

	function switch_props(ctx) {
		let switch_instance_props = {
			$$slots: { default: [create_default_slot_1$1] },
			$$scope: { ctx }
		};
		for (var i = 0; i < switch_instance_spread_levels.length; i += 1) {
			switch_instance_props = assign(switch_instance_props, switch_instance_spread_levels[i]);
		}
		return {
			props: switch_instance_props,
			$$inline: true
		};
	}

	if (switch_value) {
		var switch_instance = new switch_value(switch_props(ctx));
	}

	const block = {
		c: function create() {
			if (switch_instance) switch_instance.$$.fragment.c();
			switch_instance_anchor = empty();
		},

		l: function claim(nodes) {
			if (switch_instance) switch_instance.$$.fragment.l(nodes);
			switch_instance_anchor = empty();
		},

		m: function mount(target, anchor) {
			if (switch_instance) {
				mount_component(switch_instance, target, anchor);
			}

			insert_dev(target, switch_instance_anchor, anchor);
			current = true;
		},

		p: function update(changed, ctx) {
			var switch_instance_changes = (changed.segments || changed.level1) ? get_spread_update(switch_instance_spread_levels, [
									(changed.segments) && { segment: ctx.segments[1] },
			(changed.level1) && get_spread_object(ctx.level1.props)
								]) : {};
			if (changed.$$scope || changed.level2) switch_instance_changes.$$scope = { changed, ctx };

			if (switch_value !== (switch_value = ctx.level1.component)) {
				if (switch_instance) {
					group_outros();
					const old_component = switch_instance;
					transition_out(old_component.$$.fragment, 1, 0, () => {
						destroy_component(old_component, 1);
					});
					check_outros();
				}

				if (switch_value) {
					switch_instance = new switch_value(switch_props(ctx));

					switch_instance.$$.fragment.c();
					transition_in(switch_instance.$$.fragment, 1);
					mount_component(switch_instance, switch_instance_anchor.parentNode, switch_instance_anchor);
				} else {
					switch_instance = null;
				}
			}

			else if (switch_value) {
				switch_instance.$set(switch_instance_changes);
			}
		},

		i: function intro(local) {
			if (current) return;
			if (switch_instance) transition_in(switch_instance.$$.fragment, local);

			current = true;
		},

		o: function outro(local) {
			if (switch_instance) transition_out(switch_instance.$$.fragment, local);
			current = false;
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(switch_instance_anchor);
			}

			if (switch_instance) destroy_component(switch_instance, detaching);
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_else_block$1.name, type: "else", source: "(22:1) {:else}", ctx });
	return block;
}

// (20:1) {#if error}
function create_if_block$3(ctx) {
	var current;

	var error_1 = new Error$1({
		props: { error: ctx.error, status: ctx.status },
		$$inline: true
	});

	const block = {
		c: function create() {
			error_1.$$.fragment.c();
		},

		l: function claim(nodes) {
			error_1.$$.fragment.l(nodes);
		},

		m: function mount(target, anchor) {
			mount_component(error_1, target, anchor);
			current = true;
		},

		p: function update(changed, ctx) {
			var error_1_changes = {};
			if (changed.error) error_1_changes.error = ctx.error;
			if (changed.status) error_1_changes.status = ctx.status;
			error_1.$set(error_1_changes);
		},

		i: function intro(local) {
			if (current) return;
			transition_in(error_1.$$.fragment, local);

			current = true;
		},

		o: function outro(local) {
			transition_out(error_1.$$.fragment, local);
			current = false;
		},

		d: function destroy(detaching) {
			destroy_component(error_1, detaching);
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_if_block$3.name, type: "if", source: "(20:1) {#if error}", ctx });
	return block;
}

// (24:3) {#if level2}
function create_if_block_1$3(ctx) {
	var switch_instance_anchor, current;

	var switch_instance_spread_levels = [
		ctx.level2.props
	];

	var switch_value = ctx.level2.component;

	function switch_props(ctx) {
		let switch_instance_props = {};
		for (var i = 0; i < switch_instance_spread_levels.length; i += 1) {
			switch_instance_props = assign(switch_instance_props, switch_instance_spread_levels[i]);
		}
		return {
			props: switch_instance_props,
			$$inline: true
		};
	}

	if (switch_value) {
		var switch_instance = new switch_value(switch_props());
	}

	const block = {
		c: function create() {
			if (switch_instance) switch_instance.$$.fragment.c();
			switch_instance_anchor = empty();
		},

		l: function claim(nodes) {
			if (switch_instance) switch_instance.$$.fragment.l(nodes);
			switch_instance_anchor = empty();
		},

		m: function mount(target, anchor) {
			if (switch_instance) {
				mount_component(switch_instance, target, anchor);
			}

			insert_dev(target, switch_instance_anchor, anchor);
			current = true;
		},

		p: function update(changed, ctx) {
			var switch_instance_changes = (changed.level2) ? get_spread_update(switch_instance_spread_levels, [
									get_spread_object(ctx.level2.props)
								]) : {};

			if (switch_value !== (switch_value = ctx.level2.component)) {
				if (switch_instance) {
					group_outros();
					const old_component = switch_instance;
					transition_out(old_component.$$.fragment, 1, 0, () => {
						destroy_component(old_component, 1);
					});
					check_outros();
				}

				if (switch_value) {
					switch_instance = new switch_value(switch_props());

					switch_instance.$$.fragment.c();
					transition_in(switch_instance.$$.fragment, 1);
					mount_component(switch_instance, switch_instance_anchor.parentNode, switch_instance_anchor);
				} else {
					switch_instance = null;
				}
			}

			else if (switch_value) {
				switch_instance.$set(switch_instance_changes);
			}
		},

		i: function intro(local) {
			if (current) return;
			if (switch_instance) transition_in(switch_instance.$$.fragment, local);

			current = true;
		},

		o: function outro(local) {
			if (switch_instance) transition_out(switch_instance.$$.fragment, local);
			current = false;
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(switch_instance_anchor);
			}

			if (switch_instance) destroy_component(switch_instance, detaching);
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_if_block_1$3.name, type: "if", source: "(24:3) {#if level2}", ctx });
	return block;
}

// (23:2) <svelte:component this="{level1.component}" segment="{segments[1]}" {...level1.props}>
function create_default_slot_1$1(ctx) {
	var if_block_anchor, current;

	var if_block = (ctx.level2) && create_if_block_1$3(ctx);

	const block = {
		c: function create() {
			if (if_block) if_block.c();
			if_block_anchor = empty();
		},

		l: function claim(nodes) {
			if (if_block) if_block.l(nodes);
			if_block_anchor = empty();
		},

		m: function mount(target, anchor) {
			if (if_block) if_block.m(target, anchor);
			insert_dev(target, if_block_anchor, anchor);
			current = true;
		},

		p: function update(changed, ctx) {
			if (ctx.level2) {
				if (if_block) {
					if_block.p(changed, ctx);
					transition_in(if_block, 1);
				} else {
					if_block = create_if_block_1$3(ctx);
					if_block.c();
					transition_in(if_block, 1);
					if_block.m(if_block_anchor.parentNode, if_block_anchor);
				}
			} else if (if_block) {
				group_outros();
				transition_out(if_block, 1, 1, () => {
					if_block = null;
				});
				check_outros();
			}
		},

		i: function intro(local) {
			if (current) return;
			transition_in(if_block);
			current = true;
		},

		o: function outro(local) {
			transition_out(if_block);
			current = false;
		},

		d: function destroy(detaching) {
			if (if_block) if_block.d(detaching);

			if (detaching) {
				detach_dev(if_block_anchor);
			}
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_default_slot_1$1.name, type: "slot", source: "(23:2) <svelte:component this=\"{level1.component}\" segment=\"{segments[1]}\" {...level1.props}>", ctx });
	return block;
}

// (19:0) <Layout segment="{segments[0]}" {...level0.props}>
function create_default_slot$1(ctx) {
	var current_block_type_index, if_block, if_block_anchor, current;

	var if_block_creators = [
		create_if_block$3,
		create_else_block$1
	];

	var if_blocks = [];

	function select_block_type(changed, ctx) {
		if (ctx.error) return 0;
		return 1;
	}

	current_block_type_index = select_block_type(null, ctx);
	if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);

	const block = {
		c: function create() {
			if_block.c();
			if_block_anchor = empty();
		},

		l: function claim(nodes) {
			if_block.l(nodes);
			if_block_anchor = empty();
		},

		m: function mount(target, anchor) {
			if_blocks[current_block_type_index].m(target, anchor);
			insert_dev(target, if_block_anchor, anchor);
			current = true;
		},

		p: function update(changed, ctx) {
			var previous_block_index = current_block_type_index;
			current_block_type_index = select_block_type(changed, ctx);
			if (current_block_type_index === previous_block_index) {
				if_blocks[current_block_type_index].p(changed, ctx);
			} else {
				group_outros();
				transition_out(if_blocks[previous_block_index], 1, 1, () => {
					if_blocks[previous_block_index] = null;
				});
				check_outros();

				if_block = if_blocks[current_block_type_index];
				if (!if_block) {
					if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
					if_block.c();
				}
				transition_in(if_block, 1);
				if_block.m(if_block_anchor.parentNode, if_block_anchor);
			}
		},

		i: function intro(local) {
			if (current) return;
			transition_in(if_block);
			current = true;
		},

		o: function outro(local) {
			transition_out(if_block);
			current = false;
		},

		d: function destroy(detaching) {
			if_blocks[current_block_type_index].d(detaching);

			if (detaching) {
				detach_dev(if_block_anchor);
			}
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_default_slot$1.name, type: "slot", source: "(19:0) <Layout segment=\"{segments[0]}\" {...level0.props}>", ctx });
	return block;
}

function create_fragment$3(ctx) {
	var current;

	var layout_spread_levels = [
		{ segment: ctx.segments[0] },
		ctx.level0.props
	];

	let layout_props = {
		$$slots: { default: [create_default_slot$1] },
		$$scope: { ctx }
	};
	for (var i = 0; i < layout_spread_levels.length; i += 1) {
		layout_props = assign(layout_props, layout_spread_levels[i]);
	}
	var layout = new Layout({ props: layout_props, $$inline: true });

	const block = {
		c: function create() {
			layout.$$.fragment.c();
		},

		l: function claim(nodes) {
			layout.$$.fragment.l(nodes);
		},

		m: function mount(target, anchor) {
			mount_component(layout, target, anchor);
			current = true;
		},

		p: function update(changed, ctx) {
			var layout_changes = (changed.segments || changed.level0) ? get_spread_update(layout_spread_levels, [
									(changed.segments) && { segment: ctx.segments[0] },
			(changed.level0) && get_spread_object(ctx.level0.props)
								]) : {};
			if (changed.$$scope || changed.error || changed.status || changed.level1 || changed.segments || changed.level2) layout_changes.$$scope = { changed, ctx };
			layout.$set(layout_changes);
		},

		i: function intro(local) {
			if (current) return;
			transition_in(layout.$$.fragment, local);

			current = true;
		},

		o: function outro(local) {
			transition_out(layout.$$.fragment, local);
			current = false;
		},

		d: function destroy(detaching) {
			destroy_component(layout, detaching);
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_fragment$3.name, type: "component", source: "", ctx });
	return block;
}

function instance$3($$self, $$props, $$invalidate) {
	

	let { stores, error, status, segments, level0, level1 = null, level2 = null } = $$props;

	setContext(CONTEXT_KEY, stores);

	const writable_props = ['stores', 'error', 'status', 'segments', 'level0', 'level1', 'level2'];
	Object.keys($$props).forEach(key => {
		if (!writable_props.includes(key) && !key.startsWith('$$')) console.warn(`<App> was created with unknown prop '${key}'`);
	});

	$$self.$set = $$props => {
		if ('stores' in $$props) $$invalidate('stores', stores = $$props.stores);
		if ('error' in $$props) $$invalidate('error', error = $$props.error);
		if ('status' in $$props) $$invalidate('status', status = $$props.status);
		if ('segments' in $$props) $$invalidate('segments', segments = $$props.segments);
		if ('level0' in $$props) $$invalidate('level0', level0 = $$props.level0);
		if ('level1' in $$props) $$invalidate('level1', level1 = $$props.level1);
		if ('level2' in $$props) $$invalidate('level2', level2 = $$props.level2);
	};

	$$self.$capture_state = () => {
		return { stores, error, status, segments, level0, level1, level2 };
	};

	$$self.$inject_state = $$props => {
		if ('stores' in $$props) $$invalidate('stores', stores = $$props.stores);
		if ('error' in $$props) $$invalidate('error', error = $$props.error);
		if ('status' in $$props) $$invalidate('status', status = $$props.status);
		if ('segments' in $$props) $$invalidate('segments', segments = $$props.segments);
		if ('level0' in $$props) $$invalidate('level0', level0 = $$props.level0);
		if ('level1' in $$props) $$invalidate('level1', level1 = $$props.level1);
		if ('level2' in $$props) $$invalidate('level2', level2 = $$props.level2);
	};

	return {
		stores,
		error,
		status,
		segments,
		level0,
		level1,
		level2
	};
}

class App extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$3, create_fragment$3, safe_not_equal, ["stores", "error", "status", "segments", "level0", "level1", "level2"]);
		dispatch_dev("SvelteRegisterComponent", { component: this, tagName: "App", options, id: create_fragment$3.name });

		const { ctx } = this.$$;
		const props = options.props || {};
		if (ctx.stores === undefined && !('stores' in props)) {
			console.warn("<App> was created without expected prop 'stores'");
		}
		if (ctx.error === undefined && !('error' in props)) {
			console.warn("<App> was created without expected prop 'error'");
		}
		if (ctx.status === undefined && !('status' in props)) {
			console.warn("<App> was created without expected prop 'status'");
		}
		if (ctx.segments === undefined && !('segments' in props)) {
			console.warn("<App> was created without expected prop 'segments'");
		}
		if (ctx.level0 === undefined && !('level0' in props)) {
			console.warn("<App> was created without expected prop 'level0'");
		}
	}

	get stores() {
		throw new Error_1$1("<App>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set stores(value) {
		throw new Error_1$1("<App>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get error() {
		throw new Error_1$1("<App>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set error(value) {
		throw new Error_1$1("<App>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get status() {
		throw new Error_1$1("<App>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set status(value) {
		throw new Error_1$1("<App>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get segments() {
		throw new Error_1$1("<App>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set segments(value) {
		throw new Error_1$1("<App>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get level0() {
		throw new Error_1$1("<App>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set level0(value) {
		throw new Error_1$1("<App>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get level1() {
		throw new Error_1$1("<App>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set level1(value) {
		throw new Error_1$1("<App>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get level2() {
		throw new Error_1$1("<App>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set level2(value) {
		throw new Error_1$1("<App>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

// This file is generated by Sapper — do not edit it!

const ignore = [/^\/examples.json$/, /^\/examples\/([^\/]+?).json$/, /^\/tutorial.json$/, /^\/tutorial\/random-number\/?$/, /^\/tutorial\/([^\/]+?).json$/, /^\/apps.json$/, /^\/auth\/callback\/?$/, /^\/auth\/logout\/?$/, /^\/auth\/login\/?$/, /^\/blog.json$/, /^\/blog\/rss.xml$/, /^\/blog\/([^\/]+?).json$/, /^\/chat\/?$/, /^\/docs.json$/, /^\/repl\/create.json$/, /^\/repl\/local\/(.+)$/, /^\/repl\/([^\/]+?).json$/, /^\/faq\/?$/];

const components = [
	{
		js: () => import('./index.eb8baedd.js'),
		css: ["index.eb8baedd.css","index.abf9c6bd.css","Repl.f1ddc62a.css","InputOutputToggle.cf9a1ce1.css","ReplWidget.9e27fb73.css"]
	},
	{
		js: () => import('./index.faa917b5.js'),
		css: ["index.faa917b5.css","app.623f0ee4.css","index.abf9c6bd.css","Repl.f1ddc62a.css","config.582076a5.css"]
	},
	{
		js: () => import('./_layout.48078c70.js'),
		css: []
	},
	{
		js: () => import('./index.a179c623.js'),
		css: []
	},
	{
		js: () => import('./index.62206069.js'),
		css: ["index.62206069.css","app.623f0ee4.css","index.abf9c6bd.css","Repl.f1ddc62a.css","config.582076a5.css"]
	},
	{
		js: () => import('./index.82abdbd2.js'),
		css: ["index.82abdbd2.css"]
	},
	{
		js: () => import('./index.c311bf42.js'),
		css: ["index.c311bf42.css"]
	},
	{
		js: () => import('./[slug].82163464.js'),
		css: ["[slug].82163464.css"]
	},
	{
		js: () => import('./index.7c138582.js'),
		css: ["index.abf9c6bd.css"]
	},
	{
		js: () => import('./index.e6fda4a1.js'),
		css: []
	},
	{
		js: () => import('./embed.e83d46bf.js'),
		css: ["embed.e83d46bf.css","Repl.f1ddc62a.css","InputOutputToggle.cf9a1ce1.css","ReplWidget.9e27fb73.css"]
	},
	{
		js: () => import('./index.79f9b8bb.js'),
		css: ["index.79f9b8bb.css","app.623f0ee4.css","index.abf9c6bd.css","Repl.f1ddc62a.css","InputOutputToggle.cf9a1ce1.css"]
	}
];

const routes = (d => [
	{
		// index.svelte
		pattern: /^\/$/,
		parts: [
			{ i: 0 }
		]
	},

	{
		// examples/index.svelte
		pattern: /^\/examples\/?$/,
		parts: [
			{ i: 1 }
		]
	},

	{
		// tutorial/index.svelte
		pattern: /^\/tutorial\/?$/,
		parts: [
			{ i: 2 },
			{ i: 3 }
		]
	},

	{
		// tutorial/[slug]/index.svelte
		pattern: /^\/tutorial\/([^\/]+?)\/?$/,
		parts: [
			{ i: 2 },
			{ i: 4, params: match => ({ slug: d(match[1]) }) }
		]
	},

	{
		// apps/index.svelte
		pattern: /^\/apps\/?$/,
		parts: [
			{ i: 5 }
		]
	},

	{
		// blog/index.svelte
		pattern: /^\/blog\/?$/,
		parts: [
			{ i: 6 }
		]
	},

	{
		// blog/[slug].svelte
		pattern: /^\/blog\/([^\/]+?)\/?$/,
		parts: [
			null,
			{ i: 7, params: match => ({ slug: d(match[1]) }) }
		]
	},

	{
		// docs/index.svelte
		pattern: /^\/docs\/?$/,
		parts: [
			{ i: 8 }
		]
	},

	{
		// repl/index.svelte
		pattern: /^\/repl\/?$/,
		parts: [
			{ i: 9 }
		]
	},

	{
		// repl/embed.svelte
		pattern: /^\/repl\/embed\/?$/,
		parts: [
			null,
			{ i: 10 }
		]
	},

	{
		// repl/[id]/index.svelte
		pattern: /^\/repl\/([^\/]+?)\/?$/,
		parts: [
			null,
			{ i: 11, params: match => ({ id: d(match[1]) }) }
		]
	}
])(decodeURIComponent);

if (typeof window !== 'undefined') {
	import('./sapper-dev-client.ce2664ff.js').then(client => {
		client.connect(10000);
	});
}

function goto(href, opts = { replaceState: false }) {
	const target = select_target(new URL(href, document.baseURI));

	if (target) {
		_history[opts.replaceState ? 'replaceState' : 'pushState']({ id: cid }, '', href);
		return navigate(target, null).then(() => {});
	}

	location.href = href;
	return new Promise(f => {}); // never resolves
}

const initial_data = typeof __SAPPER__ !== 'undefined' && __SAPPER__;

let ready = false;
let root_component;
let current_token;
let root_preloaded;
let current_branch = [];
let current_query = '{}';

const stores = {
	page: writable({}),
	preloading: writable(null),
	session: writable(initial_data && initial_data.session)
};

let $session;
let session_dirty;

stores.session.subscribe(async value => {
	$session = value;

	if (!ready) return;
	session_dirty = true;

	const target = select_target(new URL(location.href));

	const token = current_token = {};
	const { redirect, props, branch } = await hydrate_target(target);
	if (token !== current_token) return; // a secondary navigation happened while we were loading

	await render(redirect, branch, props, target.page);
});

let prefetching


 = null;
function set_prefetching(href, promise) {
	prefetching = { href, promise };
}

let target;
function set_target(element) {
	target = element;
}

let uid = 1;
function set_uid(n) {
	uid = n;
}

let cid;
function set_cid(n) {
	cid = n;
}

const _history = typeof history !== 'undefined' ? history : {
	pushState: (state, title, href) => {},
	replaceState: (state, title, href) => {},
	scrollRestoration: ''
};

const scroll_history = {};

function extract_query(search) {
	const query = Object.create(null);
	if (search.length > 0) {
		search.slice(1).split('&').forEach(searchParam => {
			let [, key, value = ''] = /([^=]*)(?:=(.*))?/.exec(decodeURIComponent(searchParam.replace(/\+/g, ' ')));
			if (typeof query[key] === 'string') query[key] = [query[key]];
			if (typeof query[key] === 'object') (query[key] ).push(value);
			else query[key] = value;
		});
	}
	return query;
}

function select_target(url) {
	if (url.origin !== location.origin) return null;
	if (!url.pathname.startsWith(initial_data.baseUrl)) return null;

	let path = url.pathname.slice(initial_data.baseUrl.length);

	if (path === '') {
		path = '/';
	}

	// avoid accidental clashes between server routes and page routes
	if (ignore.some(pattern => pattern.test(path))) return;

	for (let i = 0; i < routes.length; i += 1) {
		const route = routes[i];

		const match = route.pattern.exec(path);

		if (match) {
			const query = extract_query(url.search);
			const part = route.parts[route.parts.length - 1];
			const params = part.params ? part.params(match) : {};

			const page = { host: location.host, path, query, params };

			return { href: url.href, route, match, page };
		}
	}
}

function handle_error(url) {
	const { host, pathname, search } = location;
	const { session, preloaded, status, error } = initial_data;

	if (!root_preloaded) {
		root_preloaded = preloaded && preloaded[0];
	}

	const props = {
		error,
		status,
		session,
		level0: {
			props: root_preloaded
		},
		level1: {
			props: {
				status,
				error
			},
			component: Error$1
		},
		segments: preloaded

	};
	const query = extract_query(search);
	render(null, [], props, { host, path: pathname, query, params: {} });
}

function scroll_state() {
	return {
		x: pageXOffset,
		y: pageYOffset
	};
}

async function navigate(target, id, noscroll, hash) {
	if (id) {
		// popstate or initial navigation
		cid = id;
	} else {
		const current_scroll = scroll_state();

		// clicked on a link. preserve scroll state
		scroll_history[cid] = current_scroll;

		id = cid = ++uid;
		scroll_history[cid] = noscroll ? current_scroll : { x: 0, y: 0 };
	}

	cid = id;

	if (root_component) stores.preloading.set(true);

	const loaded = prefetching && prefetching.href === target.href ?
		prefetching.promise :
		hydrate_target(target);

	prefetching = null;

	const token = current_token = {};
	const { redirect, props, branch } = await loaded;
	if (token !== current_token) return; // a secondary navigation happened while we were loading

	await render(redirect, branch, props, target.page);
	if (document.activeElement) document.activeElement.blur();

	if (!noscroll) {
		let scroll = scroll_history[id];

		if (hash) {
			// scroll is an element id (from a hash), we need to compute y.
			const deep_linked = document.getElementById(hash.slice(1));

			if (deep_linked) {
				scroll = {
					x: 0,
					y: deep_linked.getBoundingClientRect().top
				};
			}
		}

		scroll_history[cid] = scroll;
		if (scroll) scrollTo(scroll.x, scroll.y);
	}
}

async function render(redirect, branch, props, page) {
	if (redirect) return goto(redirect.location, { replaceState: true });

	stores.page.set(page);
	stores.preloading.set(false);

	if (root_component) {
		root_component.$set(props);
	} else {
		props.stores = {
			page: { subscribe: stores.page.subscribe },
			preloading: { subscribe: stores.preloading.subscribe },
			session: stores.session
		};
		props.level0 = {
			props: await root_preloaded
		};

		// first load — remove SSR'd <head> contents
		const start = document.querySelector('#sapper-head-start');
		const end = document.querySelector('#sapper-head-end');

		if (start && end) {
			while (start.nextSibling !== end) detach(start.nextSibling);
			detach(start);
			detach(end);
		}

		root_component = new App({
			target,
			props,
			hydrate: true
		});
	}

	current_branch = branch;
	current_query = JSON.stringify(page.query);
	ready = true;
	session_dirty = false;
}

function part_changed(i, segment, match, stringified_query) {
	// TODO only check query string changes for preload functions
	// that do in fact depend on it (using static analysis or
	// runtime instrumentation)
	if (stringified_query !== current_query) return true;

	const previous = current_branch[i];

	if (!previous) return false;
	if (segment !== previous.segment) return true;
	if (previous.match) {
		if (JSON.stringify(previous.match.slice(1, i + 2)) !== JSON.stringify(match.slice(1, i + 2))) {
			return true;
		}
	}
}

async function hydrate_target(target)



 {
	const { route, page } = target;
	const segments = page.path.split('/').filter(Boolean);

	let redirect = null;

	const props = { error: null, status: 200, segments: [segments[0]] };

	const preload_context = {
		fetch: (url, opts) => fetch(url, opts),
		redirect: (statusCode, location) => {
			if (redirect && (redirect.statusCode !== statusCode || redirect.location !== location)) {
				throw new Error(`Conflicting redirects`);
			}
			redirect = { statusCode, location };
		},
		error: (status, error) => {
			props.error = typeof error === 'string' ? new Error(error) : error;
			props.status = status;
		}
	};

	if (!root_preloaded) {
		root_preloaded = initial_data.preloaded[0] || preload.call(preload_context, {
			host: page.host,
			path: page.path,
			query: page.query,
			params: {}
		}, $session);
	}

	let branch;
	let l = 1;

	try {
		const stringified_query = JSON.stringify(page.query);
		const match = route.pattern.exec(page.path);

		let segment_dirty = false;

		branch = await Promise.all(route.parts.map(async (part, i) => {
			const segment = segments[i];

			if (part_changed(i, segment, match, stringified_query)) segment_dirty = true;

			props.segments[l] = segments[i + 1]; // TODO make this less confusing
			if (!part) return { segment };

			const j = l++;

			if (!session_dirty && !segment_dirty && current_branch[i] && current_branch[i].part === part.i) {
				return current_branch[i];
			}

			segment_dirty = false;

			const { default: component, preload } = await load_component(components[part.i]);

			let preloaded;
			if (ready || !initial_data.preloaded[i + 1]) {
				preloaded = preload
					? await preload.call(preload_context, {
						host: page.host,
						path: page.path,
						query: page.query,
						params: part.params ? part.params(target.match) : {}
					}, $session)
					: {};
			} else {
				preloaded = initial_data.preloaded[i + 1];
			}

			return (props[`level${j}`] = { component, props: preloaded, segment, match, part: part.i });
		}));
	} catch (error) {
		props.error = error;
		props.status = 500;
		branch = [];
	}

	return { redirect, props, branch };
}

function load_css(chunk) {
	const href = `client/${chunk}`;
	if (document.querySelector(`link[href="${href}"]`)) return;

	return new Promise((fulfil, reject) => {
		const link = document.createElement('link');
		link.rel = 'stylesheet';
		link.href = href;

		link.onload = () => fulfil();
		link.onerror = reject;

		document.head.appendChild(link);
	});
}

function load_component(component)


 {
	// TODO this is temporary — once placeholders are
	// always rewritten, scratch the ternary
	const promises = (typeof component.css === 'string' ? [] : component.css.map(load_css));
	promises.unshift(component.js());
	return Promise.all(promises).then(values => values[0]);
}

function detach(node) {
	node.parentNode.removeChild(node);
}

function prefetch(href) {
	const target = select_target(new URL(href, document.baseURI));

	if (target) {
		if (!prefetching || href !== prefetching.href) {
			set_prefetching(href, hydrate_target(target));
		}

		return prefetching.promise;
	}
}

function start(opts

) {
	if ('scrollRestoration' in _history) {
		_history.scrollRestoration = 'manual';
	}

	set_target(opts.target);

	addEventListener('click', handle_click);
	addEventListener('popstate', handle_popstate);

	// prefetch
	addEventListener('touchstart', trigger_prefetch);
	addEventListener('mousemove', handle_mousemove);

	return Promise.resolve().then(() => {
		const { hash, href } = location;

		_history.replaceState({ id: uid }, '', href);

		const url = new URL(location.href);

		if (initial_data.error) return handle_error();

		const target = select_target(url);
		if (target) return navigate(target, uid, true, hash);
	});
}

let mousemove_timeout;

function handle_mousemove(event) {
	clearTimeout(mousemove_timeout);
	mousemove_timeout = setTimeout(() => {
		trigger_prefetch(event);
	}, 20);
}

function trigger_prefetch(event) {
	const a = find_anchor(event.target);
	if (!a || a.rel !== 'prefetch') return;

	prefetch(a.href);
}

function handle_click(event) {
	// Adapted from https://github.com/visionmedia/page.js
	// MIT license https://github.com/visionmedia/page.js#license
	if (which(event) !== 1) return;
	if (event.metaKey || event.ctrlKey || event.shiftKey) return;
	if (event.defaultPrevented) return;

	const a = find_anchor(event.target);
	if (!a) return;

	if (!a.href) return;

	// check if link is inside an svg
	// in this case, both href and target are always inside an object
	const svg = typeof a.href === 'object' && a.href.constructor.name === 'SVGAnimatedString';
	const href = String(svg ? (a).href.baseVal : a.href);

	if (href === location.href) {
		if (!location.hash) event.preventDefault();
		return;
	}

	// Ignore if tag has
	// 1. 'download' attribute
	// 2. rel='external' attribute
	if (a.hasAttribute('download') || a.getAttribute('rel') === 'external') return;

	// Ignore if <a> has a target
	if (svg ? (a).target.baseVal : a.target) return;

	const url = new URL(href);

	// Don't handle hash changes
	if (url.pathname === location.pathname && url.search === location.search) return;

	const target = select_target(url);
	if (target) {
		const noscroll = a.hasAttribute('sapper-noscroll');
		navigate(target, null, noscroll, url.hash);
		event.preventDefault();
		_history.pushState({ id: cid }, '', url.href);
	}
}

function which(event) {
	return event.which === null ? event.button : event.which;
}

function find_anchor(node) {
	while (node && node.nodeName.toUpperCase() !== 'A') node = node.parentNode; // SVG <a> elements have a lowercase name
	return node;
}

function handle_popstate(event) {
	scroll_history[cid] = scroll_state();

	if (event.state) {
		const url = new URL(location.href);
		const target = select_target(url);
		if (target) {
			navigate(target, event.state.id);
		} else {
			location.href = location.href;
		}
	} else {
		// hashchange
		set_uid(uid + 1);
		set_cid(uid);
		_history.replaceState({ id: cid }, '', location.href);
	}
}

const stores$1 = () => getContext(CONTEXT_KEY);

export { stores$1 as a, goto as g, start as s };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,

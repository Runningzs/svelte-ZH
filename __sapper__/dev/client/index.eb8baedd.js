import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, n as noop, q as create_slot, o as onMount, e as element, c as claim_element, a as children, b as detach_dev, f as attr_dev, h as add_location, j as insert_dev, C as get_slot_changes, D as get_slot_context, x as transition_in, y as transition_out, V as binding_callbacks, w as mount_component, z as destroy_component, l as space, p as claim_space, k as append_dev, m as empty, A as group_outros, B as check_outros, E as text, F as claim_text, g as set_style } from './index.4e52d202.js';
import './index.ad9ca859.js';
import { S as Section, H as Hero, B as Blurb } from './index.abf9c6bd.js';
import './Repl.f1ddc62a.js';
import './examples.cd1fcc82.js';
import './InputOutputToggle.cf9a1ce1.js';
import { R as ReplWidget } from './ReplWidget.9e27fb73.js';

/* src\routes\_components\Contributors.svelte generated by Svelte v3.12.0 */

function create_fragment(ctx) {
	const block = {
		c: noop,
		l: noop,
		m: noop,
		p: noop,
		i: noop,
		o: noop,
		d: noop
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_fragment.name, type: "component", source: "", ctx });
	return block;
}

class Contributors extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, null, create_fragment, safe_not_equal, []);
		dispatch_dev("SvelteRegisterComponent", { component: this, tagName: "Contributors", options, id: create_fragment.name });
	}
}

/* src\components\IntersectionObserver.svelte generated by Svelte v3.12.0 */

const file = "src\\components\\IntersectionObserver.svelte";

const get_default_slot_changes = ({ intersecting }) => ({ intersecting: intersecting });
const get_default_slot_context = ({ intersecting }) => ({ intersecting: intersecting });

function create_fragment$1(ctx) {
	var div, current;

	const default_slot_template = ctx.$$slots.default;
	const default_slot = create_slot(default_slot_template, ctx, get_default_slot_context);

	const block = {
		c: function create() {
			div = element("div");

			if (default_slot) default_slot.c();
			this.h();
		},

		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true }, false);
			var div_nodes = children(div);

			if (default_slot) default_slot.l(div_nodes);
			div_nodes.forEach(detach_dev);
			this.h();
		},

		h: function hydrate() {
			attr_dev(div, "class", "svelte-12fpxpc");
			add_location(div, file, 56, 0, 1219);
		},

		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);

			if (default_slot) {
				default_slot.m(div, null);
			}

			ctx.div_binding(div);
			current = true;
		},

		p: function update(changed, ctx) {
			if (default_slot && default_slot.p && (changed.$$scope || changed.intersecting)) {
				default_slot.p(
					get_slot_changes(default_slot_template, ctx, changed, get_default_slot_changes),
					get_slot_context(default_slot_template, ctx, get_default_slot_context)
				);
			}
		},

		i: function intro(local) {
			if (current) return;
			transition_in(default_slot, local);
			current = true;
		},

		o: function outro(local) {
			transition_out(default_slot, local);
			current = false;
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(div);
			}

			if (default_slot) default_slot.d(detaching);
			ctx.div_binding(null);
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_fragment$1.name, type: "component", source: "", ctx });
	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { once = false, top = 0, bottom = 0, left = 0, right = 0 } = $$props;

	let intersecting = false;
	let container;

	onMount(() => {
		if (typeof IntersectionObserver !== 'undefined') {
			const rootMargin = `${bottom}px ${left}px ${top}px ${right}px`;

			const observer = new IntersectionObserver(entries => {
				$$invalidate('intersecting', intersecting = entries[0].isIntersecting);
				if (intersecting && once) {
					observer.unobserve(container);
				}
			}, {
				rootMargin
			});

			observer.observe(container);
			return () => observer.unobserve(container);
		}

		function handler() {
			const bcr = container.getBoundingClientRect();

			$$invalidate('intersecting', intersecting = (
				(bcr.bottom + bottom) > 0 &&
				(bcr.right + right) > 0 &&
				(bcr.top - top) < window.innerHeight &&
				(bcr.left - left) < window.innerWidth
			));

			if (intersecting && once) {
				window.removeEventListener('scroll', handler);
			}
		}

		window.addEventListener('scroll', handler);
		return () => window.removeEventListener('scroll', handler);
	});

	const writable_props = ['once', 'top', 'bottom', 'left', 'right'];
	Object.keys($$props).forEach(key => {
		if (!writable_props.includes(key) && !key.startsWith('$$')) console.warn(`<IntersectionObserver> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;

	function div_binding($$value) {
		binding_callbacks[$$value ? 'unshift' : 'push'](() => {
			$$invalidate('container', container = $$value);
		});
	}

	$$self.$set = $$props => {
		if ('once' in $$props) $$invalidate('once', once = $$props.once);
		if ('top' in $$props) $$invalidate('top', top = $$props.top);
		if ('bottom' in $$props) $$invalidate('bottom', bottom = $$props.bottom);
		if ('left' in $$props) $$invalidate('left', left = $$props.left);
		if ('right' in $$props) $$invalidate('right', right = $$props.right);
		if ('$$scope' in $$props) $$invalidate('$$scope', $$scope = $$props.$$scope);
	};

	$$self.$capture_state = () => {
		return { once, top, bottom, left, right, intersecting, container };
	};

	$$self.$inject_state = $$props => {
		if ('once' in $$props) $$invalidate('once', once = $$props.once);
		if ('top' in $$props) $$invalidate('top', top = $$props.top);
		if ('bottom' in $$props) $$invalidate('bottom', bottom = $$props.bottom);
		if ('left' in $$props) $$invalidate('left', left = $$props.left);
		if ('right' in $$props) $$invalidate('right', right = $$props.right);
		if ('intersecting' in $$props) $$invalidate('intersecting', intersecting = $$props.intersecting);
		if ('container' in $$props) $$invalidate('container', container = $$props.container);
	};

	return {
		once,
		top,
		bottom,
		left,
		right,
		intersecting,
		container,
		div_binding,
		$$slots,
		$$scope
	};
}

class IntersectionObserver_1 extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment$1, safe_not_equal, ["once", "top", "bottom", "left", "right"]);
		dispatch_dev("SvelteRegisterComponent", { component: this, tagName: "IntersectionObserver_1", options, id: create_fragment$1.name });
	}

	get once() {
		throw new Error("<IntersectionObserver>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set once(value) {
		throw new Error("<IntersectionObserver>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get top() {
		throw new Error("<IntersectionObserver>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set top(value) {
		throw new Error("<IntersectionObserver>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get bottom() {
		throw new Error("<IntersectionObserver>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set bottom(value) {
		throw new Error("<IntersectionObserver>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get left() {
		throw new Error("<IntersectionObserver>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set left(value) {
		throw new Error("<IntersectionObserver>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get right() {
		throw new Error("<IntersectionObserver>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set right(value) {
		throw new Error("<IntersectionObserver>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src\routes\_components\Example.svelte generated by Svelte v3.12.0 */

const file$1 = "src\\routes\\_components\\Example.svelte";

// (45:4) {#if intersecting}
function create_if_block(ctx) {
	var current;

	var replwidget = new ReplWidget({
		props: { example: ctx.id },
		$$inline: true
	});

	const block = {
		c: function create() {
			replwidget.$$.fragment.c();
		},

		l: function claim(nodes) {
			replwidget.$$.fragment.l(nodes);
		},

		m: function mount(target, anchor) {
			mount_component(replwidget, target, anchor);
			current = true;
		},

		p: function update(changed, ctx) {
			var replwidget_changes = {};
			if (changed.id) replwidget_changes.example = ctx.id;
			replwidget.$set(replwidget_changes);
		},

		i: function intro(local) {
			if (current) return;
			transition_in(replwidget.$$.fragment, local);

			current = true;
		},

		o: function outro(local) {
			transition_out(replwidget.$$.fragment, local);
			current = false;
		},

		d: function destroy(detaching) {
			destroy_component(replwidget, detaching);
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_if_block.name, type: "if", source: "(45:4) {#if intersecting}", ctx });
	return block;
}

// (44:3) <IntersectionObserver once let:intersecting top={400}>
function create_default_slot_1(ctx) {
	var if_block_anchor, current;

	var if_block = (ctx.intersecting) && create_if_block(ctx);

	const block = {
		c: function create() {
			if (if_block) if_block.c();
			if_block_anchor = empty();
		},

		l: function claim(nodes) {
			if (if_block) if_block.l(nodes);
			if_block_anchor = empty();
		},

		m: function mount(target, anchor) {
			if (if_block) if_block.m(target, anchor);
			insert_dev(target, if_block_anchor, anchor);
			current = true;
		},

		p: function update(changed, ctx) {
			if (ctx.intersecting) {
				if (if_block) {
					if_block.p(changed, ctx);
					transition_in(if_block, 1);
				} else {
					if_block = create_if_block(ctx);
					if_block.c();
					transition_in(if_block, 1);
					if_block.m(if_block_anchor.parentNode, if_block_anchor);
				}
			} else if (if_block) {
				group_outros();
				transition_out(if_block, 1, 1, () => {
					if_block = null;
				});
				check_outros();
			}
		},

		i: function intro(local) {
			if (current) return;
			transition_in(if_block);
			current = true;
		},

		o: function outro(local) {
			transition_out(if_block);
			current = false;
		},

		d: function destroy(detaching) {
			if (if_block) if_block.d(detaching);

			if (detaching) {
				detach_dev(if_block_anchor);
			}
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_default_slot_1.name, type: "slot", source: "(44:3) <IntersectionObserver once let:intersecting top={400}>", ctx });
	return block;
}

// (39:0) <Section>
function create_default_slot(ctx) {
	var div1, t, div0, current;

	const default_slot_template = ctx.$$slots.default;
	const default_slot = create_slot(default_slot_template, ctx, null);

	var intersectionobserver = new IntersectionObserver_1({
		props: {
		once: true,
		top: 400,
		$$slots: {
		default: [create_default_slot_1, ({ intersecting }) => ({ intersecting })]
	},
		$$scope: { ctx }
	},
		$$inline: true
	});

	const block = {
		c: function create() {
			div1 = element("div");

			if (default_slot) default_slot.c();
			t = space();
			div0 = element("div");
			intersectionobserver.$$.fragment.c();
			this.h();
		},

		l: function claim(nodes) {
			div1 = claim_element(nodes, "DIV", { class: true }, false);
			var div1_nodes = children(div1);

			if (default_slot) default_slot.l(div1_nodes);
			t = claim_space(div1_nodes);

			div0 = claim_element(div1_nodes, "DIV", { class: true }, false);
			var div0_nodes = children(div0);

			intersectionobserver.$$.fragment.l(div0_nodes);
			div0_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			this.h();
		},

		h: function hydrate() {
			attr_dev(div0, "class", "repl-container svelte-12hbupv");
			add_location(div0, file$1, 42, 2, 738);
			attr_dev(div1, "class", "example svelte-12hbupv");
			add_location(div1, file$1, 39, 1, 694);
		},

		m: function mount(target, anchor) {
			insert_dev(target, div1, anchor);

			if (default_slot) {
				default_slot.m(div1, null);
			}

			append_dev(div1, t);
			append_dev(div1, div0);
			mount_component(intersectionobserver, div0, null);
			current = true;
		},

		p: function update(changed, ctx) {
			if (default_slot && default_slot.p && changed.$$scope) {
				default_slot.p(
					get_slot_changes(default_slot_template, ctx, changed, null),
					get_slot_context(default_slot_template, ctx, null)
				);
			}

			var intersectionobserver_changes = {};
			if (changed.$$scope || changed.id) intersectionobserver_changes.$$scope = { changed, ctx };
			intersectionobserver.$set(intersectionobserver_changes);
		},

		i: function intro(local) {
			if (current) return;
			transition_in(default_slot, local);

			transition_in(intersectionobserver.$$.fragment, local);

			current = true;
		},

		o: function outro(local) {
			transition_out(default_slot, local);
			transition_out(intersectionobserver.$$.fragment, local);
			current = false;
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(div1);
			}

			if (default_slot) default_slot.d(detaching);

			destroy_component(intersectionobserver);
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_default_slot.name, type: "slot", source: "(39:0) <Section>", ctx });
	return block;
}

function create_fragment$2(ctx) {
	var current;

	var section = new Section({
		props: {
		$$slots: { default: [create_default_slot] },
		$$scope: { ctx }
	},
		$$inline: true
	});

	const block = {
		c: function create() {
			section.$$.fragment.c();
		},

		l: function claim(nodes) {
			section.$$.fragment.l(nodes);
		},

		m: function mount(target, anchor) {
			mount_component(section, target, anchor);
			current = true;
		},

		p: function update(changed, ctx) {
			var section_changes = {};
			if (changed.$$scope || changed.id) section_changes.$$scope = { changed, ctx };
			section.$set(section_changes);
		},

		i: function intro(local) {
			if (current) return;
			transition_in(section.$$.fragment, local);

			current = true;
		},

		o: function outro(local) {
			transition_out(section.$$.fragment, local);
			current = false;
		},

		d: function destroy(detaching) {
			destroy_component(section, detaching);
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_fragment$2.name, type: "component", source: "", ctx });
	return block;
}

function instance$1($$self, $$props, $$invalidate) {
	

	let { id } = $$props;

	const writable_props = ['id'];
	Object.keys($$props).forEach(key => {
		if (!writable_props.includes(key) && !key.startsWith('$$')) console.warn(`<Example> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;

	$$self.$set = $$props => {
		if ('id' in $$props) $$invalidate('id', id = $$props.id);
		if ('$$scope' in $$props) $$invalidate('$$scope', $$scope = $$props.$$scope);
	};

	$$self.$capture_state = () => {
		return { id };
	};

	$$self.$inject_state = $$props => {
		if ('id' in $$props) $$invalidate('id', id = $$props.id);
	};

	return { id, $$slots, $$scope };
}

class Example extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$1, create_fragment$2, safe_not_equal, ["id"]);
		dispatch_dev("SvelteRegisterComponent", { component: this, tagName: "Example", options, id: create_fragment$2.name });

		const { ctx } = this.$$;
		const props = options.props || {};
		if (ctx.id === undefined && !('id' in props)) {
			console.warn("<Example> was created without expected prop 'id'");
		}
	}

	get id() {
		throw new Error("<Example>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set id(value) {
		throw new Error("<Example>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src\routes\_components\WhosUsingSvelte.svelte generated by Svelte v3.12.0 */

const file$2 = "src\\routes\\_components\\WhosUsingSvelte.svelte";

function create_fragment$3(ctx) {
	var div, a0, img0, t0, a1, img1, t1, a2, img2, t2, a3, img3, t3, a4, img4, t4, a5, img5, t5, a6, img6, t6, a7, img7, t7, a8, img8, t8, a9, img9, t9, a10, picture, source, img10, t10, a11, img11, t11, a12, img12, t12, a13, img13, t13, a14, img14, t14, a15, img15, t15, a16, img16, t16, a17, img17, t17, a18, img18, t18, a19, img19, t19, a20, img20, t20, a21, img21, t21, a22, img22, t22, a23, img23, t23, a24, img24, t24, a25, img25, t25, a26, img26, t26, a27, img27, t27, a28, img28, t28, a29, img29, t29, a30, img30, t30, a31, img31, t31, a32, img32, t32, a33, img33, t33, a34, img34, t34, a35, img35, t35, a36, img36, t36, a37, img37, t37, a38, img38, t38, a39, img39, t39, a40, img40, t40, a41, img41, t41, a42, img42, t42, a43, img43, span0, t43, t44, a44, img44, t45, a45, img45, t46, a46, img46, t47, a47, img47, t48, a48, img48, t49, a49, img49, t50, a50, span1, t51;

	const block = {
		c: function create() {
			div = element("div");
			a0 = element("a");
			img0 = element("img");
			t0 = space();
			a1 = element("a");
			img1 = element("img");
			t1 = space();
			a2 = element("a");
			img2 = element("img");
			t2 = space();
			a3 = element("a");
			img3 = element("img");
			t3 = space();
			a4 = element("a");
			img4 = element("img");
			t4 = space();
			a5 = element("a");
			img5 = element("img");
			t5 = space();
			a6 = element("a");
			img6 = element("img");
			t6 = space();
			a7 = element("a");
			img7 = element("img");
			t7 = space();
			a8 = element("a");
			img8 = element("img");
			t8 = space();
			a9 = element("a");
			img9 = element("img");
			t9 = space();
			a10 = element("a");
			picture = element("picture");
			source = element("source");
			img10 = element("img");
			t10 = space();
			a11 = element("a");
			img11 = element("img");
			t11 = space();
			a12 = element("a");
			img12 = element("img");
			t12 = space();
			a13 = element("a");
			img13 = element("img");
			t13 = space();
			a14 = element("a");
			img14 = element("img");
			t14 = space();
			a15 = element("a");
			img15 = element("img");
			t15 = space();
			a16 = element("a");
			img16 = element("img");
			t16 = space();
			a17 = element("a");
			img17 = element("img");
			t17 = space();
			a18 = element("a");
			img18 = element("img");
			t18 = space();
			a19 = element("a");
			img19 = element("img");
			t19 = space();
			a20 = element("a");
			img20 = element("img");
			t20 = space();
			a21 = element("a");
			img21 = element("img");
			t21 = space();
			a22 = element("a");
			img22 = element("img");
			t22 = space();
			a23 = element("a");
			img23 = element("img");
			t23 = space();
			a24 = element("a");
			img24 = element("img");
			t24 = space();
			a25 = element("a");
			img25 = element("img");
			t25 = space();
			a26 = element("a");
			img26 = element("img");
			t26 = space();
			a27 = element("a");
			img27 = element("img");
			t27 = space();
			a28 = element("a");
			img28 = element("img");
			t28 = space();
			a29 = element("a");
			img29 = element("img");
			t29 = space();
			a30 = element("a");
			img30 = element("img");
			t30 = space();
			a31 = element("a");
			img31 = element("img");
			t31 = space();
			a32 = element("a");
			img32 = element("img");
			t32 = space();
			a33 = element("a");
			img33 = element("img");
			t33 = space();
			a34 = element("a");
			img34 = element("img");
			t34 = space();
			a35 = element("a");
			img35 = element("img");
			t35 = space();
			a36 = element("a");
			img36 = element("img");
			t36 = space();
			a37 = element("a");
			img37 = element("img");
			t37 = space();
			a38 = element("a");
			img38 = element("img");
			t38 = space();
			a39 = element("a");
			img39 = element("img");
			t39 = space();
			a40 = element("a");
			img40 = element("img");
			t40 = space();
			a41 = element("a");
			img41 = element("img");
			t41 = space();
			a42 = element("a");
			img42 = element("img");
			t42 = space();
			a43 = element("a");
			img43 = element("img");
			span0 = element("span");
			t43 = text("Strix Cloud");
			t44 = space();
			a44 = element("a");
			img44 = element("img");
			t45 = space();
			a45 = element("a");
			img45 = element("img");
			t46 = space();
			a46 = element("a");
			img46 = element("img");
			t47 = space();
			a47 = element("a");
			img47 = element("img");
			t48 = space();
			a48 = element("a");
			img48 = element("img");
			t49 = space();
			a49 = element("a");
			img49 = element("img");
			t50 = space();
			a50 = element("a");
			span1 = element("span");
			t51 = text("+ your company?");
			this.h();
		},

		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true }, false);
			var div_nodes = children(div);

			a0 = claim_element(div_nodes, "A", { target: true, rel: true, href: true, class: true }, false);
			var a0_nodes = children(a0);

			img0 = claim_element(a0_nodes, "IMG", { src: true, alt: true, loading: true, class: true }, false);
			var img0_nodes = children(img0);

			img0_nodes.forEach(detach_dev);
			a0_nodes.forEach(detach_dev);
			t0 = claim_space(div_nodes);

			a1 = claim_element(div_nodes, "A", { target: true, rel: true, href: true, class: true }, false);
			var a1_nodes = children(a1);

			img1 = claim_element(a1_nodes, "IMG", { src: true, alt: true, loading: true, class: true }, false);
			var img1_nodes = children(img1);

			img1_nodes.forEach(detach_dev);
			a1_nodes.forEach(detach_dev);
			t1 = claim_space(div_nodes);

			a2 = claim_element(div_nodes, "A", { target: true, rel: true, href: true, class: true }, false);
			var a2_nodes = children(a2);

			img2 = claim_element(a2_nodes, "IMG", { src: true, alt: true, loading: true, class: true }, false);
			var img2_nodes = children(img2);

			img2_nodes.forEach(detach_dev);
			a2_nodes.forEach(detach_dev);
			t2 = claim_space(div_nodes);

			a3 = claim_element(div_nodes, "A", { target: true, rel: true, href: true, class: true }, false);
			var a3_nodes = children(a3);

			img3 = claim_element(a3_nodes, "IMG", { src: true, alt: true, loading: true, class: true }, false);
			var img3_nodes = children(img3);

			img3_nodes.forEach(detach_dev);
			a3_nodes.forEach(detach_dev);
			t3 = claim_space(div_nodes);

			a4 = claim_element(div_nodes, "A", { target: true, rel: true, href: true, class: true }, false);
			var a4_nodes = children(a4);

			img4 = claim_element(a4_nodes, "IMG", { src: true, alt: true, loading: true, class: true }, false);
			var img4_nodes = children(img4);

			img4_nodes.forEach(detach_dev);
			a4_nodes.forEach(detach_dev);
			t4 = claim_space(div_nodes);

			a5 = claim_element(div_nodes, "A", { target: true, rel: true, href: true, class: true }, false);
			var a5_nodes = children(a5);

			img5 = claim_element(a5_nodes, "IMG", { src: true, alt: true, loading: true, class: true }, false);
			var img5_nodes = children(img5);

			img5_nodes.forEach(detach_dev);
			a5_nodes.forEach(detach_dev);
			t5 = claim_space(div_nodes);

			a6 = claim_element(div_nodes, "A", { target: true, rel: true, href: true, class: true }, false);
			var a6_nodes = children(a6);

			img6 = claim_element(a6_nodes, "IMG", { src: true, alt: true, loading: true, class: true }, false);
			var img6_nodes = children(img6);

			img6_nodes.forEach(detach_dev);
			a6_nodes.forEach(detach_dev);
			t6 = claim_space(div_nodes);

			a7 = claim_element(div_nodes, "A", { target: true, rel: true, href: true, style: true, class: true }, false);
			var a7_nodes = children(a7);

			img7 = claim_element(a7_nodes, "IMG", { src: true, alt: true, loading: true, class: true }, false);
			var img7_nodes = children(img7);

			img7_nodes.forEach(detach_dev);
			a7_nodes.forEach(detach_dev);
			t7 = claim_space(div_nodes);

			a8 = claim_element(div_nodes, "A", { target: true, rel: true, href: true, class: true }, false);
			var a8_nodes = children(a8);

			img8 = claim_element(a8_nodes, "IMG", { src: true, alt: true, loading: true, class: true }, false);
			var img8_nodes = children(img8);

			img8_nodes.forEach(detach_dev);
			a8_nodes.forEach(detach_dev);
			t8 = claim_space(div_nodes);

			a9 = claim_element(div_nodes, "A", { target: true, rel: true, href: true, class: true }, false);
			var a9_nodes = children(a9);

			img9 = claim_element(a9_nodes, "IMG", { src: true, alt: true, loading: true, class: true }, false);
			var img9_nodes = children(img9);

			img9_nodes.forEach(detach_dev);
			a9_nodes.forEach(detach_dev);
			t9 = claim_space(div_nodes);

			a10 = claim_element(div_nodes, "A", { target: true, rel: true, href: true, style: true, class: true }, false);
			var a10_nodes = children(a10);

			picture = claim_element(a10_nodes, "PICTURE", { class: true }, false);
			var picture_nodes = children(picture);

			source = claim_element(picture_nodes, "SOURCE", { type: true, srcset: true }, false);
			var source_nodes = children(source);

			source_nodes.forEach(detach_dev);

			img10 = claim_element(picture_nodes, "IMG", { src: true, alt: true, loading: true, class: true }, false);
			var img10_nodes = children(img10);

			img10_nodes.forEach(detach_dev);
			picture_nodes.forEach(detach_dev);
			a10_nodes.forEach(detach_dev);
			t10 = claim_space(div_nodes);

			a11 = claim_element(div_nodes, "A", { target: true, rel: true, href: true, class: true }, false);
			var a11_nodes = children(a11);

			img11 = claim_element(a11_nodes, "IMG", { src: true, alt: true, loading: true, class: true }, false);
			var img11_nodes = children(img11);

			img11_nodes.forEach(detach_dev);
			a11_nodes.forEach(detach_dev);
			t11 = claim_space(div_nodes);

			a12 = claim_element(div_nodes, "A", { target: true, rel: true, href: true, class: true }, false);
			var a12_nodes = children(a12);

			img12 = claim_element(a12_nodes, "IMG", { src: true, alt: true, loading: true, class: true }, false);
			var img12_nodes = children(img12);

			img12_nodes.forEach(detach_dev);
			a12_nodes.forEach(detach_dev);
			t12 = claim_space(div_nodes);

			a13 = claim_element(div_nodes, "A", { target: true, rel: true, href: true, class: true }, false);
			var a13_nodes = children(a13);

			img13 = claim_element(a13_nodes, "IMG", { src: true, alt: true, loading: true, class: true }, false);
			var img13_nodes = children(img13);

			img13_nodes.forEach(detach_dev);
			a13_nodes.forEach(detach_dev);
			t13 = claim_space(div_nodes);

			a14 = claim_element(div_nodes, "A", { target: true, rel: true, href: true, style: true, class: true }, false);
			var a14_nodes = children(a14);

			img14 = claim_element(a14_nodes, "IMG", { src: true, alt: true, loading: true, class: true }, false);
			var img14_nodes = children(img14);

			img14_nodes.forEach(detach_dev);
			a14_nodes.forEach(detach_dev);
			t14 = claim_space(div_nodes);

			a15 = claim_element(div_nodes, "A", { target: true, rel: true, href: true, class: true }, false);
			var a15_nodes = children(a15);

			img15 = claim_element(a15_nodes, "IMG", { src: true, alt: true, loading: true, class: true }, false);
			var img15_nodes = children(img15);

			img15_nodes.forEach(detach_dev);
			a15_nodes.forEach(detach_dev);
			t15 = claim_space(div_nodes);

			a16 = claim_element(div_nodes, "A", { target: true, rel: true, href: true, class: true }, false);
			var a16_nodes = children(a16);

			img16 = claim_element(a16_nodes, "IMG", { src: true, alt: true, loading: true, class: true }, false);
			var img16_nodes = children(img16);

			img16_nodes.forEach(detach_dev);
			a16_nodes.forEach(detach_dev);
			t16 = claim_space(div_nodes);

			a17 = claim_element(div_nodes, "A", { target: true, rel: true, href: true, class: true }, false);
			var a17_nodes = children(a17);

			img17 = claim_element(a17_nodes, "IMG", { src: true, alt: true, loading: true, class: true }, false);
			var img17_nodes = children(img17);

			img17_nodes.forEach(detach_dev);
			a17_nodes.forEach(detach_dev);
			t17 = claim_space(div_nodes);

			a18 = claim_element(div_nodes, "A", { target: true, rel: true, href: true, class: true }, false);
			var a18_nodes = children(a18);

			img18 = claim_element(a18_nodes, "IMG", { src: true, alt: true, loading: true, class: true }, false);
			var img18_nodes = children(img18);

			img18_nodes.forEach(detach_dev);
			a18_nodes.forEach(detach_dev);
			t18 = claim_space(div_nodes);

			a19 = claim_element(div_nodes, "A", { target: true, rel: true, href: true, class: true }, false);
			var a19_nodes = children(a19);

			img19 = claim_element(a19_nodes, "IMG", { src: true, alt: true, loading: true, class: true }, false);
			var img19_nodes = children(img19);

			img19_nodes.forEach(detach_dev);
			a19_nodes.forEach(detach_dev);
			t19 = claim_space(div_nodes);

			a20 = claim_element(div_nodes, "A", { target: true, rel: true, href: true, class: true }, false);
			var a20_nodes = children(a20);

			img20 = claim_element(a20_nodes, "IMG", { src: true, alt: true, loading: true, class: true }, false);
			var img20_nodes = children(img20);

			img20_nodes.forEach(detach_dev);
			a20_nodes.forEach(detach_dev);
			t20 = claim_space(div_nodes);

			a21 = claim_element(div_nodes, "A", { target: true, rel: true, href: true, class: true }, false);
			var a21_nodes = children(a21);

			img21 = claim_element(a21_nodes, "IMG", { src: true, alt: true, loading: true, class: true }, false);
			var img21_nodes = children(img21);

			img21_nodes.forEach(detach_dev);
			a21_nodes.forEach(detach_dev);
			t21 = claim_space(div_nodes);

			a22 = claim_element(div_nodes, "A", { target: true, rel: true, href: true, class: true }, false);
			var a22_nodes = children(a22);

			img22 = claim_element(a22_nodes, "IMG", { src: true, alt: true, loading: true, class: true }, false);
			var img22_nodes = children(img22);

			img22_nodes.forEach(detach_dev);
			a22_nodes.forEach(detach_dev);
			t22 = claim_space(div_nodes);

			a23 = claim_element(div_nodes, "A", { target: true, rel: true, href: true, class: true }, false);
			var a23_nodes = children(a23);

			img23 = claim_element(a23_nodes, "IMG", { src: true, alt: true, loading: true, class: true }, false);
			var img23_nodes = children(img23);

			img23_nodes.forEach(detach_dev);
			a23_nodes.forEach(detach_dev);
			t23 = claim_space(div_nodes);

			a24 = claim_element(div_nodes, "A", { target: true, rel: true, href: true, class: true }, false);
			var a24_nodes = children(a24);

			img24 = claim_element(a24_nodes, "IMG", { src: true, alt: true, loading: true, class: true }, false);
			var img24_nodes = children(img24);

			img24_nodes.forEach(detach_dev);
			a24_nodes.forEach(detach_dev);
			t24 = claim_space(div_nodes);

			a25 = claim_element(div_nodes, "A", { target: true, rel: true, href: true, class: true }, false);
			var a25_nodes = children(a25);

			img25 = claim_element(a25_nodes, "IMG", { src: true, alt: true, loading: true, class: true }, false);
			var img25_nodes = children(img25);

			img25_nodes.forEach(detach_dev);
			a25_nodes.forEach(detach_dev);
			t25 = claim_space(div_nodes);

			a26 = claim_element(div_nodes, "A", { target: true, rel: true, href: true, class: true }, false);
			var a26_nodes = children(a26);

			img26 = claim_element(a26_nodes, "IMG", { src: true, alt: true, loading: true, class: true }, false);
			var img26_nodes = children(img26);

			img26_nodes.forEach(detach_dev);
			a26_nodes.forEach(detach_dev);
			t26 = claim_space(div_nodes);

			a27 = claim_element(div_nodes, "A", { target: true, rel: true, href: true, class: true }, false);
			var a27_nodes = children(a27);

			img27 = claim_element(a27_nodes, "IMG", { src: true, alt: true, loading: true, class: true }, false);
			var img27_nodes = children(img27);

			img27_nodes.forEach(detach_dev);
			a27_nodes.forEach(detach_dev);
			t27 = claim_space(div_nodes);

			a28 = claim_element(div_nodes, "A", { target: true, rel: true, href: true, class: true }, false);
			var a28_nodes = children(a28);

			img28 = claim_element(a28_nodes, "IMG", { src: true, alt: true, loading: true, class: true }, false);
			var img28_nodes = children(img28);

			img28_nodes.forEach(detach_dev);
			a28_nodes.forEach(detach_dev);
			t28 = claim_space(div_nodes);

			a29 = claim_element(div_nodes, "A", { target: true, rel: true, href: true, class: true }, false);
			var a29_nodes = children(a29);

			img29 = claim_element(a29_nodes, "IMG", { src: true, alt: true, loading: true, class: true }, false);
			var img29_nodes = children(img29);

			img29_nodes.forEach(detach_dev);
			a29_nodes.forEach(detach_dev);
			t29 = claim_space(div_nodes);

			a30 = claim_element(div_nodes, "A", { target: true, rel: true, href: true, class: true }, false);
			var a30_nodes = children(a30);

			img30 = claim_element(a30_nodes, "IMG", { src: true, alt: true, loading: true, class: true }, false);
			var img30_nodes = children(img30);

			img30_nodes.forEach(detach_dev);
			a30_nodes.forEach(detach_dev);
			t30 = claim_space(div_nodes);

			a31 = claim_element(div_nodes, "A", { target: true, rel: true, href: true, class: true }, false);
			var a31_nodes = children(a31);

			img31 = claim_element(a31_nodes, "IMG", { src: true, alt: true, loading: true, class: true }, false);
			var img31_nodes = children(img31);

			img31_nodes.forEach(detach_dev);
			a31_nodes.forEach(detach_dev);
			t31 = claim_space(div_nodes);

			a32 = claim_element(div_nodes, "A", { target: true, rel: true, href: true, class: true }, false);
			var a32_nodes = children(a32);

			img32 = claim_element(a32_nodes, "IMG", { src: true, alt: true, loading: true, class: true }, false);
			var img32_nodes = children(img32);

			img32_nodes.forEach(detach_dev);
			a32_nodes.forEach(detach_dev);
			t32 = claim_space(div_nodes);

			a33 = claim_element(div_nodes, "A", { target: true, rel: true, href: true, class: true }, false);
			var a33_nodes = children(a33);

			img33 = claim_element(a33_nodes, "IMG", { src: true, alt: true, loading: true, class: true }, false);
			var img33_nodes = children(img33);

			img33_nodes.forEach(detach_dev);
			a33_nodes.forEach(detach_dev);
			t33 = claim_space(div_nodes);

			a34 = claim_element(div_nodes, "A", { target: true, rel: true, href: true, class: true }, false);
			var a34_nodes = children(a34);

			img34 = claim_element(a34_nodes, "IMG", { src: true, alt: true, loading: true, class: true }, false);
			var img34_nodes = children(img34);

			img34_nodes.forEach(detach_dev);
			a34_nodes.forEach(detach_dev);
			t34 = claim_space(div_nodes);

			a35 = claim_element(div_nodes, "A", { target: true, rel: true, href: true, class: true }, false);
			var a35_nodes = children(a35);

			img35 = claim_element(a35_nodes, "IMG", { src: true, alt: true, loading: true, class: true }, false);
			var img35_nodes = children(img35);

			img35_nodes.forEach(detach_dev);
			a35_nodes.forEach(detach_dev);
			t35 = claim_space(div_nodes);

			a36 = claim_element(div_nodes, "A", { target: true, rel: true, href: true, class: true }, false);
			var a36_nodes = children(a36);

			img36 = claim_element(a36_nodes, "IMG", { src: true, alt: true, loading: true, class: true }, false);
			var img36_nodes = children(img36);

			img36_nodes.forEach(detach_dev);
			a36_nodes.forEach(detach_dev);
			t36 = claim_space(div_nodes);

			a37 = claim_element(div_nodes, "A", { target: true, rel: true, href: true, class: true }, false);
			var a37_nodes = children(a37);

			img37 = claim_element(a37_nodes, "IMG", { src: true, alt: true, loading: true, class: true }, false);
			var img37_nodes = children(img37);

			img37_nodes.forEach(detach_dev);
			a37_nodes.forEach(detach_dev);
			t37 = claim_space(div_nodes);

			a38 = claim_element(div_nodes, "A", { target: true, rel: true, href: true, class: true }, false);
			var a38_nodes = children(a38);

			img38 = claim_element(a38_nodes, "IMG", { src: true, alt: true, loading: true, class: true }, false);
			var img38_nodes = children(img38);

			img38_nodes.forEach(detach_dev);
			a38_nodes.forEach(detach_dev);
			t38 = claim_space(div_nodes);

			a39 = claim_element(div_nodes, "A", { target: true, rel: true, href: true, class: true }, false);
			var a39_nodes = children(a39);

			img39 = claim_element(a39_nodes, "IMG", { src: true, alt: true, loading: true, class: true }, false);
			var img39_nodes = children(img39);

			img39_nodes.forEach(detach_dev);
			a39_nodes.forEach(detach_dev);
			t39 = claim_space(div_nodes);

			a40 = claim_element(div_nodes, "A", { target: true, rel: true, href: true, class: true }, false);
			var a40_nodes = children(a40);

			img40 = claim_element(a40_nodes, "IMG", { src: true, alt: true, loading: true, class: true }, false);
			var img40_nodes = children(img40);

			img40_nodes.forEach(detach_dev);
			a40_nodes.forEach(detach_dev);
			t40 = claim_space(div_nodes);

			a41 = claim_element(div_nodes, "A", { target: true, rel: true, href: true, class: true }, false);
			var a41_nodes = children(a41);

			img41 = claim_element(a41_nodes, "IMG", { src: true, alt: true, loading: true, class: true }, false);
			var img41_nodes = children(img41);

			img41_nodes.forEach(detach_dev);
			a41_nodes.forEach(detach_dev);
			t41 = claim_space(div_nodes);

			a42 = claim_element(div_nodes, "A", { target: true, rel: true, href: true, class: true }, false);
			var a42_nodes = children(a42);

			img42 = claim_element(a42_nodes, "IMG", { src: true, alt: true, loading: true, class: true }, false);
			var img42_nodes = children(img42);

			img42_nodes.forEach(detach_dev);
			a42_nodes.forEach(detach_dev);
			t42 = claim_space(div_nodes);

			a43 = claim_element(div_nodes, "A", { target: true, rel: true, href: true, class: true }, false);
			var a43_nodes = children(a43);

			img43 = claim_element(a43_nodes, "IMG", { src: true, alt: true, loading: true, class: true }, false);
			var img43_nodes = children(img43);

			img43_nodes.forEach(detach_dev);

			span0 = claim_element(a43_nodes, "SPAN", {}, false);
			var span0_nodes = children(span0);

			t43 = claim_text(span0_nodes, "Strix Cloud");
			span0_nodes.forEach(detach_dev);
			a43_nodes.forEach(detach_dev);
			t44 = claim_space(div_nodes);

			a44 = claim_element(div_nodes, "A", { target: true, rel: true, href: true, style: true, class: true }, false);
			var a44_nodes = children(a44);

			img44 = claim_element(a44_nodes, "IMG", { src: true, alt: true, loading: true, class: true }, false);
			var img44_nodes = children(img44);

			img44_nodes.forEach(detach_dev);
			a44_nodes.forEach(detach_dev);
			t45 = claim_space(div_nodes);

			a45 = claim_element(div_nodes, "A", { target: true, rel: true, href: true, class: true }, false);
			var a45_nodes = children(a45);

			img45 = claim_element(a45_nodes, "IMG", { src: true, alt: true, loading: true, class: true }, false);
			var img45_nodes = children(img45);

			img45_nodes.forEach(detach_dev);
			a45_nodes.forEach(detach_dev);
			t46 = claim_space(div_nodes);

			a46 = claim_element(div_nodes, "A", { target: true, rel: true, href: true, class: true }, false);
			var a46_nodes = children(a46);

			img46 = claim_element(a46_nodes, "IMG", { src: true, alt: true, loading: true, class: true }, false);
			var img46_nodes = children(img46);

			img46_nodes.forEach(detach_dev);
			a46_nodes.forEach(detach_dev);
			t47 = claim_space(div_nodes);

			a47 = claim_element(div_nodes, "A", { target: true, rel: true, href: true, class: true }, false);
			var a47_nodes = children(a47);

			img47 = claim_element(a47_nodes, "IMG", { src: true, alt: true, loading: true, class: true }, false);
			var img47_nodes = children(img47);

			img47_nodes.forEach(detach_dev);
			a47_nodes.forEach(detach_dev);
			t48 = claim_space(div_nodes);

			a48 = claim_element(div_nodes, "A", { target: true, rel: true, href: true, class: true }, false);
			var a48_nodes = children(a48);

			img48 = claim_element(a48_nodes, "IMG", { src: true, alt: true, loading: true, class: true }, false);
			var img48_nodes = children(img48);

			img48_nodes.forEach(detach_dev);
			a48_nodes.forEach(detach_dev);
			t49 = claim_space(div_nodes);

			a49 = claim_element(div_nodes, "A", { target: true, rel: true, href: true, class: true }, false);
			var a49_nodes = children(a49);

			img49 = claim_element(a49_nodes, "IMG", { src: true, alt: true, loading: true, class: true }, false);
			var img49_nodes = children(img49);

			img49_nodes.forEach(detach_dev);
			a49_nodes.forEach(detach_dev);
			t50 = claim_space(div_nodes);

			a50 = claim_element(div_nodes, "A", { target: true, rel: true, href: true, class: true }, false);
			var a50_nodes = children(a50);

			span1 = claim_element(a50_nodes, "SPAN", {}, false);
			var span1_nodes = children(span1);

			t51 = claim_text(span1_nodes, "+ your company?");
			span1_nodes.forEach(detach_dev);
			a50_nodes.forEach(detach_dev);
			div_nodes.forEach(detach_dev);
			this.h();
		},

		h: function hydrate() {
			attr_dev(img0, "src", "organisations/1password.png");
			attr_dev(img0, "alt", "1Password logo");
			attr_dev(img0, "loading", "lazy");
			attr_dev(img0, "class", "svelte-1rp6isq");
			add_location(img0, file$2, 47, 64, 905);
			attr_dev(a0, "target", "_blank");
			attr_dev(a0, "rel", "noopener");
			attr_dev(a0, "href", "https://1password.com");
			attr_dev(a0, "class", "svelte-1rp6isq");
			add_location(a0, file$2, 47, 1, 842);
			attr_dev(img1, "src", "organisations/ablab.svg");
			attr_dev(img1, "alt", "ABLab logo");
			attr_dev(img1, "loading", "lazy");
			attr_dev(img1, "class", "svelte-1rp6isq");
			add_location(img1, file$2, 48, 59, 1045);
			attr_dev(a1, "target", "_blank");
			attr_dev(a1, "rel", "noopener");
			attr_dev(a1, "href", "https://ablab.de");
			attr_dev(a1, "class", "svelte-1rp6isq");
			add_location(a1, file$2, 48, 1, 987);
			attr_dev(img2, "src", "organisations/absoluteweb.svg");
			attr_dev(img2, "alt", "Absolute Web logo");
			attr_dev(img2, "loading", "lazy");
			attr_dev(img2, "class", "svelte-1rp6isq");
			add_location(img2, file$2, 49, 66, 1184);
			attr_dev(a2, "target", "_blank");
			attr_dev(a2, "rel", "noopener");
			attr_dev(a2, "href", "https://absoluteweb.com");
			attr_dev(a2, "class", "svelte-1rp6isq");
			add_location(a2, file$2, 49, 1, 1119);
			attr_dev(img3, "src", "organisations/bekchy.png");
			attr_dev(img3, "alt", "Bekchy logo");
			attr_dev(img3, "loading", "lazy");
			attr_dev(img3, "class", "svelte-1rp6isq");
			add_location(img3, file$2, 50, 61, 1331);
			attr_dev(a3, "target", "_blank");
			attr_dev(a3, "rel", "noopener");
			attr_dev(a3, "href", "https://bekchy.com");
			attr_dev(a3, "class", "svelte-1rp6isq");
			add_location(a3, file$2, 50, 1, 1271);
			attr_dev(img4, "src", "organisations/beyonk.svg");
			attr_dev(img4, "alt", "Beyonk logo");
			attr_dev(img4, "loading", "lazy");
			attr_dev(img4, "class", "svelte-1rp6isq");
			add_location(img4, file$2, 51, 61, 1467);
			attr_dev(a4, "target", "_blank");
			attr_dev(a4, "rel", "noopener");
			attr_dev(a4, "href", "https://beyonk.com");
			attr_dev(a4, "class", "svelte-1rp6isq");
			add_location(a4, file$2, 51, 1, 1407);
			attr_dev(img5, "src", "organisations/buydotstar.svg");
			attr_dev(img5, "alt", "buy.* logo");
			attr_dev(img5, "loading", "lazy");
			attr_dev(img5, "class", "svelte-1rp6isq");
			add_location(img5, file$2, 52, 65, 1607);
			attr_dev(a5, "target", "_blank");
			attr_dev(a5, "rel", "noopener");
			attr_dev(a5, "href", "https://buydotstar.com");
			attr_dev(a5, "class", "svelte-1rp6isq");
			add_location(a5, file$2, 52, 1, 1543);
			attr_dev(img6, "src", "organisations/cashfree.svg");
			attr_dev(img6, "alt", "Cashfree logo");
			attr_dev(img6, "loading", "lazy");
			attr_dev(img6, "class", "svelte-1rp6isq");
			add_location(img6, file$2, 53, 64, 1749);
			attr_dev(a6, "target", "_blank");
			attr_dev(a6, "rel", "noopener");
			attr_dev(a6, "href", "https://cashfree.com/");
			attr_dev(a6, "class", "svelte-1rp6isq");
			add_location(a6, file$2, 53, 1, 1686);
			attr_dev(img7, "src", "organisations/chess.svg");
			attr_dev(img7, "alt", "Chess.com logo");
			attr_dev(img7, "loading", "lazy");
			attr_dev(img7, "class", "svelte-1rp6isq");
			add_location(img7, file$2, 54, 101, 1929);
			attr_dev(a7, "target", "_blank");
			attr_dev(a7, "rel", "noopener");
			attr_dev(a7, "href", "https://chess.com");
			set_style(a7, "background-color", "rgb(49,46,43)");
			attr_dev(a7, "class", "svelte-1rp6isq");
			add_location(a7, file$2, 54, 1, 1829);
			attr_dev(img8, "src", "organisations/comigo.svg");
			attr_dev(img8, "alt", "Comigo logo");
			attr_dev(img8, "loading", "lazy");
			attr_dev(img8, "class", "svelte-1rp6isq");
			add_location(img8, file$2, 55, 69, 2075);
			attr_dev(a8, "target", "_blank");
			attr_dev(a8, "rel", "noopener");
			attr_dev(a8, "href", "https://comigosaude.com.br");
			attr_dev(a8, "class", "svelte-1rp6isq");
			add_location(a8, file$2, 55, 1, 2007);
			attr_dev(img9, "src", "organisations/datawrapper.svg");
			attr_dev(img9, "alt", "Datawrapper logo");
			attr_dev(img9, "loading", "lazy");
			attr_dev(img9, "class", "svelte-1rp6isq");
			add_location(img9, file$2, 56, 65, 2215);
			attr_dev(a9, "target", "_blank");
			attr_dev(a9, "rel", "noopener");
			attr_dev(a9, "href", "https://datawrapper.de");
			attr_dev(a9, "class", "svelte-1rp6isq");
			add_location(a9, file$2, 56, 1, 2151);
			attr_dev(source, "type", "image/webp");
			attr_dev(source, "srcset", "organisations/dbnomics.webp");
			add_location(source, file$2, 57, 116, 2416);
			attr_dev(img10, "src", "organisations/dbnomics.jpg");
			attr_dev(img10, "alt", "DBNomics logo");
			attr_dev(img10, "loading", "lazy");
			attr_dev(img10, "class", "svelte-1rp6isq");
			add_location(img10, file$2, 57, 179, 2479);
			attr_dev(picture, "class", "svelte-1rp6isq");
			add_location(picture, file$2, 57, 107, 2407);
			attr_dev(a10, "target", "_blank");
			attr_dev(a10, "rel", "noopener");
			attr_dev(a10, "href", "https://db.nomics.world");
			set_style(a10, "background-color", "rgb(15,39,47)");
			attr_dev(a10, "class", "svelte-1rp6isq");
			add_location(a10, file$2, 57, 1, 2301);
			attr_dev(img11, "src", "organisations/deck.svg");
			attr_dev(img11, "alt", "Deck logo");
			attr_dev(img11, "loading", "lazy");
			attr_dev(img11, "class", "svelte-1rp6isq");
			add_location(img11, file$2, 58, 58, 2626);
			attr_dev(a11, "target", "_blank");
			attr_dev(a11, "rel", "noopener");
			attr_dev(a11, "href", "https://deck.nl");
			attr_dev(a11, "class", "svelte-1rp6isq");
			add_location(a11, file$2, 58, 1, 2569);
			attr_dev(img12, "src", "organisations/dextra.png");
			attr_dev(img12, "alt", "Dextra logo");
			attr_dev(img12, "loading", "lazy");
			attr_dev(img12, "class", "svelte-1rp6isq");
			add_location(img12, file$2, 59, 68, 2765);
			attr_dev(a12, "target", "_blank");
			attr_dev(a12, "rel", "noopener");
			attr_dev(a12, "href", "https://dextra.com.br/pt/");
			attr_dev(a12, "class", "svelte-1rp6isq");
			add_location(a12, file$2, 59, 1, 2698);
			attr_dev(img13, "src", "organisations/entriwise.png");
			attr_dev(img13, "alt", "Entriwise logo");
			attr_dev(img13, "loading", "lazy");
			attr_dev(img13, "class", "svelte-1rp6isq");
			add_location(img13, file$2, 60, 69, 2909);
			attr_dev(a13, "target", "_blank");
			attr_dev(a13, "rel", "noopener");
			attr_dev(a13, "href", "https://www.entriwise.com/");
			attr_dev(a13, "class", "svelte-1rp6isq");
			add_location(a13, file$2, 60, 1, 2841);
			attr_dev(img14, "src", "organisations/entur.svg");
			attr_dev(img14, "alt", "Entur logo");
			attr_dev(img14, "loading", "lazy");
			attr_dev(img14, "class", "svelte-1rp6isq");
			add_location(img14, file$2, 61, 120, 3110);
			attr_dev(a14, "target", "_blank");
			attr_dev(a14, "rel", "noopener");
			attr_dev(a14, "href", "https://www.entur.org/about-entur/");
			set_style(a14, "background-color", "rgb(25, 25, 84)");
			attr_dev(a14, "class", "svelte-1rp6isq");
			add_location(a14, file$2, 61, 1, 2991);
			attr_dev(img15, "src", "organisations/farmbox.svg");
			attr_dev(img15, "alt", "Farmbox logo");
			attr_dev(img15, "loading", "lazy");
			attr_dev(img15, "class", "svelte-1rp6isq");
			add_location(img15, file$2, 62, 62, 3245);
			attr_dev(a15, "target", "_blank");
			attr_dev(a15, "rel", "noopener");
			attr_dev(a15, "href", "https://farmbox.ae/");
			attr_dev(a15, "class", "svelte-1rp6isq");
			add_location(a15, file$2, 62, 1, 3184);
			attr_dev(img16, "src", "organisations/from-now-on.png");
			attr_dev(img16, "alt", "From-Now-On logo");
			attr_dev(img16, "loading", "lazy");
			attr_dev(img16, "class", "svelte-1rp6isq");
			add_location(img16, file$2, 63, 66, 3388);
			attr_dev(a16, "target", "_blank");
			attr_dev(a16, "rel", "noopener");
			attr_dev(a16, "href", "https://from-now-on.com");
			attr_dev(a16, "class", "svelte-1rp6isq");
			add_location(a16, file$2, 63, 1, 3323);
			attr_dev(img17, "src", "organisations/fusioncharts.svg");
			attr_dev(img17, "alt", "FusionCharts logo");
			attr_dev(img17, "loading", "lazy");
			attr_dev(img17, "class", "svelte-1rp6isq");
			add_location(img17, file$2, 64, 67, 3540);
			attr_dev(a17, "target", "_blank");
			attr_dev(a17, "rel", "noopener");
			attr_dev(a17, "href", "https://fusioncharts.com");
			attr_dev(a17, "class", "svelte-1rp6isq");
			add_location(a17, file$2, 64, 1, 3474);
			attr_dev(img18, "src", "organisations/godaddy.svg");
			attr_dev(img18, "alt", "GoDaddy logo");
			attr_dev(img18, "loading", "lazy");
			attr_dev(img18, "class", "svelte-1rp6isq");
			add_location(img18, file$2, 65, 62, 3689);
			attr_dev(a18, "target", "_blank");
			attr_dev(a18, "rel", "noopener");
			attr_dev(a18, "href", "https://godaddy.com");
			attr_dev(a18, "class", "svelte-1rp6isq");
			add_location(a18, file$2, 65, 1, 3628);
			attr_dev(img19, "src", "organisations/grainger.svg");
			attr_dev(img19, "alt", "Grainger logo");
			attr_dev(img19, "loading", "lazy");
			attr_dev(img19, "class", "svelte-1rp6isq");
			add_location(img19, file$2, 66, 67, 3833);
			attr_dev(a19, "target", "_blank");
			attr_dev(a19, "rel", "noopener");
			attr_dev(a19, "href", "https://www.grainger.com");
			attr_dev(a19, "class", "svelte-1rp6isq");
			add_location(a19, file$2, 66, 1, 3767);
			attr_dev(img20, "src", "organisations/healthtree.png");
			attr_dev(img20, "alt", "HealthTree logo");
			attr_dev(img20, "loading", "lazy");
			attr_dev(img20, "class", "svelte-1rp6isq");
			add_location(img20, file$2, 67, 65, 3977);
			attr_dev(a20, "target", "_blank");
			attr_dev(a20, "rel", "noopener");
			attr_dev(a20, "href", "http://healthtree.org/");
			attr_dev(a20, "class", "svelte-1rp6isq");
			add_location(a20, file$2, 67, 1, 3913);
			attr_dev(img21, "src", "organisations/iota.svg");
			attr_dev(img21, "alt", "IOTA logo");
			attr_dev(img21, "loading", "lazy");
			attr_dev(img21, "class", "svelte-1rp6isq");
			add_location(img21, file$2, 68, 59, 4119);
			attr_dev(a21, "target", "_blank");
			attr_dev(a21, "rel", "noopener");
			attr_dev(a21, "href", "https://iota.org");
			attr_dev(a21, "class", "svelte-1rp6isq");
			add_location(a21, file$2, 68, 1, 4061);
			attr_dev(img22, "src", "organisations/itslearning.svg");
			attr_dev(img22, "alt", "itslearning logo");
			attr_dev(img22, "loading", "lazy");
			attr_dev(img22, "class", "svelte-1rp6isq");
			add_location(img22, file$2, 69, 66, 4256);
			attr_dev(a22, "target", "_blank");
			attr_dev(a22, "rel", "noopener");
			attr_dev(a22, "href", "https://itslearning.com");
			attr_dev(a22, "class", "svelte-1rp6isq");
			add_location(a22, file$2, 69, 1, 4191);
			attr_dev(img23, "src", "organisations/jacoux.png");
			attr_dev(img23, "alt", "Jacoux logo");
			attr_dev(img23, "loading", "lazy");
			attr_dev(img23, "class", "svelte-1rp6isq");
			add_location(img23, file$2, 70, 61, 4402);
			attr_dev(a23, "target", "_blank");
			attr_dev(a23, "rel", "noopener");
			attr_dev(a23, "href", "https://jacoux.com");
			attr_dev(a23, "class", "svelte-1rp6isq");
			add_location(a23, file$2, 70, 1, 4342);
			attr_dev(img24, "src", "organisations/jingmnt.png");
			attr_dev(img24, "alt", "Jingmnt logo");
			attr_dev(img24, "loading", "lazy");
			attr_dev(img24, "class", "svelte-1rp6isq");
			add_location(img24, file$2, 71, 64, 4541);
			attr_dev(a24, "target", "_blank");
			attr_dev(a24, "rel", "noopener");
			attr_dev(a24, "href", "https://jingmnt.co.za");
			attr_dev(a24, "class", "svelte-1rp6isq");
			add_location(a24, file$2, 71, 1, 4478);
			attr_dev(img25, "src", "organisations/mentorcv.png");
			attr_dev(img25, "alt", "Mentor CV logo");
			attr_dev(img25, "loading", "lazy");
			attr_dev(img25, "class", "svelte-1rp6isq");
			add_location(img25, file$2, 72, 67, 4685);
			attr_dev(a25, "target", "_blank");
			attr_dev(a25, "rel", "noopener");
			attr_dev(a25, "href", "https://www.mentorcv.com");
			attr_dev(a25, "class", "svelte-1rp6isq");
			add_location(a25, file$2, 72, 1, 4619);
			attr_dev(img26, "src", "organisations/metrovias.svg");
			attr_dev(img26, "alt", "Metrovias logo");
			attr_dev(img26, "loading", "lazy");
			attr_dev(img26, "class", "svelte-1rp6isq");
			add_location(img26, file$2, 73, 72, 4837);
			attr_dev(a26, "target", "_blank");
			attr_dev(a26, "rel", "noopener");
			attr_dev(a26, "href", "https://www.metrovias.com.ar/");
			attr_dev(a26, "class", "svelte-1rp6isq");
			add_location(a26, file$2, 73, 1, 4766);
			attr_dev(img27, "src", "organisations/mustlab.png");
			attr_dev(img27, "alt", "Mustlab logo");
			attr_dev(img27, "loading", "lazy");
			attr_dev(img27, "class", "svelte-1rp6isq");
			add_location(img27, file$2, 74, 60, 4978);
			attr_dev(a27, "target", "_blank");
			attr_dev(a27, "rel", "noopener");
			attr_dev(a27, "href", "http://mustlab.ru");
			attr_dev(a27, "class", "svelte-1rp6isq");
			add_location(a27, file$2, 74, 1, 4919);
			attr_dev(img28, "src", "organisations/nesta.svg");
			attr_dev(img28, "alt", "Nesta logo");
			attr_dev(img28, "loading", "lazy");
			attr_dev(img28, "class", "svelte-1rp6isq");
			add_location(img28, file$2, 75, 67, 5122);
			attr_dev(a28, "target", "_blank");
			attr_dev(a28, "rel", "noopener");
			attr_dev(a28, "href", "https://www.nesta.org.uk");
			attr_dev(a28, "class", "svelte-1rp6isq");
			add_location(a28, file$2, 75, 1, 5056);
			attr_dev(img29, "src", "organisations/nonkosi.svg");
			attr_dev(img29, "alt", "Nonkosi Telecoms logo");
			attr_dev(img29, "loading", "lazy");
			attr_dev(img29, "class", "svelte-1rp6isq");
			add_location(img29, file$2, 76, 74, 5269);
			attr_dev(a29, "target", "_blank");
			attr_dev(a29, "rel", "noopener");
			attr_dev(a29, "href", "https://www.nonkositelecoms.com");
			attr_dev(a29, "class", "svelte-1rp6isq");
			add_location(a29, file$2, 76, 1, 5196);
			attr_dev(img30, "src", "organisations/nzz.svg");
			attr_dev(img30, "alt", "Neue Zürcher Zeitung logo");
			attr_dev(img30, "loading", "lazy");
			attr_dev(img30, "class", "svelte-1rp6isq");
			add_location(img30, file$2, 77, 61, 5416);
			attr_dev(a30, "target", "_blank");
			attr_dev(a30, "rel", "noopener");
			attr_dev(a30, "href", "https://www.nzz.ch");
			attr_dev(a30, "class", "svelte-1rp6isq");
			add_location(a30, file$2, 77, 1, 5356);
			attr_dev(img31, "src", "organisations/nyt.svg");
			attr_dev(img31, "alt", "The New York Times logo");
			attr_dev(img31, "loading", "lazy");
			attr_dev(img31, "class", "svelte-1rp6isq");
			add_location(img31, file$2, 78, 62, 5564);
			attr_dev(a31, "target", "_blank");
			attr_dev(a31, "rel", "noopener");
			attr_dev(a31, "href", "https://nytimes.com");
			attr_dev(a31, "class", "svelte-1rp6isq");
			add_location(a31, file$2, 78, 1, 5503);
			attr_dev(img32, "src", "organisations/oberonspace.svg");
			attr_dev(img32, "alt", "OberonSPACE logo");
			attr_dev(img32, "loading", "lazy");
			attr_dev(img32, "class", "svelte-1rp6isq");
			add_location(img32, file$2, 79, 66, 5714);
			attr_dev(a32, "target", "_blank");
			attr_dev(a32, "rel", "noopener");
			attr_dev(a32, "href", "https://oberonspace.xyz");
			attr_dev(a32, "class", "svelte-1rp6isq");
			add_location(a32, file$2, 79, 1, 5649);
			attr_dev(img33, "src", "organisations/ofof.png");
			attr_dev(img33, "alt", "Ofof logo");
			attr_dev(img33, "loading", "lazy");
			attr_dev(img33, "class", "svelte-1rp6isq");
			add_location(img33, file$2, 80, 58, 5857);
			attr_dev(a33, "target", "_blank");
			attr_dev(a33, "rel", "noopener");
			attr_dev(a33, "href", "https://ofof.nl");
			attr_dev(a33, "class", "svelte-1rp6isq");
			add_location(a33, file$2, 80, 1, 5800);
			attr_dev(img34, "src", "organisations/open-state-foundation.svg");
			attr_dev(img34, "alt", "Open State Foundation logo");
			attr_dev(img34, "loading", "lazy");
			attr_dev(img34, "class", "svelte-1rp6isq");
			add_location(img34, file$2, 81, 63, 5991);
			attr_dev(a34, "target", "_blank");
			attr_dev(a34, "rel", "noopener");
			attr_dev(a34, "href", "https://openstate.eu");
			attr_dev(a34, "class", "svelte-1rp6isq");
			add_location(a34, file$2, 81, 1, 5929);
			attr_dev(img35, "src", "organisations/panascais.svg");
			attr_dev(img35, "alt", "Panascais logo");
			attr_dev(img35, "loading", "lazy");
			attr_dev(img35, "class", "svelte-1rp6isq");
			add_location(img35, file$2, 82, 64, 6160);
			attr_dev(a35, "target", "_blank");
			attr_dev(a35, "rel", "noopener");
			attr_dev(a35, "href", "https://panascais.net");
			attr_dev(a35, "class", "svelte-1rp6isq");
			add_location(a35, file$2, 82, 1, 6097);
			attr_dev(img36, "src", "organisations/pankod.svg");
			attr_dev(img36, "alt", "Pankod logo");
			attr_dev(img36, "loading", "lazy");
			attr_dev(img36, "class", "svelte-1rp6isq");
			add_location(img36, file$2, 83, 61, 6302);
			attr_dev(a36, "target", "_blank");
			attr_dev(a36, "rel", "noopener");
			attr_dev(a36, "href", "https://pankod.com");
			attr_dev(a36, "class", "svelte-1rp6isq");
			add_location(a36, file$2, 83, 1, 6242);
			attr_dev(img37, "src", "organisations/paperform.svg");
			attr_dev(img37, "alt", "Paperform logo");
			attr_dev(img37, "loading", "lazy");
			attr_dev(img37, "class", "svelte-1rp6isq");
			add_location(img37, file$2, 84, 63, 6440);
			attr_dev(a37, "target", "_blank");
			attr_dev(a37, "rel", "noopener");
			attr_dev(a37, "href", "https://paperform.co");
			attr_dev(a37, "class", "svelte-1rp6isq");
			add_location(a37, file$2, 84, 1, 6378);
			attr_dev(img38, "src", "organisations/razorpay.svg");
			attr_dev(img38, "alt", "Razorpay logo");
			attr_dev(img38, "loading", "lazy");
			attr_dev(img38, "class", "svelte-1rp6isq");
			add_location(img38, file$2, 85, 63, 6584);
			attr_dev(a38, "target", "_blank");
			attr_dev(a38, "rel", "noopener");
			attr_dev(a38, "href", "https://razorpay.com");
			attr_dev(a38, "class", "svelte-1rp6isq");
			add_location(a38, file$2, 85, 1, 6522);
			attr_dev(img39, "src", "organisations/socialist-party.svg");
			attr_dev(img39, "alt", "Socialist Party logo");
			attr_dev(img39, "loading", "lazy");
			attr_dev(img39, "class", "svelte-1rp6isq");
			add_location(img39, file$2, 86, 56, 6719);
			attr_dev(a39, "target", "_blank");
			attr_dev(a39, "rel", "noopener");
			attr_dev(a39, "href", "https://sp.nl");
			attr_dev(a39, "class", "svelte-1rp6isq");
			add_location(a39, file$2, 86, 1, 6664);
			attr_dev(img40, "src", "organisations/softmus.png");
			attr_dev(img40, "alt", "Softmus Tecnologia logo");
			attr_dev(img40, "loading", "lazy");
			attr_dev(img40, "class", "svelte-1rp6isq");
			add_location(img40, file$2, 87, 70, 6882);
			attr_dev(a40, "target", "_blank");
			attr_dev(a40, "rel", "noopener");
			attr_dev(a40, "href", "https://www.softmus.com.br/");
			attr_dev(a40, "class", "svelte-1rp6isq");
			add_location(a40, file$2, 87, 1, 6813);
			attr_dev(img41, "src", "organisations/sqltribe.svg");
			attr_dev(img41, "alt", "SQL Tribe logo");
			attr_dev(img41, "loading", "lazy");
			attr_dev(img41, "class", "svelte-1rp6isq");
			add_location(img41, file$2, 88, 63, 7033);
			attr_dev(a41, "target", "_blank");
			attr_dev(a41, "rel", "noopener");
			attr_dev(a41, "href", "https://sqltribe.com");
			attr_dev(a41, "class", "svelte-1rp6isq");
			add_location(a41, file$2, 88, 1, 6971);
			attr_dev(img42, "src", "organisations/stone.svg");
			attr_dev(img42, "alt", "Stone Payments logo");
			attr_dev(img42, "loading", "lazy");
			attr_dev(img42, "class", "svelte-1rp6isq");
			add_location(img42, file$2, 89, 63, 7176);
			attr_dev(a42, "target", "_blank");
			attr_dev(a42, "rel", "noopener");
			attr_dev(a42, "href", "https://www.stone.co");
			attr_dev(a42, "class", "svelte-1rp6isq");
			add_location(a42, file$2, 89, 1, 7114);
			attr_dev(img43, "src", "organisations/strixcloud.svg");
			attr_dev(img43, "alt", "Strix Cloud logo");
			attr_dev(img43, "loading", "lazy");
			attr_dev(img43, "class", "svelte-1rp6isq");
			add_location(img43, file$2, 90, 70, 7328);
			add_location(span0, file$2, 90, 148, 7406);
			attr_dev(a43, "target", "_blank");
			attr_dev(a43, "rel", "noopener");
			attr_dev(a43, "href", "https://www.strixengine.com");
			attr_dev(a43, "class", "svelte-1rp6isq");
			add_location(a43, file$2, 90, 1, 7259);
			attr_dev(img44, "src", "organisations/sucuri.png");
			attr_dev(img44, "alt", "Sucuri logo");
			attr_dev(img44, "loading", "lazy");
			attr_dev(img44, "class", "svelte-1rp6isq");
			add_location(img44, file$2, 91, 104, 7540);
			attr_dev(a44, "target", "_blank");
			attr_dev(a44, "rel", "noopener");
			attr_dev(a44, "href", "https://sucuri.net");
			set_style(a44, "background-color", "rgb(93, 93, 93)");
			attr_dev(a44, "class", "svelte-1rp6isq");
			add_location(a44, file$2, 91, 1, 7437);
			attr_dev(img45, "src", "organisations/tsh.svg");
			attr_dev(img45, "alt", "The Software House logo");
			attr_dev(img45, "loading", "lazy");
			attr_dev(img45, "class", "svelte-1rp6isq");
			add_location(img45, file$2, 92, 57, 7672);
			attr_dev(a45, "target", "_blank");
			attr_dev(a45, "rel", "noopener");
			attr_dev(a45, "href", "https://tsh.io");
			attr_dev(a45, "class", "svelte-1rp6isq");
			add_location(a45, file$2, 92, 1, 7616);
			attr_dev(img46, "src", "organisations/thunderdome.svg");
			attr_dev(img46, "alt", "Thunderdome logo");
			attr_dev(img46, "loading", "lazy");
			attr_dev(img46, "class", "svelte-1rp6isq");
			add_location(img46, file$2, 93, 66, 7822);
			attr_dev(a46, "target", "_blank");
			attr_dev(a46, "rel", "noopener");
			attr_dev(a46, "href", "https://thunderdome.dev");
			attr_dev(a46, "class", "svelte-1rp6isq");
			add_location(a46, file$2, 93, 1, 7757);
			attr_dev(img47, "src", "organisations/tokopedia.svg");
			attr_dev(img47, "alt", "Tokopedia logo");
			attr_dev(img47, "loading", "lazy");
			attr_dev(img47, "class", "svelte-1rp6isq");
			add_location(img47, file$2, 94, 66, 7973);
			attr_dev(a47, "target", "_blank");
			attr_dev(a47, "rel", "noopener");
			attr_dev(a47, "href", "https://m.tokopedia.com");
			attr_dev(a47, "class", "svelte-1rp6isq");
			add_location(a47, file$2, 94, 1, 7908);
			attr_dev(img48, "src", "organisations/webdesq.svg");
			attr_dev(img48, "alt", "Webdesq logo");
			attr_dev(img48, "loading", "lazy");
			attr_dev(img48, "class", "svelte-1rp6isq");
			add_location(img48, file$2, 95, 62, 8116);
			attr_dev(a48, "target", "_blank");
			attr_dev(a48, "rel", "noopener");
			attr_dev(a48, "href", "https://webdesq.net");
			attr_dev(a48, "class", "svelte-1rp6isq");
			add_location(a48, file$2, 95, 1, 8055);
			attr_dev(img49, "src", "organisations/zevvle.svg");
			attr_dev(img49, "alt", "Zevvle logo");
			attr_dev(img49, "loading", "lazy");
			attr_dev(img49, "class", "svelte-1rp6isq");
			add_location(img49, file$2, 96, 62, 8255);
			attr_dev(a49, "target", "_blank");
			attr_dev(a49, "rel", "noopener");
			attr_dev(a49, "href", "https://zevvle.com/");
			attr_dev(a49, "class", "svelte-1rp6isq");
			add_location(a49, file$2, 96, 1, 8194);
			add_location(span1, file$2, 97, 154, 8484);
			attr_dev(a50, "target", "_blank");
			attr_dev(a50, "rel", "noopener");
			attr_dev(a50, "href", "https://github.com/sveltejs/community/blob/master/whos-using-svelte/WhosUsingSvelte.svelte");
			attr_dev(a50, "class", "add-yourself svelte-1rp6isq");
			add_location(a50, file$2, 97, 1, 8331);
			attr_dev(div, "class", "logos svelte-1rp6isq");
			add_location(div, file$2, 46, 0, 820);
		},

		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
			append_dev(div, a0);
			append_dev(a0, img0);
			append_dev(div, t0);
			append_dev(div, a1);
			append_dev(a1, img1);
			append_dev(div, t1);
			append_dev(div, a2);
			append_dev(a2, img2);
			append_dev(div, t2);
			append_dev(div, a3);
			append_dev(a3, img3);
			append_dev(div, t3);
			append_dev(div, a4);
			append_dev(a4, img4);
			append_dev(div, t4);
			append_dev(div, a5);
			append_dev(a5, img5);
			append_dev(div, t5);
			append_dev(div, a6);
			append_dev(a6, img6);
			append_dev(div, t6);
			append_dev(div, a7);
			append_dev(a7, img7);
			append_dev(div, t7);
			append_dev(div, a8);
			append_dev(a8, img8);
			append_dev(div, t8);
			append_dev(div, a9);
			append_dev(a9, img9);
			append_dev(div, t9);
			append_dev(div, a10);
			append_dev(a10, picture);
			append_dev(picture, source);
			append_dev(picture, img10);
			append_dev(div, t10);
			append_dev(div, a11);
			append_dev(a11, img11);
			append_dev(div, t11);
			append_dev(div, a12);
			append_dev(a12, img12);
			append_dev(div, t12);
			append_dev(div, a13);
			append_dev(a13, img13);
			append_dev(div, t13);
			append_dev(div, a14);
			append_dev(a14, img14);
			append_dev(div, t14);
			append_dev(div, a15);
			append_dev(a15, img15);
			append_dev(div, t15);
			append_dev(div, a16);
			append_dev(a16, img16);
			append_dev(div, t16);
			append_dev(div, a17);
			append_dev(a17, img17);
			append_dev(div, t17);
			append_dev(div, a18);
			append_dev(a18, img18);
			append_dev(div, t18);
			append_dev(div, a19);
			append_dev(a19, img19);
			append_dev(div, t19);
			append_dev(div, a20);
			append_dev(a20, img20);
			append_dev(div, t20);
			append_dev(div, a21);
			append_dev(a21, img21);
			append_dev(div, t21);
			append_dev(div, a22);
			append_dev(a22, img22);
			append_dev(div, t22);
			append_dev(div, a23);
			append_dev(a23, img23);
			append_dev(div, t23);
			append_dev(div, a24);
			append_dev(a24, img24);
			append_dev(div, t24);
			append_dev(div, a25);
			append_dev(a25, img25);
			append_dev(div, t25);
			append_dev(div, a26);
			append_dev(a26, img26);
			append_dev(div, t26);
			append_dev(div, a27);
			append_dev(a27, img27);
			append_dev(div, t27);
			append_dev(div, a28);
			append_dev(a28, img28);
			append_dev(div, t28);
			append_dev(div, a29);
			append_dev(a29, img29);
			append_dev(div, t29);
			append_dev(div, a30);
			append_dev(a30, img30);
			append_dev(div, t30);
			append_dev(div, a31);
			append_dev(a31, img31);
			append_dev(div, t31);
			append_dev(div, a32);
			append_dev(a32, img32);
			append_dev(div, t32);
			append_dev(div, a33);
			append_dev(a33, img33);
			append_dev(div, t33);
			append_dev(div, a34);
			append_dev(a34, img34);
			append_dev(div, t34);
			append_dev(div, a35);
			append_dev(a35, img35);
			append_dev(div, t35);
			append_dev(div, a36);
			append_dev(a36, img36);
			append_dev(div, t36);
			append_dev(div, a37);
			append_dev(a37, img37);
			append_dev(div, t37);
			append_dev(div, a38);
			append_dev(a38, img38);
			append_dev(div, t38);
			append_dev(div, a39);
			append_dev(a39, img39);
			append_dev(div, t39);
			append_dev(div, a40);
			append_dev(a40, img40);
			append_dev(div, t40);
			append_dev(div, a41);
			append_dev(a41, img41);
			append_dev(div, t41);
			append_dev(div, a42);
			append_dev(a42, img42);
			append_dev(div, t42);
			append_dev(div, a43);
			append_dev(a43, img43);
			append_dev(a43, span0);
			append_dev(span0, t43);
			append_dev(div, t44);
			append_dev(div, a44);
			append_dev(a44, img44);
			append_dev(div, t45);
			append_dev(div, a45);
			append_dev(a45, img45);
			append_dev(div, t46);
			append_dev(div, a46);
			append_dev(a46, img46);
			append_dev(div, t47);
			append_dev(div, a47);
			append_dev(a47, img47);
			append_dev(div, t48);
			append_dev(div, a48);
			append_dev(a48, img48);
			append_dev(div, t49);
			append_dev(div, a49);
			append_dev(a49, img49);
			append_dev(div, t50);
			append_dev(div, a50);
			append_dev(a50, span1);
			append_dev(span1, t51);
		},

		p: noop,
		i: noop,
		o: noop,

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(div);
			}
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_fragment$3.name, type: "component", source: "", ctx });
	return block;
}

class WhosUsingSvelte extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, null, create_fragment$3, safe_not_equal, []);
		dispatch_dev("SvelteRegisterComponent", { component: this, tagName: "WhosUsingSvelte", options, id: create_fragment$3.name });
	}
}

/* src\routes\index.svelte generated by Svelte v3.12.0 */

const file$3 = "src\\routes\\index.svelte";

// (45:1) <a href="blog/write-less-code" slot="one">
function create_one_slot(ctx) {
	var a, h2, t0, t1, p, t2, t3, span, t4;

	const block = {
		c: function create() {
			a = element("a");
			h2 = element("h2");
			t0 = text("书写更精简");
			t1 = space();
			p = element("p");
			t2 = text("使用你所熟悉的语言（HTML，CSS和JavaScript）构建高度灵活的组件");
			t3 = space();
			span = element("span");
			t4 = text("了解更多");
			this.h();
		},

		l: function claim(nodes) {
			a = claim_element(nodes, "A", { href: true, slot: true }, false);
			var a_nodes = children(a);

			h2 = claim_element(a_nodes, "H2", {}, false);
			var h2_nodes = children(h2);

			t0 = claim_text(h2_nodes, "书写更精简");
			h2_nodes.forEach(detach_dev);
			t1 = claim_space(a_nodes);

			p = claim_element(a_nodes, "P", {}, false);
			var p_nodes = children(p);

			t2 = claim_text(p_nodes, "使用你所熟悉的语言（HTML，CSS和JavaScript）构建高度灵活的组件");
			p_nodes.forEach(detach_dev);
			t3 = claim_space(a_nodes);

			span = claim_element(a_nodes, "SPAN", { class: true }, false);
			var span_nodes = children(span);

			t4 = claim_text(span_nodes, "了解更多");
			span_nodes.forEach(detach_dev);
			a_nodes.forEach(detach_dev);
			this.h();
		},

		h: function hydrate() {
			add_location(h2, file$3, 45, 2, 1235);
			add_location(p, file$3, 46, 2, 1253);
			attr_dev(span, "class", "learn-more");
			add_location(span, file$3, 48, 2, 1305);
			attr_dev(a, "href", "blog/write-less-code");
			attr_dev(a, "slot", "one");
			add_location(a, file$3, 44, 1, 1189);
		},

		m: function mount(target, anchor) {
			insert_dev(target, a, anchor);
			append_dev(a, h2);
			append_dev(h2, t0);
			append_dev(a, t1);
			append_dev(a, p);
			append_dev(p, t2);
			append_dev(a, t3);
			append_dev(a, span);
			append_dev(span, t4);
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(a);
			}
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_one_slot.name, type: "slot", source: "(45:1) <a href=\"blog/write-less-code\" slot=\"one\">", ctx });
	return block;
}

// (52:1) <a href="blog/virtual-dom-is-pure-overhead" slot="two">
function create_two_slot(ctx) {
	var a, h2, t0, t1, p, t2, t3, span, t4;

	const block = {
		c: function create() {
			a = element("a");
			h2 = element("h2");
			t0 = text("没有 virtual DOM");
			t1 = space();
			p = element("p");
			t2 = text("Svelte 不仅将你的代码体积编译为更小原始 JS 、并且让你的 App 启动迅速且保持快速。");
			t3 = space();
			span = element("span");
			t4 = text("了解更多");
			this.h();
		},

		l: function claim(nodes) {
			a = claim_element(nodes, "A", { href: true, slot: true }, false);
			var a_nodes = children(a);

			h2 = claim_element(a_nodes, "H2", {}, false);
			var h2_nodes = children(h2);

			t0 = claim_text(h2_nodes, "没有 virtual DOM");
			h2_nodes.forEach(detach_dev);
			t1 = claim_space(a_nodes);

			p = claim_element(a_nodes, "P", {}, false);
			var p_nodes = children(p);

			t2 = claim_text(p_nodes, "Svelte 不仅将你的代码体积编译为更小原始 JS 、并且让你的 App 启动迅速且保持快速。");
			p_nodes.forEach(detach_dev);
			t3 = claim_space(a_nodes);

			span = claim_element(a_nodes, "SPAN", { class: true }, false);
			var span_nodes = children(span);

			t4 = claim_text(span_nodes, "了解更多");
			span_nodes.forEach(detach_dev);
			a_nodes.forEach(detach_dev);
			this.h();
		},

		h: function hydrate() {
			add_location(h2, file$3, 52, 2, 1412);
			add_location(p, file$3, 53, 2, 1439);
			attr_dev(span, "class", "learn-more");
			add_location(span, file$3, 55, 2, 1500);
			attr_dev(a, "href", "blog/virtual-dom-is-pure-overhead");
			attr_dev(a, "slot", "two");
			add_location(a, file$3, 51, 1, 1353);
		},

		m: function mount(target, anchor) {
			insert_dev(target, a, anchor);
			append_dev(a, h2);
			append_dev(h2, t0);
			append_dev(a, t1);
			append_dev(a, p);
			append_dev(p, t2);
			append_dev(a, t3);
			append_dev(a, span);
			append_dev(span, t4);
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(a);
			}
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_two_slot.name, type: "slot", source: "(52:1) <a href=\"blog/virtual-dom-is-pure-overhead\" slot=\"two\">", ctx });
	return block;
}

// (59:1) <a href="blog/svelte-3-rethinking-reactivity" slot="three">
function create_three_slot(ctx) {
	var a, h2, t0, t1, p, t2, t3, span, t4;

	const block = {
		c: function create() {
			a = element("a");
			h2 = element("h2");
			t0 = text("真正的实时反应");
			t1 = space();
			p = element("p");
			t2 = text("不需要大良的状态管理库 — Svelte 为 JavaScript 自身赋予反应性。");
			t3 = space();
			span = element("span");
			t4 = text("了解更多");
			this.h();
		},

		l: function claim(nodes) {
			a = claim_element(nodes, "A", { href: true, slot: true }, false);
			var a_nodes = children(a);

			h2 = claim_element(a_nodes, "H2", {}, false);
			var h2_nodes = children(h2);

			t0 = claim_text(h2_nodes, "真正的实时反应");
			h2_nodes.forEach(detach_dev);
			t1 = claim_space(a_nodes);

			p = claim_element(a_nodes, "P", {}, false);
			var p_nodes = children(p);

			t2 = claim_text(p_nodes, "不需要大良的状态管理库 — Svelte 为 JavaScript 自身赋予反应性。");
			p_nodes.forEach(detach_dev);
			t3 = claim_space(a_nodes);

			span = claim_element(a_nodes, "SPAN", { class: true }, false);
			var span_nodes = children(span);

			t4 = claim_text(span_nodes, "了解更多");
			span_nodes.forEach(detach_dev);
			a_nodes.forEach(detach_dev);
			this.h();
		},

		h: function hydrate() {
			add_location(h2, file$3, 59, 2, 1611);
			add_location(p, file$3, 60, 2, 1631);
			attr_dev(span, "class", "learn-more");
			add_location(span, file$3, 62, 2, 1686);
			attr_dev(a, "href", "blog/svelte-3-rethinking-reactivity");
			attr_dev(a, "slot", "three");
			add_location(a, file$3, 58, 1, 1548);
		},

		m: function mount(target, anchor) {
			insert_dev(target, a, anchor);
			append_dev(a, h2);
			append_dev(h2, t0);
			append_dev(a, t1);
			append_dev(a, p);
			append_dev(p, t2);
			append_dev(a, t3);
			append_dev(a, span);
			append_dev(span, t4);
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(a);
			}
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_three_slot.name, type: "slot", source: "(59:1) <a href=\"blog/svelte-3-rethinking-reactivity\" slot=\"three\">", ctx });
	return block;
}

// (66:1) <div class="description" slot="what">
function create_what_slot(ctx) {
	var div, p0, t0, em0, t1, t2, em1, t3, t4, t5, p1, t6, t7, p2, a, t8, t9;

	const block = {
		c: function create() {
			div = element("div");
			p0 = element("p");
			t0 = text("Svelte 是一种构建用户界面的选择。传统的框架（诸如 React 和 Vue）在 ");
			em0 = element("em");
			t1 = text("浏览器中");
			t2 = text("完成大部分工作，而  Svelte 则将这步骤放在 ");
			em1 = element("em");
			t3 = text("编译阶段");
			t4 = text(" 且这是在你构建程序时发生的。");
			t5 = space();
			p1 = element("p");
			t6 = text("Svelte 不会使用虚拟 DOM 技术，但会在你编写 App 阶段，通过实时编译的方式更新DOM代码，进而做到“边编译，边运行”。");
			t7 = space();
			p2 = element("p");
			a = element("a");
			t8 = text("阅读更多");
			t9 = text("介绍性博客和文章");
			this.h();
		},

		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true, slot: true }, false);
			var div_nodes = children(div);

			p0 = claim_element(div_nodes, "P", {}, false);
			var p0_nodes = children(p0);

			t0 = claim_text(p0_nodes, "Svelte 是一种构建用户界面的选择。传统的框架（诸如 React 和 Vue）在 ");

			em0 = claim_element(p0_nodes, "EM", {}, false);
			var em0_nodes = children(em0);

			t1 = claim_text(em0_nodes, "浏览器中");
			em0_nodes.forEach(detach_dev);
			t2 = claim_text(p0_nodes, "完成大部分工作，而  Svelte 则将这步骤放在 ");

			em1 = claim_element(p0_nodes, "EM", {}, false);
			var em1_nodes = children(em1);

			t3 = claim_text(em1_nodes, "编译阶段");
			em1_nodes.forEach(detach_dev);
			t4 = claim_text(p0_nodes, " 且这是在你构建程序时发生的。");
			p0_nodes.forEach(detach_dev);
			t5 = claim_space(div_nodes);

			p1 = claim_element(div_nodes, "P", {}, false);
			var p1_nodes = children(p1);

			t6 = claim_text(p1_nodes, "Svelte 不会使用虚拟 DOM 技术，但会在你编写 App 阶段，通过实时编译的方式更新DOM代码，进而做到“边编译，边运行”。");
			p1_nodes.forEach(detach_dev);
			t7 = claim_space(div_nodes);

			p2 = claim_element(div_nodes, "P", {}, false);
			var p2_nodes = children(p2);

			a = claim_element(p2_nodes, "A", { href: true }, false);
			var a_nodes = children(a);

			t8 = claim_text(a_nodes, "阅读更多");
			a_nodes.forEach(detach_dev);
			t9 = claim_text(p2_nodes, "介绍性博客和文章");
			p2_nodes.forEach(detach_dev);
			div_nodes.forEach(detach_dev);
			this.h();
		},

		h: function hydrate() {
			add_location(em0, file$3, 66, 48, 1821);
			add_location(em1, file$3, 66, 87, 1860);
			add_location(p0, file$3, 66, 2, 1775);
			add_location(p1, file$3, 68, 2, 1898);
			attr_dev(a, "href", "blog/svelte-3-rethinking-reactivity");
			add_location(a, file$3, 70, 5, 1980);
			add_location(p2, file$3, 70, 2, 1977);
			attr_dev(div, "class", "description");
			attr_dev(div, "slot", "what");
			add_location(div, file$3, 65, 1, 1734);
		},

		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
			append_dev(div, p0);
			append_dev(p0, t0);
			append_dev(p0, em0);
			append_dev(em0, t1);
			append_dev(p0, t2);
			append_dev(p0, em1);
			append_dev(em1, t3);
			append_dev(p0, t4);
			append_dev(div, t5);
			append_dev(div, p1);
			append_dev(p1, t6);
			append_dev(div, t7);
			append_dev(div, p2);
			append_dev(p2, a);
			append_dev(a, t8);
			append_dev(p2, t9);
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(div);
			}
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_what_slot.name, type: "slot", source: "(66:1) <div class=\"description\" slot=\"what\">", ctx });
	return block;
}

// (74:1) <div style="grid-area: start; display: flex; flex-direction: column; min-width: 0" slot="how">
function create_how_slot(ctx) {
	var div, pre, t0, a0, t1, t2, span, t3, a1, t4, t5, t6, p0, t7, a2, t8, t9, p1, a3, t10;

	const block = {
		c: function create() {
			div = element("div");
			pre = element("pre");
			t0 = text("npx degit ");
			a0 = element("a");
			t1 = text("sveltejs/template");
			t2 = text(" my-svelte-project\r\n");
			span = element("span");
			t3 = text("# 或下载并解压 ");
			a1 = element("a");
			t4 = text("此.zip文件");
			t5 = text("\r\ncd my-svelte-project\r\n\r\nnpm install\r\nnpm run dev");
			t6 = space();
			p0 = element("p");
			t7 = text("更多信息请参考 ");
			a2 = element("a");
			t8 = text("快速指南");
			t9 = space();
			p1 = element("p");
			a3 = element("a");
			t10 = text(">学习 Svelte");
			this.h();
		},

		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { style: true, slot: true }, false);
			var div_nodes = children(div);

			pre = claim_element(div_nodes, "PRE", { class: true, style: true }, false);
			var pre_nodes = children(pre);

			t0 = claim_text(pre_nodes, "npx degit ");

			a0 = claim_element(pre_nodes, "A", { href: true, style: true }, false);
			var a0_nodes = children(a0);

			t1 = claim_text(a0_nodes, "sveltejs/template");
			a0_nodes.forEach(detach_dev);
			t2 = claim_text(pre_nodes, " my-svelte-project\r\n");

			span = claim_element(pre_nodes, "SPAN", { class: true }, false);
			var span_nodes = children(span);

			t3 = claim_text(span_nodes, "# 或下载并解压 ");

			a1 = claim_element(span_nodes, "A", { href: true }, false);
			var a1_nodes = children(a1);

			t4 = claim_text(a1_nodes, "此.zip文件");
			a1_nodes.forEach(detach_dev);
			span_nodes.forEach(detach_dev);
			t5 = claim_text(pre_nodes, "\r\ncd my-svelte-project\r\n\r\nnpm install\r\nnpm run dev");
			pre_nodes.forEach(detach_dev);
			t6 = claim_space(div_nodes);

			p0 = claim_element(div_nodes, "P", { style: true }, false);
			var p0_nodes = children(p0);

			t7 = claim_text(p0_nodes, "更多信息请参考 ");

			a2 = claim_element(p0_nodes, "A", { href: true }, false);
			var a2_nodes = children(a2);

			t8 = claim_text(a2_nodes, "快速指南");
			a2_nodes.forEach(detach_dev);
			p0_nodes.forEach(detach_dev);
			t9 = claim_space(div_nodes);

			p1 = claim_element(div_nodes, "P", { class: true }, false);
			var p1_nodes = children(p1);

			a3 = claim_element(p1_nodes, "A", { rel: true, href: true }, false);
			var a3_nodes = children(a3);

			t10 = claim_text(a3_nodes, ">学习 Svelte");
			a3_nodes.forEach(detach_dev);
			p1_nodes.forEach(detach_dev);
			div_nodes.forEach(detach_dev);
			this.h();
		},

		h: function hydrate() {
			attr_dev(a0, "href", "https://github.com/sveltejs/template");
			set_style(a0, "user-select", "initial");
			add_location(a0, file$3, 75, 10, 2253);
			attr_dev(a1, "href", "https://github.com/sveltejs/template/archive/master.zip");
			add_location(a1, file$3, 76, 37, 2408);
			attr_dev(span, "class", "token comment");
			add_location(span, file$3, 76, 0, 2371);
			attr_dev(pre, "class", "language-bash");
			set_style(pre, "margin", "0 0 1em 0");
			set_style(pre, "min-width", "0");
			set_style(pre, "min-height", "0");
			add_location(pre, file$3, 74, 2, 2159);
			attr_dev(a2, "href", "blog/the-easiest-way-to-get-started");
			add_location(a2, file$3, 83, 29, 2585);
			set_style(p0, "flex", "1");
			add_location(p0, file$3, 83, 2, 2558);
			attr_dev(a3, "rel", "prefetch");
			attr_dev(a3, "href", "tutorial");
			add_location(a3, file$3, 85, 17, 2664);
			attr_dev(p1, "class", "cta");
			add_location(p1, file$3, 85, 2, 2649);
			set_style(div, "grid-area", "start");
			set_style(div, "display", "flex");
			set_style(div, "flex-direction", "column");
			set_style(div, "min-width", "0");
			attr_dev(div, "slot", "how");
			add_location(div, file$3, 73, 1, 2061);
		},

		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
			append_dev(div, pre);
			append_dev(pre, t0);
			append_dev(pre, a0);
			append_dev(a0, t1);
			append_dev(pre, t2);
			append_dev(pre, span);
			append_dev(span, t3);
			append_dev(span, a1);
			append_dev(a1, t4);
			append_dev(pre, t5);
			append_dev(div, t6);
			append_dev(div, p0);
			append_dev(p0, t7);
			append_dev(p0, a2);
			append_dev(a2, t8);
			append_dev(div, t9);
			append_dev(div, p1);
			append_dev(p1, a3);
			append_dev(a3, t10);
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(div);
			}
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_how_slot.name, type: "slot", source: "(74:1) <div style=\"grid-area: start; display: flex; flex-direction: column; min-width: 0\" slot=\"how\">", ctx });
	return block;
}

// (44:0) <Blurb>
function create_default_slot_6(ctx) {
	var t0, t1, t2, t3;

	const block = {
		c: function create() {
			t0 = space();
			t1 = space();
			t2 = space();
			t3 = space();
		},

		l: function claim(nodes) {
			t0 = claim_space(nodes);
			t1 = claim_space(nodes);
			t2 = claim_space(nodes);
			t3 = claim_space(nodes);
		},

		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			insert_dev(target, t1, anchor);
			insert_dev(target, t2, anchor);
			insert_dev(target, t3, anchor);
		},

		p: noop,

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(t0);
				detach_dev(t1);
				detach_dev(t2);
				detach_dev(t3);
			}
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_default_slot_6.name, type: "slot", source: "(44:0) <Blurb>", ctx });
	return block;
}

// (91:1) <Example id="hello-world">
function create_default_slot_5(ctx) {
	var p, t;

	const block = {
		c: function create() {
			p = element("p");
			t = text("Svelte 组件建立在 HTML 内，试试添加数据。");
			this.h();
		},

		l: function claim(nodes) {
			p = claim_element(nodes, "P", {}, false);
			var p_nodes = children(p);

			t = claim_text(p_nodes, "Svelte 组件建立在 HTML 内，试试添加数据。");
			p_nodes.forEach(detach_dev);
			this.h();
		},

		h: function hydrate() {
			add_location(p, file$3, 91, 2, 2794);
		},

		m: function mount(target, anchor) {
			insert_dev(target, p, anchor);
			append_dev(p, t);
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(p);
			}
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_default_slot_5.name, type: "slot", source: "(91:1) <Example id=\"hello-world\">", ctx });
	return block;
}

// (95:1) <Example id="nested-components">
function create_default_slot_4(ctx) {
	var p, t0, a, t1, t2;

	const block = {
		c: function create() {
			p = element("p");
			t0 = text("默认情况下，CSS是局部样式不会与其他样式冲突，或者你可以");
			a = element("a");
			t1 = text("使用第三方 CSS-in-JS 库");
			t2 = text(".");
			this.h();
		},

		l: function claim(nodes) {
			p = claim_element(nodes, "P", {}, false);
			var p_nodes = children(p);

			t0 = claim_text(p_nodes, "默认情况下，CSS是局部样式不会与其他样式冲突，或者你可以");

			a = claim_element(p_nodes, "A", { href: true }, false);
			var a_nodes = children(a);

			t1 = claim_text(a_nodes, "使用第三方 CSS-in-JS 库");
			a_nodes.forEach(detach_dev);
			t2 = claim_text(p_nodes, ".");
			p_nodes.forEach(detach_dev);
			this.h();
		},

		h: function hydrate() {
			attr_dev(a, "href", "/blog/svelte-css-in-js");
			add_location(a, file$3, 95, 34, 2914);
			add_location(p, file$3, 95, 2, 2882);
		},

		m: function mount(target, anchor) {
			insert_dev(target, p, anchor);
			append_dev(p, t0);
			append_dev(p, a);
			append_dev(a, t1);
			append_dev(p, t2);
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(p);
			}
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_default_slot_4.name, type: "slot", source: "(95:1) <Example id=\"nested-components\">", ctx });
	return block;
}

// (99:1) <Example id="reactive-assignments">
function create_default_slot_3(ctx) {
	var p, t;

	const block = {
		c: function create() {
			p = element("p");
			t = text("通过给局部变量赋值就能触发高效、细粒度的更新，剩余的事情交给编译器去处理。");
			this.h();
		},

		l: function claim(nodes) {
			p = claim_element(nodes, "P", {}, false);
			var p_nodes = children(p);

			t = claim_text(p_nodes, "通过给局部变量赋值就能触发高效、细粒度的更新，剩余的事情交给编译器去处理。");
			p_nodes.forEach(detach_dev);
			this.h();
		},

		h: function hydrate() {
			add_location(p, file$3, 99, 2, 3030);
		},

		m: function mount(target, anchor) {
			insert_dev(target, p, anchor);
			append_dev(p, t);
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(p);
			}
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_default_slot_3.name, type: "slot", source: "(99:1) <Example id=\"reactive-assignments\">", ctx });
	return block;
}

// (103:1) <Example id="svg-transitions">
function create_default_slot_2(ctx) {
	var p, t;

	const block = {
		c: function create() {
			p = element("p");
			t = text("使用内置于框架中的强大、高性能的模板语法来构建漂亮的UI。");
			this.h();
		},

		l: function claim(nodes) {
			p = claim_element(nodes, "P", {}, false);
			var p_nodes = children(p);

			t = claim_text(p_nodes, "使用内置于框架中的强大、高性能的模板语法来构建漂亮的UI。");
			p_nodes.forEach(detach_dev);
			this.h();
		},

		h: function hydrate() {
			add_location(p, file$3, 103, 2, 3126);
		},

		m: function mount(target, anchor) {
			insert_dev(target, p, anchor);
			append_dev(p, t);
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(p);
			}
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_default_slot_2.name, type: "slot", source: "(103:1) <Example id=\"svg-transitions\">", ctx });
	return block;
}

// (108:0) <Section>
function create_default_slot_1$1(ctx) {
	var h3, t0, t1, current;

	var whosusingsvelte = new WhosUsingSvelte({ $$inline: true });

	const block = {
		c: function create() {
			h3 = element("h3");
			t0 = text("谁在使用 Svelte ？");
			t1 = space();
			whosusingsvelte.$$.fragment.c();
			this.h();
		},

		l: function claim(nodes) {
			h3 = claim_element(nodes, "H3", {}, false);
			var h3_nodes = children(h3);

			t0 = claim_text(h3_nodes, "谁在使用 Svelte ？");
			h3_nodes.forEach(detach_dev);
			t1 = claim_space(nodes);
			whosusingsvelte.$$.fragment.l(nodes);
			this.h();
		},

		h: function hydrate() {
			add_location(h3, file$3, 108, 1, 3199);
		},

		m: function mount(target, anchor) {
			insert_dev(target, h3, anchor);
			append_dev(h3, t0);
			insert_dev(target, t1, anchor);
			mount_component(whosusingsvelte, target, anchor);
			current = true;
		},

		i: function intro(local) {
			if (current) return;
			transition_in(whosusingsvelte.$$.fragment, local);

			current = true;
		},

		o: function outro(local) {
			transition_out(whosusingsvelte.$$.fragment, local);
			current = false;
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(h3);
				detach_dev(t1);
			}

			destroy_component(whosusingsvelte, detaching);
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_default_slot_1$1.name, type: "slot", source: "(108:0) <Section>", ctx });
	return block;
}

// (114:0) <Section>
function create_default_slot$1(ctx) {
	var h3, t0, t1, p, t2, a, t3, t4, current;

	var contributors = new Contributors({ $$inline: true });

	const block = {
		c: function create() {
			h3 = element("h3");
			t0 = text("贡献者");
			t1 = space();
			p = element("p");
			t2 = text("Svelte 是免费的开源软件，通过数百名志愿者的工作得以实现。");
			a = element("a");
			t3 = text("加入我们！");
			t4 = space();
			contributors.$$.fragment.c();
			this.h();
		},

		l: function claim(nodes) {
			h3 = claim_element(nodes, "H3", {}, false);
			var h3_nodes = children(h3);

			t0 = claim_text(h3_nodes, "贡献者");
			h3_nodes.forEach(detach_dev);
			t1 = claim_space(nodes);

			p = claim_element(nodes, "P", {}, false);
			var p_nodes = children(p);

			t2 = claim_text(p_nodes, "Svelte 是免费的开源软件，通过数百名志愿者的工作得以实现。");

			a = claim_element(p_nodes, "A", { href: true }, false);
			var a_nodes = children(a);

			t3 = claim_text(a_nodes, "加入我们！");
			a_nodes.forEach(detach_dev);
			p_nodes.forEach(detach_dev);
			t4 = claim_space(nodes);
			contributors.$$.fragment.l(nodes);
			this.h();
		},

		h: function hydrate() {
			add_location(h3, file$3, 114, 1, 3272);
			attr_dev(a, "href", "https://github.com/sveltejs/svelte");
			add_location(a, file$3, 116, 36, 3324);
			add_location(p, file$3, 116, 1, 3289);
		},

		m: function mount(target, anchor) {
			insert_dev(target, h3, anchor);
			append_dev(h3, t0);
			insert_dev(target, t1, anchor);
			insert_dev(target, p, anchor);
			append_dev(p, t2);
			append_dev(p, a);
			append_dev(a, t3);
			insert_dev(target, t4, anchor);
			mount_component(contributors, target, anchor);
			current = true;
		},

		i: function intro(local) {
			if (current) return;
			transition_in(contributors.$$.fragment, local);

			current = true;
		},

		o: function outro(local) {
			transition_out(contributors.$$.fragment, local);
			current = false;
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(h3);
				detach_dev(t1);
				detach_dev(p);
				detach_dev(t4);
			}

			destroy_component(contributors, detaching);
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_default_slot$1.name, type: "slot", source: "(114:0) <Section>", ctx });
	return block;
}

function create_fragment$4(ctx) {
	var meta0, meta1, meta2, t0, t1, t2, div, t3, t4, t5, t6, t7, current;

	var hero = new Hero({
		props: {
		title: "Svelte",
		tagline: "Cybernetically enhanced web apps",
		outline: "svelte-logo-outline.svg",
		logotype: "svelte-logotype.svg"
	},
		$$inline: true
	});

	var blurb = new Blurb({
		props: {
		$$slots: {
		default: [create_default_slot_6],
		how: [create_how_slot],
		what: [create_what_slot],
		three: [create_three_slot],
		two: [create_two_slot],
		one: [create_one_slot]
	},
		$$scope: { ctx }
	},
		$$inline: true
	});

	var example0 = new Example({
		props: {
		id: "hello-world",
		$$slots: { default: [create_default_slot_5] },
		$$scope: { ctx }
	},
		$$inline: true
	});

	var example1 = new Example({
		props: {
		id: "nested-components",
		$$slots: { default: [create_default_slot_4] },
		$$scope: { ctx }
	},
		$$inline: true
	});

	var example2 = new Example({
		props: {
		id: "reactive-assignments",
		$$slots: { default: [create_default_slot_3] },
		$$scope: { ctx }
	},
		$$inline: true
	});

	var example3 = new Example({
		props: {
		id: "svg-transitions",
		$$slots: { default: [create_default_slot_2] },
		$$scope: { ctx }
	},
		$$inline: true
	});

	var section0 = new Section({
		props: {
		$$slots: { default: [create_default_slot_1$1] },
		$$scope: { ctx }
	},
		$$inline: true
	});

	var section1 = new Section({
		props: {
		$$slots: { default: [create_default_slot$1] },
		$$scope: { ctx }
	},
		$$inline: true
	});

	const block = {
		c: function create() {
			meta0 = element("meta");
			meta1 = element("meta");
			meta2 = element("meta");
			t0 = space();
			hero.$$.fragment.c();
			t1 = space();
			blurb.$$.fragment.c();
			t2 = space();
			div = element("div");
			example0.$$.fragment.c();
			t3 = space();
			example1.$$.fragment.c();
			t4 = space();
			example2.$$.fragment.c();
			t5 = space();
			example3.$$.fragment.c();
			t6 = space();
			section0.$$.fragment.c();
			t7 = space();
			section1.$$.fragment.c();
			this.h();
		},

		l: function claim(nodes) {
			meta0 = claim_element(nodes, "META", { name: true, content: true }, false);
			var meta0_nodes = children(meta0);

			meta0_nodes.forEach(detach_dev);

			meta1 = claim_element(nodes, "META", { name: true, content: true }, false);
			var meta1_nodes = children(meta1);

			meta1_nodes.forEach(detach_dev);

			meta2 = claim_element(nodes, "META", { name: true, content: true }, false);
			var meta2_nodes = children(meta2);

			meta2_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			hero.$$.fragment.l(nodes);
			t1 = claim_space(nodes);
			blurb.$$.fragment.l(nodes);
			t2 = claim_space(nodes);

			div = claim_element(nodes, "DIV", { class: true }, false);
			var div_nodes = children(div);

			example0.$$.fragment.l(div_nodes);
			t3 = claim_space(div_nodes);
			example1.$$.fragment.l(div_nodes);
			t4 = claim_space(div_nodes);
			example2.$$.fragment.l(div_nodes);
			t5 = claim_space(div_nodes);
			example3.$$.fragment.l(div_nodes);
			div_nodes.forEach(detach_dev);
			t6 = claim_space(nodes);
			section0.$$.fragment.l(nodes);
			t7 = claim_space(nodes);
			section1.$$.fragment.l(nodes);
			this.h();
		},

		h: function hydrate() {
			document.title = "Svelte • 首页";
			attr_dev(meta0, "name", "twitter:title");
			attr_dev(meta0, "content", "Svelte");
			add_location(meta0, file$3, 31, 1, 821);
			attr_dev(meta1, "name", "twitter:description");
			attr_dev(meta1, "content", "Cybernetically enhanced web apps");
			add_location(meta1, file$3, 32, 1, 868);
			attr_dev(meta2, "name", "Description");
			attr_dev(meta2, "content", "Cybernetically enhanced web apps");
			add_location(meta2, file$3, 33, 1, 947);
			attr_dev(div, "class", "examples svelte-p6rra3");
			add_location(div, file$3, 89, 0, 2739);
		},

		m: function mount(target, anchor) {
			append_dev(document.head, meta0);
			append_dev(document.head, meta1);
			append_dev(document.head, meta2);
			insert_dev(target, t0, anchor);
			mount_component(hero, target, anchor);
			insert_dev(target, t1, anchor);
			mount_component(blurb, target, anchor);
			insert_dev(target, t2, anchor);
			insert_dev(target, div, anchor);
			mount_component(example0, div, null);
			append_dev(div, t3);
			mount_component(example1, div, null);
			append_dev(div, t4);
			mount_component(example2, div, null);
			append_dev(div, t5);
			mount_component(example3, div, null);
			insert_dev(target, t6, anchor);
			mount_component(section0, target, anchor);
			insert_dev(target, t7, anchor);
			mount_component(section1, target, anchor);
			current = true;
		},

		p: function update(changed, ctx) {
			var blurb_changes = {};
			if (changed.$$scope) blurb_changes.$$scope = { changed, ctx };
			blurb.$set(blurb_changes);

			var example0_changes = {};
			if (changed.$$scope) example0_changes.$$scope = { changed, ctx };
			example0.$set(example0_changes);

			var example1_changes = {};
			if (changed.$$scope) example1_changes.$$scope = { changed, ctx };
			example1.$set(example1_changes);

			var example2_changes = {};
			if (changed.$$scope) example2_changes.$$scope = { changed, ctx };
			example2.$set(example2_changes);

			var example3_changes = {};
			if (changed.$$scope) example3_changes.$$scope = { changed, ctx };
			example3.$set(example3_changes);

			var section0_changes = {};
			if (changed.$$scope) section0_changes.$$scope = { changed, ctx };
			section0.$set(section0_changes);

			var section1_changes = {};
			if (changed.$$scope) section1_changes.$$scope = { changed, ctx };
			section1.$set(section1_changes);
		},

		i: function intro(local) {
			if (current) return;
			transition_in(hero.$$.fragment, local);

			transition_in(blurb.$$.fragment, local);

			transition_in(example0.$$.fragment, local);

			transition_in(example1.$$.fragment, local);

			transition_in(example2.$$.fragment, local);

			transition_in(example3.$$.fragment, local);

			transition_in(section0.$$.fragment, local);

			transition_in(section1.$$.fragment, local);

			current = true;
		},

		o: function outro(local) {
			transition_out(hero.$$.fragment, local);
			transition_out(blurb.$$.fragment, local);
			transition_out(example0.$$.fragment, local);
			transition_out(example1.$$.fragment, local);
			transition_out(example2.$$.fragment, local);
			transition_out(example3.$$.fragment, local);
			transition_out(section0.$$.fragment, local);
			transition_out(section1.$$.fragment, local);
			current = false;
		},

		d: function destroy(detaching) {
			detach_dev(meta0);
			detach_dev(meta1);
			detach_dev(meta2);

			if (detaching) {
				detach_dev(t0);
			}

			destroy_component(hero, detaching);

			if (detaching) {
				detach_dev(t1);
			}

			destroy_component(blurb, detaching);

			if (detaching) {
				detach_dev(t2);
				detach_dev(div);
			}

			destroy_component(example0);

			destroy_component(example1);

			destroy_component(example2);

			destroy_component(example3);

			if (detaching) {
				detach_dev(t6);
			}

			destroy_component(section0, detaching);

			if (detaching) {
				detach_dev(t7);
			}

			destroy_component(section1, detaching);
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_fragment$4.name, type: "component", source: "", ctx });
	return block;
}

class Index extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, null, create_fragment$4, safe_not_equal, []);
		dispatch_dev("SvelteRegisterComponent", { component: this, tagName: "Index", options, id: create_fragment$4.name });
	}
}

export default Index;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
